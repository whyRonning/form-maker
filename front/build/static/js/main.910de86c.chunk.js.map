{"version":3,"sources":["components/header/header.tsx","store/authReducer.ts","store/menuReducer.ts","components/header/headerContainer.tsx","components/contact/help.tsx","components/contact/helpContainer.tsx","components/main-components/form-display/FormInput.tsx","components/main-components/get-code/HtmlCreator.tsx","components/main-components/get-code/HtmlCreatorBlock.tsx","components/main-components/form-display/Form.tsx","accets/img/Template-1.png","accets/img/Template-2.png","accets/img/Template-3.png","accets/img/Template-4.png","store/initialTemplates.ts","store/mainReducer.ts","components/main-components/form-display/FormContainer.tsx","components/main-components/form-customization/customization/SeeingFields.tsx","components/main-components/form-customization/customization/Field.tsx","components/main-components/form-customization/customization/DataFilling.tsx","components/graphQl-fragments/templateFragment.ts","components/main-components/form-customization/customization/DataFillingContainer.tsx","components/main-components/form-customization/miniHeader.tsx","components/main-components/form-customization/templates/templates.tsx","components/main-components/form-customization/templates/filter.tsx","components/main-components/form-customization/templates/filterContainer.tsx","selectors/templateSelector.ts","components/main-components/form-customization/templates/templatesContainer.tsx","components/main-components/form-customization/user-templates/personalTemplatesCreator.tsx","components/main-components/form-customization/user-templates/personalTemplatesContainer.tsx","components/main-components/form-customization/user-templates/personalTemplates.tsx","components/main-components/form-customization/MiniHeaderSwitchContainer.ts","components/main-components/form-customization/MiniHeaderSwitch.tsx","components/main-components/MainContainer.tsx","components/main-components/Main.tsx","accets/img/preloader.webp","components/preloader/preloader.tsx","components/acc/acceptAccount.tsx","components/auth/auth.tsx","components/auth/authContainer.tsx","components/registration/registration.tsx","components/registration/registrationContainer.tsx","components/acc/accountContainer.tsx","AppContainer.tsx","App.tsx","serviceWorker.js","store/store.ts","accets/FAIcons.js","index.tsx"],"names":["Header","props","className","to","isAuth","onClick","handler","data","userTemplates","token","actions","isAuthAC","templates","type","userTemplatesAC","deconsteUserTemplatesAC","template","logoutAC","stateOfHeader","stateOfHeaderAC","HeaderContainer","connect","state","authReducer","menuReducer","authActions","HeaderConnector","localStorage","removeItem","message","success","Form","onSubmit","e","preventDefault","sendMessage","variables","name","email","messages","value","onChange","setName","currentTarget","placeholder","required","setEmail","setMessages","disabled","loading","HelpContainer","useState","useMutation","gql","onCompleted","onError","error","warn","FormInput","Field","numOfFields","labelsPosition","style","justifySelf","width","display","descriptionPosition","color","descriptionColor","fieldDescription","height","marginLeft","htmlFor","i","id","HtmlCreator","inputs","map","title","join","generalBackgroundColor","formWidth","formBackgroundColor","formMarginTop","titleColor","buttWidth","buttHeight","buttTextColor","buttColor","textColor","HtmlCreatorBlock","stateOfForm","changeState","whiteSpace","InputsCreator","backgroundColor","marginTop","gridTemplateColumns","onMouseOver","background","onMouseLeave","action","method","fields","nanoid","settings","nameOfTemplate","image","Template1","group","Template2","Template3","Template4","selectedInput","isFillingVision","isFilterVision","filters","ApplyUserTemplateAC","ApplyTemplateAC","ChangeStateOFFormAC","ChangeFormBackgroundColorAC","ChangeButtTextColorAC","ChangeIsFilterVision","ChangeButtColorAC","ChangeGeneralBackgroundColorAC","ChangeAddFieldAC","ChangeInputsAC","index","ChangeFillingVisionAC","ChangeTitleAC","ChangeSelectedInputAC","ChangeDeconsteFieldAC","ChangeNumOfFieldsAC","ChangeLabelsPositionAC","FiltersAC","ChangeFormMarginTopAC","ChangeButtHeightAC","ChangeButtWidthAC","ChangeFormWidthAC","ChangeTextColorAC","ChangeDescriptionColorAC","ChangeTitleColorAC","FormContainer","mainReducer","FormConnector","SeeingFields","isObjVision","setIsObjVision","DeconsteField","a","setTimeout","icon","changeInput","React","memo","useEffect","setPlaceholder","setTypeOfInput","setFieldDescription","setDescriptionPosition","setHeight","String","setWidth","setSize","typeOfInput","size","changeInputHandler","target","step","min","max","Number","Button","checked","process","DataFilling","InputsMaker","saveTemplate","warning","templateFragment","DataFillingContainer","DataFillingConnector","refetchQueries","val","MiniHeader","cursor","Templates","src","alt","Filter","optionsWrapper","VisionFilter","FilterContainer","FilterConnector","TemplateSelector","createSelector","filter","indexOf","TemplatesContainer","TemplatesConnector","TemplatesMaker","PersonalTemplatesCreator","deconsteTempl","border","margin","marginBottom","PersonalTemplatesContainer","PersonalTemplatesConnector","userTemplatesMaker","MiniHeaderSwitchContainer","MainContainer","Preloader","preloader","AcceptAccount","Id","useParams","useQuery","Auth","formRes","password","passVision","setPassword","setPassVision","AuthContainer","AuthConnector","useLazyQuery","setItem","JSON","stringify","auth","err","Registration","regFun","passwordAccess","setPasswordAccess","RegistrationContainer","AccountContainer","AccountConnector","loginState","setLoginState","AppContainer","userToken","getItem","replace","notifyOnNetworkStatusChange","getUsersData","path","element","Boolean","window","location","hostname","match","reducers","combineReducers","newObj","parse","splice","length","substr","push","posEl","forEach","copyState","store","createStore","library","add","faAngleDoubleRight","faAngleDoubleLeft","faCogs","faTimes","faEye","faEyeSlash","client","ApolloClient","cache","InMemoryCache","typePolicies","UserData","keyFields","uri","ReactDOM","render","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.910de86c.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\ntype props = {\n  isAuth: boolean;\n  handler: () => void;\n};\nexport const Header = (props: props) => (\n  <header>\n    <div className=\"header\">\n      <span className=\"logo-txt\">\n        <NavLink to=\"/\">FormMaker</NavLink>\n      </span>\n      <NavLink to=\"/\">Главная</NavLink>\n      <NavLink to=\"/help\">Помощь</NavLink>\n      {props.isAuth ? (\n        <p onClick={props.handler}>Выйти</p>\n      ) : (\n        <NavLink to=\"/account\">Войти</NavLink>\n      )}\n    </div>\n  </header>\n);\n","import { actionsTypes } from \"./store\";\n\ntype dataInputNumParamType = {\n  id: string;\n  name: string | null;\n  placeholder: string | null;\n  type: string | null;\n  width: number | null;\n  height: number | null;\n  fieldDescription: string | null;\n  descriptionPosition: \"inline\" | \"bottom\";\n};\ntype dataAuthType = typeof data;\n\nexport type dataType = {\n  generalBackgroundColor: string;\n  formBackgroundColor: string;\n  textColor: string;\n  buttColor: string;\n  buttTextColor: string;\n  title: string;\n  descriptionColor: string;\n  titleColor: string;\n  labelsPosition: string;\n  formWidth: number;\n  formMarginTop: number;\n  buttWidth: number;\n  buttHeight: number;\n  numOfFields: number;\n  inputs: Array<dataInputNumParamType>;\n};\nexport const data = {\n  isAuth: false,\n  userTemplates: [] as Array<dataType>,\n  token: \"\",\n};\ntype actionTypes = actionsTypes<typeof actions>;\n\nexport const authReducer = (\n  state: dataAuthType = data,\n  action: actionTypes\n) => {\n  switch (action.type) {\n    case \"Auth\": {\n      const copyState = { ...state };\n      copyState.isAuth = action.isAuth;\n      copyState.userTemplates = action.templates;\n      copyState.token = action.token;\n      return { ...copyState };\n    }\n    case \"userTemplates\": {\n      const copyState = JSON.parse(JSON.stringify(state));\n      copyState.userTemplates.push(action.userTemplates);\n      return { ...copyState };\n    }\n    case \"deconsteUserTemplatesAC\": {\n      const copyState = JSON.parse(JSON.stringify(state));\n      copyState.userTemplates.splice(action.template, 1);\n      return { ...copyState };\n    }\n    case \"logout\": {\n      const copyState = { ...state };\n      copyState.isAuth = false;\n      return { ...copyState };\n    }\n    default: {\n      return state;\n    }\n  }\n};\nexport const actions = {\n  isAuthAC: (isAuth: boolean, templates: Array<dataType>, token: string) =>\n    ({\n      type: \"Auth\",\n      isAuth,\n      templates,\n      token,\n    } as const),\n  userTemplatesAC: (userTemplates: dataType) =>\n    ({\n      type: \"userTemplates\",\n      userTemplates,\n    } as const),\n  deconsteUserTemplatesAC: (template: number) =>\n    ({\n      type: \"deconsteUserTemplatesAC\",\n      template,\n    } as const),\n  logoutAC: () =>\n    ({\n      type: \"logout\",\n    } as const),\n};\n","type dataType = {\n  stateOfHeader: number;\n};\nexport const data: dataType = {\n  stateOfHeader: 1,\n};\nexport const menuReducer = (\n  state = data,\n  action: ReturnType<typeof stateOfHeaderAC>\n) => {\n  switch (action.type) {\n    case \"stateOfHeader\": {\n      return { ...state, stateOfHeader: Number(action.stateOfHeader) };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n};\ntype stateOfHeaderACType = {\n  type: string;\n  stateOfHeader: number;\n};\nexport const stateOfHeaderAC = (\n  stateOfHeader: number\n): stateOfHeaderACType => ({\n  type: \"stateOfHeader\",\n  stateOfHeader,\n});\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { Header } from \"./header\";\nimport { GlobalState } from \"../../store/store\";\nimport React from \"react\";\nimport { actions as authActions } from \"../../store/authReducer\";\nimport { stateOfHeaderAC } from \"../../store/menuReducer\";\nimport { message } from \"antd\";\nconst MapStateToProps = (state: GlobalState) => ({\n  isAuth: state.authReducer.isAuth,\n  stateOfHeader: state.menuReducer.stateOfHeader,\n});\nconst HeaderBlock = (props: propsType) => {\n  const handler = () => {\n    localStorage.removeItem(\"token\");\n    props.logoutAC();\n    if (props.stateOfHeader === 3) {\n      props.stateOfHeaderAC(2);\n    }\n    message.success(\"Вы вышли из аккаунта\");\n  };\n  return <Header handler={handler} isAuth={props.isAuth} />;\n};\nexport const HeaderConnector = connect(MapStateToProps, {\n  logoutAC: authActions.logoutAC,\n  stateOfHeaderAC,\n});\ntype propsType = ConnectedProps<typeof HeaderConnector>;\nexport const HeaderContainer = HeaderConnector(HeaderBlock);\n","import React from \"react\";\ntype propsType = {\n  name: string;\n  email: string;\n  messages: string;\n  loading: boolean;\n  setName: (name: string) => void;\n  setEmail: (email: string) => void;\n  setMessages: (message: string) => void;\n  sendMessage: (obj: {\n    variables: { name: string; email: string; message: string };\n  }) => void;\n};\nexport const Form = (props: propsType) => (\n  <div className=\"HelpForm\">\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.sendMessage({\n          variables: {\n            name: props.name,\n            email: props.email,\n            message: props.messages,\n          },\n        });\n      }}\n    >\n      <h1>Мы ответим вам в течение часа</h1>\n      <input\n        className=\"help-input\"\n        value={props.name}\n        onChange={(e) => {\n          props.setName(e.currentTarget.value);\n        }}\n        placeholder=\"Ваше имя\"\n        type=\"text\"\n        required\n      />\n      <input\n        className=\"help-input\"\n        value={props.email}\n        onChange={(e) => {\n          props.setEmail(e.currentTarget.value);\n        }}\n        placeholder=\"Почта\"\n        type=\"email\"\n        required\n      />\n      <textarea\n        className=\"help-input\"\n        value={props.messages}\n        onChange={(e) => {\n          props.setMessages(e.currentTarget.value);\n        }}\n        placeholder=\"Сообщение\"\n        required\n      />\n      <div className=\"CheckMessageAccept\">\n        <label>\n          Отправляя сообщение, я даю соглашение на обработку персональных данных\n        </label>\n        <input name=\"agree\" type=\"checkbox\" required />\n      </div>\n      <button type=\"submit\" disabled={props.loading}>\n        Отправить\n      </button>\n    </form>\n  </div>\n);\n","import React, { useState } from \"react\";\nimport { Form } from \"./help\";\nimport { message } from \"antd\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nexport const HelpContainer = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [messages, setMessages] = useState(\"\");\n  const [sendMessage, { loading }] = useMutation(\n    gql`\n      mutation sendMessage($name: String!, $email: String!, $message: String!) {\n        sendMessage(name: $name, email: $email, message: $message)\n      }\n    `,\n    {\n      onCompleted: () => {\n        message.success(\"Сообщение отправлено\");\n      },\n      onError: (error) => {\n        message.warn(\n          error.message === \"data\"\n            ? \"Не все данные были введены\"\n            : \"Что-то пошло не так\"\n        );\n      },\n    }\n  );\n  return (\n    <Form\n      setEmail={setEmail}\n      email={email}\n      loading={loading}\n      name={name}\n      messages={messages}\n      sendMessage={sendMessage}\n      setMessages={setMessages}\n      setName={setName}\n    />\n  );\n};\n","import React from \"react\";\ntype propsType = {\n  type: string;\n  numOfFields: number;\n  labelsPosition: string;\n  name: string;\n  descriptionPosition: string;\n  descriptionColor: string;\n  width: number;\n  height: number;\n  disabled?: boolean;\n  placeholder: string;\n  fieldDescription: string;\n  i: number;\n};\nexport const FormInput = (props: propsType) => {\n  const Field = () => {\n    if (props.type === \"textarea\") {\n      return (\n        <div\n          className={\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\n              ? \"wrapper-Form-Intputs-two-textarea \"\n              : \"wrapper-Form-Intputs-one-textarea\"\n          }\n          style={\n            props.numOfFields === 1 && props.labelsPosition === \"top\"\n              ? { justifySelf: \"center\", width: \"fit-content\" }\n              : {}\n          }\n        >\n          {props.name ? (\n            <div className=\"textOfInputs\">\n              <label>{`${props.name}`}</label>\n              <p\n                style={{\n                  display:\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\n                  color: props.descriptionColor,\n                }}\n              >\n                {!props.fieldDescription\n                  ? \"\"\n                  : props.descriptionPosition === \"inline\"\n                  ? ` (${props.fieldDescription})`\n                  : `${props.fieldDescription}`}\n              </p>\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <textarea\n            disabled={props.disabled}\n            style={{\n              width: props.width + \"vw\",\n              height: props.height + \"vh\",\n              color: \"black\",\n            }}\n            placeholder={props.placeholder}\n            required\n          />\n        </div>\n      );\n    } else if (props.type === \"file\") {\n      return (\n        <div\n          className={\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\n              ? \"wrapper-Form-Intputs-two-textarea \"\n              : \"wrapper-Form-Intputs-one-textarea\"\n          }\n          style={{\n            justifySelf:\n              props.numOfFields === 1 && props.labelsPosition === \"top\"\n                ? \"center\"\n                : \"left\",\n            width: \"fit-content\",\n            marginLeft:\n              props.numOfFields === 2 && props.labelsPosition === \"top\"\n                ? \"10%\"\n                : \"\",\n          }}\n        >\n          {props.name ? (\n            <div className=\"textOfInputs\">\n              <label>{`${props.name}`}</label>\n              <p\n                style={{\n                  display:\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\n                  color: props.descriptionColor,\n                }}\n              >\n                {!props.fieldDescription\n                  ? \"\"\n                  : props.descriptionPosition === \"inline\"\n                  ? ` (${props.fieldDescription})`\n                  : `${props.fieldDescription}`}\n              </p>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <input\n            placeholder={props.placeholder}\n            type={props.type || \"text\"}\n            required\n            disabled={props.disabled}\n            style={{\n              color: \"black\",\n            }}\n          />\n        </div>\n      );\n    } else if (props.type === \"checkbox\") {\n      return (\n        <div\n          className={\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\n              ? \"inputRadio wrapper-Form-CheckBoxes-two \"\n              : \"inputRadio wrapper-Form-CheckBoxes-one\"\n          }\n          style={\n            props.numOfFields === 1 && props.labelsPosition === \"top\"\n              ? { justifySelf: \"center\" }\n              : props.numOfFields === 2 && props.labelsPosition === \"top\"\n              ? { marginLeft: \"10%\" }\n              : {}\n          }\n        >\n          <div className=\"textOfInputs\">\n            {props.name ? (\n              <label htmlFor={props.disabled ? \"\" : \"inputRadio\" + props.i}>\n                {props.name}\n              </label>\n            ) : (\n              \"\"\n            )}\n            <input\n              style={{\n                width: props.width + \"vw\",\n                height: props.height + \"vh\",\n                color: \"black\",\n              }}\n              id={\"inputRadio\" + props.i}\n              type={props.type || \"radio\"}\n              disabled={props.disabled}\n              required\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={\n            props.labelsPosition === \"top\"\n              ? \"wrapper-Form-Intputs-top\"\n              : \"wrapper-Form-Intputs-left\"\n          }\n        >\n          {props.name ? (\n            <div className=\"textOfInputs\">\n              <label>{`${props.name} `}</label>\n              <p\n                style={{\n                  display:\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\n                  color: props.descriptionColor,\n                }}\n              >\n                {!props.fieldDescription\n                  ? \"\"\n                  : props.descriptionPosition === \"inline\"\n                  ? ` (${props.fieldDescription})`\n                  : `${props.fieldDescription}`}\n              </p>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <input\n            placeholder={props.placeholder}\n            type={props.type || \"text\"}\n            required\n            disabled={props.disabled}\n            style={{\n              width: props.width + \"vw\",\n              height: props.height + \"vh\",\n              color: \"black\",\n            }}\n          />\n        </div>\n      );\n    }\n  };\n  return <Field />;\n};\n","import { dataInputNumParamType } from \"../../../store/mainReducer\";\n\ntype propsType = {\n  generalBackgroundColor: string;\n  formBackgroundColor: string;\n  descriptionColor: string;\n  textColor: string;\n  buttTextColor: string;\n  formWidth: number;\n  buttWidth: number;\n  labelsPosition: string;\n  titleColor: string;\n  buttColor: string;\n  formMarginTop: number;\n  numOfFields: number;\n  buttHeight: number;\n  title: string;\n  inputs: Array<dataInputNumParamType>;\n};\nexport const HtmlCreator = (props: propsType) => {\n  const inputs = props.inputs.map((e) => {\n    if (e.type === \"textarea\") {\n      return `<div class=\"wrapper-form-inputs-textarea\"><div class=\"textOfInputs\">${\n        e.name ? `<label>${e.name}</label>` : ``\n      }${\n        e.fieldDescription\n          ? `<p style=\"${\n              e.descriptionPosition === \"inline\" ? \"display:inline\" : \"\"\n            }\">${\n              e.descriptionPosition === \"inline\"\n                ? \"(\" + e.fieldDescription + \")\"\n                : e.fieldDescription\n            }</p>`\n          : \"\"\n      }\n      </div><textarea style=\"height:${e.height}vh;width:${\n        e.width\n      }vw;\" placeholder=\"${e.placeholder}\"/></div>`;\n    } else if (e.type === \"checkbox\") {\n      return `<div class=\"wrapper-form-inputs\"><div style=\"display:grid;\n      grid-template-columns: 1fr 1fr;align-items: center;\" class=\"textOfInputs\">${\n        e.name ? `<label>${e.name}</label>` : ``\n      }\n      <input style=\"color:black;width:${e.width}vw;height:${\n        e.height\n      }vh\" placeholder=\"${e.placeholder}\" type=\"${e.type}\"/></div></div>`;\n    } else {\n      /************Остальное ****************/\n      return `<div class=\"wrapper-form-inputs\"><div class=\"textOfInputs\" >${\n        e.name ? `<label>${e.name}</label>` : ``\n      }${\n        e.fieldDescription\n          ? `<p style=\"${\n              e.descriptionPosition === \"inline\" ? \"display:inline\" : \"\"\n            }\">${\n              e.descriptionPosition === \"inline\"\n                ? \"(\" + e.fieldDescription + \")\"\n                : e.fieldDescription\n            }</p>`\n          : \"\"\n      }\n      </div><input style=\"color:black;width:${e.width}vw;height:${\n        e.height\n      }vh\" placeholder=\"${e.placeholder}\" type=\"${e.type}\"/></div>`;\n    }\n  });\n  return `Html: \\n <div class=\"formBlock\">\\n<form class=\"form\" action=\"/\" method=\"Post\"/> \\n <h1 class=\"FormTitle\">${\n    props.title || \"Заголовок\"\n  }</h1> \\n <div class=\"wrapperOfInputsCreator\">${inputs.join(\n    \"\\n\"\n  )}</div> \\n <button onclick=\"return false\">Отправить</button>\\n</form>\\n</div>\n   \\n CSS:\\n @import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,400;0,600;0,700;0,800;0,900;1,400;1,600;1,700;1,800;1,900&display=swap');\n    * {margin: 0;padding: 0;font-family: 'Nunito', sans-serif;} \n   input:not([type=\"color\"]) { padding-left: .2vw;}\n   input { border-radius: 5px;border-width: 1px; outline: none;}\n   .formBlock { background-color:${\n     props.generalBackgroundColor\n   };width: 100%;display: grid;justify-items: center;grid-gap: 2vw;} \n   .formBlock .form {text-align:center;margin-bottom: 2vw;font-size: 1.7vmin;height: -moz-fit-content;height: fit-content;padding: 2vw 3vw 2vw 3vw;grid-auto-rows: minmax(auto, 2vw);width:${\n     props.formWidth\n   }%;background-color:${props.formBackgroundColor};margin-top:${\n    props.formMarginTop\n  }vh}\n   .formBlock .form h1 {color:${\n     props.titleColor\n   };grid-column: 1/3;text-align: center;}\n   .formBlock .form button{cursor: pointer;width:${props.buttWidth}vw;height:${\n    props.buttHeight\n  }vh;color:${props.buttTextColor};background-color:${\n    props.buttColor\n  };outline: none;font-size: 0.9vw;border: none;margin-top: 2vw;transition: all ease 0.3s;}\n  .formBlock .form button:hover {border:1px solid;color:${\n    props.buttColor\n  };background-color:${props.formBackgroundColor}}\n  .formBlock .form .wrapperOfInputsCreator {display: grid;grid-gap: 3vw 5vw;grid-auto-rows: minmax(auto, auto);grid-template-columns: ${\n    props.numOfFields === 2 && props.labelsPosition === \"top\"\n      ? \"1fr 1fr\"\n      : \"1fr\"\n  };align-self: center;padding-top: 2vw;padding-bottom: 2vw; margin-bottom: 2vw;margin-top: 2vw;border-radius: .8vw;}\n   .formBlock .form .wrapperOfInputsCreator .wrapper-form-inputs-textarea{display: grid;text-align: left;grid-template-columns: 1fr;grid-column-start: 1;grid-column-end: ${\n     props.numOfFields === 2 && props.labelsPosition === \"top\" ? 3 : 2\n   };${\n    props.numOfFields === 2 && props.labelsPosition === \"top\"\n      ? \"justify-self: center;\"\n      : \"\"\n  }${\n    props.numOfFields === 1 && props.labelsPosition === \"top\"\n      ? \"justify-self: center;width: fit-content;\"\n      : \"width: 100%;margin-left:8vw;\"\n  }}\n  .formBlock .form .wrapperOfInputsCreator .textOfInputs{grid-gap: 1vw 1vw;align-self: center;}\n  .textOfInputs p{ color:${props.descriptionColor}}\n  .textOfInputs label {color:${props.textColor}}\n  .wrapper-form-inputs-textarea textarea {color:black;max-height: 18vh;min-height: 15vh;grid-column: 1/3;}\n  .formBlock .form .wrapperOfInputsCreator .wrapper-form-inputs {display: grid;text-align: left;${\n    props.labelsPosition === \"top\"\n      ? \"grid-template-columns: 1fr;justify-self: center;width: -moz-fit-content;width: fit-content;\"\n      : \"grid-template-columns: 1fr 1fr;width: 100%;\"\n  }}\n  `;\n};\n","import React from \"react\";\nimport { HtmlCreator } from \"./HtmlCreator\";\nimport { dataInputNumParamType } from \"../../../store/mainReducer\";\n\ntype propsType = {\n  generalBackgroundColor: string;\n  formBackgroundColor: string;\n  descriptionColor: string;\n  textColor: string;\n  buttTextColor: string;\n  formWidth: number;\n  buttWidth: number;\n  labelsPosition: string;\n  stateOfForm: boolean;\n  changeState: () => void;\n  titleColor: string;\n  buttColor: string;\n  formMarginTop: number;\n  numOfFields: number;\n  buttHeight: number;\n  title: string;\n  inputs: Array<dataInputNumParamType>;\n};\nexport const HtmlCreatorBlock = (props: propsType) => (\n  <div className={props.stateOfForm ? \"CodeBlock hidden\" : \"CodeBlock shown\"}>\n    <div className=\"Code\">\n      <p className=\"cancel\" onClick={props.changeState}>\n        ×\n      </p>\n      <p style={{ whiteSpace: \"pre-line\" }}>\n        {HtmlCreator({\n          generalBackgroundColor: props.generalBackgroundColor,\n          formBackgroundColor: props.formBackgroundColor,\n          titleColor: props.titleColor,\n          descriptionColor: props.descriptionColor,\n          textColor: props.textColor,\n          buttColor: props.buttColor,\n          buttTextColor: props.buttTextColor,\n          formMarginTop: props.formMarginTop,\n          formWidth: props.formWidth,\n          buttHeight: props.buttHeight,\n          buttWidth: props.buttWidth,\n          numOfFields: props.numOfFields,\n          title: props.title,\n          labelsPosition: props.labelsPosition,\n          inputs: props.inputs,\n        })}\n      </p>\n    </div>\n    <div onClick={props.changeState} className=\"modal\" />\n  </div>\n);\n","import React from \"react\";\nimport { FormInput } from \"./FormInput\";\nimport { HtmlCreatorBlock } from \"../get-code/HtmlCreatorBlock\";\nimport { dataInputNumParamType } from \"../../../store/mainReducer\";\n\ntype propsType = {\n  inputs: Array<dataInputNumParamType>;\n  generalBackgroundColor: string;\n  numOfFields: number;\n  buttHeight: number;\n  buttWidth: number;\n  formBackgroundColor: string;\n  textColor: string;\n  buttTextColor: string;\n  buttColor: string;\n  stateOfForm: boolean;\n  title: string;\n  titleColor: string;\n  descriptionColor: string;\n  formWidth: number;\n  formMarginTop: number;\n  labelsPosition: string;\n  changeState: () => void;\n};\nexport const Form = (props: propsType) => {\n  if (props.inputs) {\n    const InputsCreator = props.inputs.map((e, i) => (\n      <FormInput\n        key={i}\n        labelsPosition={props.labelsPosition}\n        i={i}\n        numOfFields={props.numOfFields}\n        type={e.type || \"text\"}\n        name={e.name || \"\"}\n        placeholder={e.placeholder || \"\"}\n        fieldDescription={e.fieldDescription || \"\"}\n        descriptionPosition={e.descriptionPosition || \"\"}\n        width={e.width || 20}\n        height={e.height || 5}\n        descriptionColor={props.descriptionColor}\n      />\n    ));\n    return (\n      <>\n        <div\n          className=\"formBlock\"\n          style={{ backgroundColor: props.generalBackgroundColor }}\n        >\n          <form\n            onSubmit={(e) => e.preventDefault()}\n            className=\"form\"\n            style={{\n              color: props.textColor,\n              backgroundColor: props.formBackgroundColor,\n              width: props.formWidth + \"%\",\n              marginTop: props.formMarginTop + \"vh\",\n            }}\n          >\n            <h1 className=\"FormTitle\" style={{ color: props.titleColor }}>\n              {props.title || \"Заголовок\"}\n            </h1>\n            <div\n              className=\"wrapperOfInputsCreator\"\n              style={{\n                gridTemplateColumns:\n                  props.labelsPosition === \"left\" || props.numOfFields === 1\n                    ? \"1fr\"\n                    : \"1fr 1fr\",\n              }}\n            >\n              {InputsCreator}\n            </div>\n            <button\n              type=\"submit\"\n              onMouseOver={(e) => {\n                e.currentTarget.style.color = props.buttColor;\n                e.currentTarget.style.background = \"none\";\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.color = props.buttTextColor;\n                e.currentTarget.style.background = props.buttColor;\n              }}\n              style={{\n                height: props.buttHeight + \"vh\",\n                width: props.buttWidth + \"vw\",\n                color: props.buttTextColor,\n                backgroundColor: props.buttColor,\n              }}\n            >\n              Отправить\n            </button>\n          </form>\n        </div>\n        <HtmlCreatorBlock\n          generalBackgroundColor={props.generalBackgroundColor}\n          formBackgroundColor={props.formBackgroundColor}\n          titleColor={props.titleColor}\n          descriptionColor={props.descriptionColor}\n          textColor={props.textColor}\n          buttColor={props.buttColor}\n          buttTextColor={props.buttTextColor}\n          formMarginTop={props.formMarginTop}\n          formWidth={props.formWidth}\n          buttHeight={props.buttHeight}\n          buttWidth={props.buttWidth}\n          numOfFields={props.numOfFields}\n          title={props.title}\n          labelsPosition={props.labelsPosition}\n          inputs={props.inputs}\n          stateOfForm={props.stateOfForm}\n          changeState={props.changeState}\n        />\n      </>\n    );\n  } else {\n    return <form action=\"\" method=\"post\" />;\n  }\n};\n","export default __webpack_public_path__ + \"static/media/Template-1.f342ff41.png\";","export default __webpack_public_path__ + \"static/media/Template-2.018585b0.png\";","export default __webpack_public_path__ + \"static/media/Template-3.d9f10deb.png\";","export default __webpack_public_path__ + \"static/media/Template-4.58e5f7a8.png\";","import Template1 from \"../accets/img/Template-1.png\";\nimport Template2 from \"../accets/img/Template-2.png\";\nimport Template3 from \"../accets/img/Template-3.png\";\nimport Template4 from \"../accets/img/Template-4.png\";\nimport { nanoid } from \"nanoid\";\n\nexport const templates = [\n  {\n    fields: [\n      {\n        id: nanoid(),\n        name: \"Имя\",\n        placeholder: \"Имя\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        id: nanoid(),\n        name: \"Фамилия\",\n        placeholder: \"Фамилия\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        id: nanoid(),\n        name: \"Телефон\",\n        placeholder: \"Введите номер телефона\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        id: nanoid(),\n        name: \"Почта\",\n        placeholder: \"Введите почту\",\n        type: \"email\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        id: nanoid(),\n        name: \"Сообщение\",\n        placeholder: \"Сообщение\",\n        type: \"textarea\",\n        width: 60,\n        height: 15,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n    ],\n    settings: {\n      nameOfTemplate: \"Шаблон 1\",\n      image: Template1,\n      group: \"Форма обратной связи\",\n      labelsPosition: \"top\",\n      title: \"Мы ответим на любые ваши вопросы\",\n      numOfFields: 2,\n      buttWidth: 35,\n      formWidth: 68,\n      buttHeight: 6,\n      descriptionColor: \"#ffffff\",\n      formMarginTop: 2,\n      generalBackgroundColor: \"#ffffff\",\n      formBackgroundColor: \"#a3a19f\",\n      textColor: \"#ffffff\",\n      buttTextColor: \"#fdfcff\",\n      titleColor: \"#ffffff\",\n      buttColor: \"#53c6b4\",\n    },\n  },\n  {\n    fields: [\n      {\n        id: nanoid(),\n        name: \"Почта\",\n        placeholder: \"Введите почту\",\n        type: \"email\",\n        width: 15,\n        height: 4,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n    ],\n    settings: {\n      nameOfTemplate: \"Шаблон 2\",\n      image: Template2,\n      group: \"Подписка на рассылку\",\n      labelsPosition: \"left\",\n      title: \"Подписка на рассылку\",\n      numOfFields: 1,\n      formWidth: 28,\n      buttWidth: 21,\n      generalBackgroundColor: \"#ffffff\",\n      formBackgroundColor: \"#a3a19f\",\n      buttHeight: 6,\n      formMarginTop: 25,\n      descriptionColor: \"#ffffff\",\n      textColor: \"#ffffff\",\n      buttTextColor: \"#fdfcff\",\n      titleColor: \"#ffffff\",\n      buttColor: \"#53c6b4\",\n    },\n  },\n  {\n    fields: [\n      {\n        id: nanoid(),\n        name: \"Имя\",\n        placeholder: \"Имя\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        id: nanoid(),\n        name: \"Телефон\",\n        placeholder: \"Введите телефон\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n    ],\n    settings: {\n      nameOfTemplate: \"Шаблон 3\",\n      image: Template3,\n      group: \"Заказ звонка\",\n      labelsPosition: \"top\",\n      title: \"Заказ звонка\",\n      numOfFields: 2,\n      formWidth: 68,\n      generalBackgroundColor: \"#ffffff\",\n      formBackgroundColor: \"#a3a19f\",\n      buttWidth: 35,\n      buttHeight: 6,\n      formMarginTop: 23,\n      textColor: \"#ffffff\",\n      buttTextColor: \"#fdfcff\",\n      titleColor: \"#ffffff\",\n      descriptionColor: \"#ffffff\",\n      buttColor: \"#53c6b4\",\n    },\n  },\n  {\n    fields: [\n      {\n        id: nanoid(),\n        name: \"Имя\",\n        placeholder: \"Имя\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        id: nanoid(),\n        name: \"Фамилия\",\n        placeholder: \"Фамилия\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        id: nanoid(),\n        name: \"Телефон\",\n        placeholder: \"Введите телефон\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n    ],\n    settings: {\n      nameOfTemplate: \"Шаблон 4\",\n      image: Template4,\n      group: \"Оформление заказа\",\n      labelsPosition: \"top\",\n      title: \"Оформление заказа\",\n      numOfFields: 1,\n      generalBackgroundColor: \"#ffffff\",\n      formBackgroundColor: \"#a3a19f\",\n      formWidth: 36,\n      buttWidth: 23,\n      buttHeight: 6,\n      formMarginTop: 7,\n      textColor: \"#ffffff\",\n      descriptionColor: \"#ffffff\",\n      buttTextColor: \"#fdfcff\",\n      titleColor: \"#ffffff\",\n      buttColor: \"#53c6b4\",\n    },\n  },\n];\n","import { dataType as authDataType } from \"./authReducer\";\nimport { message } from \"antd\";\nimport { actionsTypes } from \"./store\";\nimport { templates } from \"./initialTemplates\";\nimport { nanoid } from \"nanoid/non-secure\";\n\n/***********************types of inputs*******************************/\nexport type dataInputNumParamType = {\n  id: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  width: number;\n  height: number;\n  fieldDescription: string;\n  descriptionPosition: \"inline\" | \"bottom\";\n};\n/***********************type of default templates*******************************/\nexport type dataTemplatesNumbersFieldsType = {\n  fields: Array<dataInputNumParamType>;\n  settings: dataTemplatesSettingsType;\n};\ntype dataTemplatesSettingsType = {\n  nameOfTemplate: string | null;\n  generalBackgroundColor: string;\n  image: string;\n  group: string;\n  labelsPosition: string;\n  title: string | null;\n  numOfFields: number;\n  formWidth: number;\n  buttWidth: number;\n  buttHeight: number;\n  formMarginTop: number;\n  formBackgroundColor: string;\n  textColor: string;\n  descriptionColor: string;\n  buttTextColor: string;\n  titleColor: string;\n  buttColor: string;\n};\n\n/******************************************* *******************************/\ntype dataType = typeof data;\n\nexport const data = {\n  generalBackgroundColor: \"#ffffff\",\n  formBackgroundColor: \"#a3a19f\",\n  selectedInput: null as null | number,\n  formWidth: 80,\n  formMarginTop: 23,\n  textColor: \"#000000\",\n  buttColor: \"#65ccbc\",\n  buttTextColor: \"#fdfcff\",\n  buttWidth: 35,\n  buttHeight: 6,\n  stateOfForm: true,\n  isFillingVision: true,\n  title: \"\",\n  descriptionColor: \"#a175ff\",\n  titleColor: \"#ffffff\",\n  labelsPosition: \"top\",\n  numOfFields: 2,\n  inputs: [\n    {\n      id: nanoid(),\n      name: \"Поле1\",\n      placeholder: \"\",\n      type: \"text\",\n      width: 20,\n      height: 3,\n      fieldDescription: \"\",\n      descriptionPosition: \"inline\",\n    },\n    {\n      id: nanoid(),\n      name: \"Поле2\",\n      placeholder: \"\",\n      type: \"text\",\n      width: 20,\n      height: 3,\n      fieldDescription: \"\",\n      descriptionPosition: \"inline\",\n    },\n  ] as Array<dataInputNumParamType>,\n  isFilterVision: false,\n  filters: [] as Array<string>,\n  templates: templates as Array<dataTemplatesNumbersFieldsType>,\n};\ntype localActionsTypes = actionsTypes<typeof actions>;\nexport const mainReducer = (\n  state = data,\n  action: localActionsTypes\n): dataType => {\n  switch (action.type) {\n    case \"formBackgroundColor\":\n      return { ...state, formBackgroundColor: action.formBackgroundColor };\n\n    case \"numOfFields\": {\n      return {\n        ...state,\n        numOfFields:\n          Number(action.numOfFields) > 2\n            ? 2\n            : Number(action.numOfFields) < 1\n            ? 1\n            : Number(action.numOfFields),\n      };\n    }\n    case \"title\": {\n      return { ...state, title: action.title };\n    }\n    case \"buttWidth\": {\n      return {\n        ...state,\n        buttWidth:\n          Number(action.buttWidth) < 0\n            ? 0\n            : Number(action.buttWidth) > 100\n            ? 100\n            : Number(action.buttWidth),\n      };\n    }\n    case \"buttHeight\": {\n      return {\n        ...state,\n        buttHeight:\n          Number(action.buttHeight) < 0 ? 0 : Number(action.buttHeight),\n      };\n    }\n    case \"isFilterVision\": {\n      return { ...state, isFilterVision: !state.isFilterVision };\n    }\n    case \"FillingVision\": {\n      return { ...state, isFillingVision: !state.isFillingVision };\n    }\n    case \"buttColor\": {\n      return { ...state, buttColor: action.buttColor };\n    }\n    case \"labelsPosition\": {\n      return { ...state, labelsPosition: action.labelsPosition };\n    }\n    case \"changeStateOfForm\": {\n      return { ...state, stateOfForm: !state.stateOfForm };\n    }\n    case \"buttTextColor\": {\n      return { ...state, buttTextColor: action.buttTextColor };\n    }\n    case \"textColor\": {\n      return { ...state, textColor: action.textColor };\n    }\n    case \"generalBackgroundColor\": {\n      return {\n        ...state,\n        generalBackgroundColor: action.generalBackgroundColor,\n      };\n    }\n    case \"selectedInput\": {\n      return { ...state, selectedInput: action.selectedInput };\n    }\n    case \"titleColor\": {\n      return { ...state, titleColor: action.titleColor };\n    }\n    case \"descriptionColor\": {\n      return { ...state, descriptionColor: action.descriptionColor };\n    }\n    case \"formWidth\": {\n      const newObj = JSON.parse(JSON.stringify(state));\n      Number(action.formWidth) <= 0\n        ? (newObj.formWidth = 1)\n        : Number(action.formWidth) > 100\n        ? (newObj.formWidth = 100)\n        : (newObj.formWidth = Number(action.formWidth));\n      return { ...newObj };\n    }\n    case \"formMarginTop\": {\n      const newObj = JSON.parse(JSON.stringify(state));\n      Number(action.formMarginTop) < 0\n        ? (newObj.formMarginTop = 0)\n        : Number(action.formMarginTop) > 500\n        ? (newObj.formMarginTop = 500)\n        : (newObj.formMarginTop = Number(action.formMarginTop));\n      return { ...newObj };\n    }\n    case \"deconsteField\": {\n      const newObj = JSON.parse(JSON.stringify(state));\n      newObj.inputs.splice(action.index, 1);\n      return { ...newObj };\n    }\n    case \"inputs\": {\n      const newObj = JSON.parse(JSON.stringify(state));\n      newObj.inputs[action.index] = {\n        id: action.data.id,\n        name:\n          action.data.name.length >= 50\n            ? action.data.name.substr(0, 50)\n            : action.data.name,\n        placeholder:\n          action.data.type !== \"checkbox\" ? action.data.placeholder : \"\",\n\n        type: action.data.type,\n        fieldDescription: action.data.fieldDescription,\n        descriptionPosition: action.data.descriptionPosition || \"inline\",\n        width: Number(action.data.width) || 20,\n        height: Number(action.data.height) || 3,\n      };\n      return newObj;\n    }\n    case \"addField\": {\n      const newObj = JSON.parse(JSON.stringify(state));\n      if (newObj.inputs.length !== 15) {\n        newObj.inputs.push({\n          id: nanoid(),\n          name: `Поле${newObj.inputs.length + 1 || 1}`,\n          placeholder: \"\",\n          type: \"text\",\n          width: 20,\n          height: 3,\n        });\n      }\n      return newObj;\n    }\n    case \"ApplyUserTemplate\": {\n      const newObj = JSON.parse(JSON.stringify(state));\n      newObj.inputs = action.data.inputs;\n      newObj.labelsPosition = action.data.labelsPosition || \"top\";\n      newObj.title = action.data.title || \"Заголовок\";\n      newObj.numOfFields = action.data.numOfFields || 1;\n      newObj.titleColor = action.data.titleColor || \"#ffffff\";\n      newObj.generalBackgroundColor =\n        action.data.generalBackgroundColor || \"#ffffff\";\n      newObj.descriptionColor = action.data.descriptionColor || \"#a175ff\";\n      newObj.formBackgroundColor = action.data.formBackgroundColor || \"#a3a19f\";\n      newObj.formWidth = action.data.formWidth || 80;\n      newObj.textColor = action.data.textColor || \"#ffffff\";\n      newObj.formMarginTop = action.data.formMarginTop || 23;\n      newObj.buttColor = action.data.buttColor || \"#a175ff\";\n      newObj.buttTextColor = action.data.buttTextColor || \"#fdfcff\";\n      newObj.buttHeight = action.data.buttHeight || \"6\";\n      newObj.buttWidth = action.data.buttWidth || \"35\";\n      message.success(\"Шаблон применен\");\n      return { ...newObj };\n    }\n    case \"ApplyTemplate\": {\n      const newObj = JSON.parse(JSON.stringify(state));\n      newObj.inputs = action.data.fields;\n      newObj.labelsPosition = action.data.settings.labelsPosition || \"top\";\n      newObj.title = action.data.settings.title || \"Заголовок\";\n      newObj.numOfFields = action.data.settings.numOfFields || 1;\n      newObj.titleColor = action.data.settings.titleColor || \"#ffffff\";\n      newObj.generalBackgroundColor =\n        action.data.settings.generalBackgroundColor || \"#ffffff\";\n      newObj.descriptionColor =\n        action.data.settings.descriptionColor || \"#a175ff\";\n      newObj.formBackgroundColor =\n        action.data.settings.formBackgroundColor || \"#a3a19f\";\n      newObj.formWidth = action.data.settings.formWidth || 80;\n      newObj.textColor = action.data.settings.textColor || \"#ffffff\";\n      newObj.formMarginTop = action.data.settings.formMarginTop || 23;\n      newObj.buttColor = action.data.settings.buttColor || \"#a175ff\";\n      newObj.buttTextColor = action.data.settings.buttTextColor || \"#fdfcff\";\n      newObj.buttHeight = action.data.settings.buttHeight || \"6\";\n      newObj.buttWidth = action.data.settings.buttWidth || \"35\";\n      message.success(\"Шаблон применен\");\n      return { ...newObj };\n    }\n    case \"filters\": {\n      const newObj = JSON.parse(JSON.stringify(state));\n      let posEl: Array<string | number> = [];\n      newObj.filters.forEach((e: string, i: number) => {\n        if (e === action.filters) {\n          posEl = [e, i];\n        }\n      });\n      posEl[0]\n        ? newObj.filters.splice(posEl[1], 1)\n        : newObj.filters.push(action.filters);\n      return { ...newObj };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n};\nexport const actions = {\n  ApplyUserTemplateAC: (data: authDataType) =>\n    ({\n      type: \"ApplyUserTemplate\",\n      data: data,\n    } as const),\n  ApplyTemplateAC: (data: dataTemplatesNumbersFieldsType) =>\n    ({\n      type: \"ApplyTemplate\",\n      data: data,\n    } as const),\n  ChangeStateOFFormAC: () =>\n    ({\n      type: \"changeStateOfForm\",\n    } as const),\n  ChangeFormBackgroundColorAC: (formBackgroundColor: string) =>\n    ({\n      type: \"formBackgroundColor\",\n      formBackgroundColor,\n    } as const),\n  ChangeButtTextColorAC: (buttTextColor: string) =>\n    ({\n      type: \"buttTextColor\",\n      buttTextColor,\n    } as const),\n  ChangeIsFilterVision: () =>\n    ({\n      type: \"isFilterVision\",\n    } as const),\n  ChangeButtColorAC: (buttColor: string) =>\n    ({\n      type: \"buttColor\",\n      buttColor,\n    } as const),\n  ChangeGeneralBackgroundColorAC: (generalBackgroundColor: string) =>\n    ({\n      type: \"generalBackgroundColor\",\n      generalBackgroundColor,\n    } as const),\n  ChangeAddFieldAC: () =>\n    ({\n      type: \"addField\",\n    } as const),\n  ChangeInputsAC: (data: dataInputNumParamType, index: number) =>\n    ({\n      type: \"inputs\",\n      data,\n      index,\n    } as const),\n  ChangeFillingVisionAC: () =>\n    ({\n      type: \"FillingVision\",\n    } as const),\n  ChangeTitleAC: (title: string) =>\n    ({\n      type: \"title\",\n      title: title,\n    } as const),\n  ChangeSelectedInputAC: (selectedInput: number | null) =>\n    ({\n      type: \"selectedInput\",\n      selectedInput: selectedInput,\n    } as const),\n  ChangeDeconsteFieldAC: (index: number) =>\n    ({\n      type: \"deconsteField\",\n      index: index,\n    } as const),\n  ChangeNumOfFieldsAC: (numOfFields: string) =>\n    ({\n      type: \"numOfFields\",\n      numOfFields: numOfFields,\n    } as const),\n  ChangeLabelsPositionAC: (labelsPosition: string) =>\n    ({\n      type: \"labelsPosition\",\n      labelsPosition: labelsPosition,\n    } as const),\n  FiltersAC: (filters: string) =>\n    ({\n      type: \"filters\",\n      filters,\n    } as const),\n  ChangeFormMarginTopAC: (formMarginTop: string) =>\n    ({\n      type: \"formMarginTop\",\n      formMarginTop,\n    } as const),\n  ChangeButtHeightAC: (buttHeight: string) =>\n    ({\n      type: \"buttHeight\",\n      buttHeight,\n    } as const),\n  ChangeButtWidthAC: (buttWidth: string) =>\n    ({\n      type: \"buttWidth\",\n      buttWidth,\n    } as const),\n  ChangeFormWidthAC: (formWidth: string) =>\n    ({\n      type: \"formWidth\",\n      formWidth,\n    } as const),\n  ChangeTextColorAC: (textColor: string) =>\n    ({\n      type: \"textColor\",\n      textColor,\n    } as const),\n  ChangeDescriptionColorAC: (descriptionColor: string) =>\n    ({\n      type: \"descriptionColor\",\n      descriptionColor,\n    } as const),\n  ChangeTitleColorAC: (titleColor: string) =>\n    ({\n      type: \"titleColor\",\n      titleColor,\n    } as const),\n};\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { Form } from \"./Form\";\nimport React from \"react\";\nimport { actions } from \"../../../store/mainReducer\";\nimport { GlobalState } from \"../../../store/store\";\nconst MapStateToProps = (state: GlobalState) => ({\n  generalBackgroundColor: state.mainReducer.generalBackgroundColor,\n  inputs: state.mainReducer.inputs,\n  numOfFields: state.mainReducer.numOfFields,\n  buttHeight: state.mainReducer.buttHeight,\n  buttWidth: state.mainReducer.buttWidth,\n  formBackgroundColor: state.mainReducer.formBackgroundColor,\n  textColor: state.mainReducer.textColor,\n  buttTextColor: state.mainReducer.buttTextColor,\n  buttColor: state.mainReducer.buttColor,\n  stateOfForm: state.mainReducer.stateOfForm,\n  title: state.mainReducer.title,\n  titleColor: state.mainReducer.titleColor,\n  descriptionColor: state.mainReducer.descriptionColor,\n  formWidth: state.mainReducer.formWidth,\n  formMarginTop: state.mainReducer.formMarginTop,\n  labelsPosition: state.mainReducer.labelsPosition,\n});\nconst FormHOC = (props: propsType) => (\n  <Form changeState={props.ChangeStateOFFormAC} {...props} />\n);\n\nconst FormConnector = connect(MapStateToProps, {\n  ChangeStateOFFormAC: actions.ChangeStateOFFormAC,\n});\ntype propsType = ConnectedProps<typeof FormConnector>;\nexport const FormContainer = FormConnector(FormHOC);\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { dataInputNumParamType } from \"../../../../store/mainReducer\";\ntype propsType = {\n  changeInput: (index: number | null) => void;\n  index: number;\n  ChangeDeconsteFieldAC: (index: number) => void;\n  inputs: dataInputNumParamType;\n};\nexport const SeeingFields = (props: propsType) => {\n  const changeInputIndex = () => {\n    props.changeInput(props.index);\n  };\n  const [isObjVision, setIsObjVision] = useState(true);\n  const DeconsteField = async () => {\n    setIsObjVision(!isObjVision);\n    await setTimeout(() => {\n      props.ChangeDeconsteFieldAC(props.index);\n    }, 100);\n  };\n\n  return (\n    <div\n      className={isObjVision ? \"ItemsOfInputs shown\" : \"ItemsOfInputs hidden\"}\n    >\n      <div>\n        <p>{props.inputs.name}</p>\n      </div>\n\n      <div className=\"IconsOfInputs\">\n        <FontAwesomeIcon\n          title={\"Удалить поле\"}\n          onClick={DeconsteField}\n          icon=\"times\"\n        />\n      </div>\n\n      <div className=\"IconsOfInputs\">\n        <FontAwesomeIcon\n          title={\"Настройки поля\"}\n          onClick={changeInputIndex}\n          icon=\"cogs\"\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Radio } from \"antd\";\nimport { dataInputNumParamType } from \"../../../../store/mainReducer\";\n\ntype propsType = {\n  inputs: {\n    id: string;\n    name: string;\n    placeholder: string;\n    type: string;\n    width: number;\n    height: number;\n    fieldDescription: string;\n    descriptionPosition: \"inline\" | \"bottom\";\n  };\n  index: number;\n  changeInput: (val: number | null) => void;\n  process: (data: dataInputNumParamType, index: number) => void;\n};\nexport const Field = React.memo((props: propsType) => {\n  useEffect(() => {\n    setPlaceholder(props.inputs.placeholder || \"\");\n    setTypeOfInput(props.inputs.type || \"text\");\n    setName(props.inputs.name || \"\");\n    setFieldDescription(props.inputs.fieldDescription || \"\");\n    setDescriptionPosition(props.inputs.descriptionPosition || \"bottom\");\n    setHeight(String(props.inputs.height) || \"5\");\n    setWidth(String(props.inputs.width) || \"20\");\n    setSize(String(props.inputs.height) || \"5\");\n  }, [\n    props.inputs.placeholder,\n    props.inputs.type,\n    props.inputs.name,\n    props.inputs.fieldDescription,\n    props.inputs.descriptionPosition,\n    props.inputs.height,\n    props.inputs,\n    props.inputs.width,\n  ]);\n  const [typeOfInput, setTypeOfInput] = useState(\"\");\n  const [placeholder, setPlaceholder] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [fieldDescription, setFieldDescription] = useState(\"\");\n  const [descriptionPosition, setDescriptionPosition] = useState<\n    \"bottom\" | \"inline\"\n  >(\"bottom\");\n  const [width, setWidth] = useState(\"\");\n  const [height, setHeight] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const butHandler = () => {\n    const data = {\n      name,\n      id: props.inputs.id,\n      placeholder,\n      type: typeOfInput,\n      fieldDescription,\n      descriptionPosition,\n      width: typeOfInput === \"checkbox\" ? Number(size) : Number(width),\n      height: typeOfInput === \"checkbox\" ? Number(size) : Number(height),\n    };\n    props.process(data, props.index);\n    props.changeInput(null);\n  };\n  const changeInputHandler = () => {\n    props.changeInput(null);\n  };\n  return (\n    <>\n      <div className=\"fields\">\n        <h2>Настройки поля</h2>\n        <label>\n          Название поля\n          <input\n            name=\"name\"\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            value={name}\n            placeholder=\"Название поля\"\n            type=\"text\"\n          />\n        </label>\n        <label>\n          Placeholder поля\n          <input\n            name=\"placeholder\"\n            onChange={(e) => {\n              setPlaceholder(e.target.value);\n            }}\n            value={placeholder}\n            placeholder=\"placeholder поля\"\n            type=\"text\"\n          />\n        </label>\n        <br />\n        {typeOfInput === \"checkbox\" ? (\n          <>\n            <label>\n              Размер поля\n              <input\n                name=\"size\"\n                onChange={(e) => {\n                  setSize(e.target.value);\n                }}\n                value={size}\n                placeholder=\"Размер поля\"\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"99.9\"\n              />\n              vw\n            </label>\n            <br />\n          </>\n        ) : (\n          <>\n            <label>\n              Ширина поля\n              <input\n                name=\"width\"\n                onChange={(e) => {\n                  setWidth(\n                    Number(e.target.value) > 100\n                      ? \"100\"\n                      : Number(e.target.value) < 0\n                      ? \"0\"\n                      : e.target.value\n                  );\n                }}\n                value={width}\n                placeholder=\"Ширина поля\"\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"99.9\"\n              />\n              vw\n            </label>\n            <label>\n              Высота поля\n              <input\n                name=\"height\"\n                onChange={(e) => {\n                  setHeight(\n                    Number(e.target.value) > 100\n                      ? \"100\"\n                      : Number(e.target.value) < 0\n                      ? \"0\"\n                      : e.target.value\n                  );\n                }}\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"99.9\"\n                value={height}\n                placeholder=\"Высота поля\"\n                type=\"number\"\n              />\n              vh\n            </label>\n            <br />\n          </>\n        )}\n\n        <label>Описание поля</label>\n        <input\n          name=\"fieldDescription\"\n          onChange={(e) => {\n            setFieldDescription(e.target.value);\n          }}\n          value={fieldDescription}\n          placeholder=\"Описание поля\"\n          type=\"text\"\n        />\n        <Radio.Button\n          name=\"descriptionPosition\"\n          onChange={(e) => {\n            setDescriptionPosition(e.target.value);\n          }}\n          checked={descriptionPosition === \"bottom\"}\n          value=\"bottom\"\n        >\n          Снизу\n        </Radio.Button>\n        <Radio.Button\n          name=\"descriptionPosition\"\n          checked={descriptionPosition === \"inline\"}\n          onChange={(e) => {\n            setDescriptionPosition(e.target.value);\n          }}\n          value=\"inline\"\n        >\n          Справа\n        </Radio.Button>\n        <br />\n        <div className=\"typeOFieldBlock\">\n          <label>Тип поля</label>\n          <div className=\"typeOField\">\n            <Radio.Button\n              id={\"textarea\" + props.index}\n              name={\"type\" + props.index}\n              value=\"textarea\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"textarea\"}\n            >\n              Textarea\n            </Radio.Button>\n            <Radio.Button\n              id={\"input\" + props.index}\n              name={\"type\" + props.index}\n              value=\"text\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"text\"}\n            >\n              Input\n            </Radio.Button>\n            <Radio.Button\n              id={\"flag\" + props.index}\n              name={\"type\" + props.index}\n              value=\"checkbox\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"checkbox\"}\n            >\n              Checkbox\n            </Radio.Button>\n            <Radio.Button\n              id={\"file\" + props.index}\n              name={\"type\" + props.index}\n              value=\"file\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"file\"}\n            >\n              File\n            </Radio.Button>\n            <Radio.Button\n              id={\"password\" + props.index}\n              name={\"type\" + props.index}\n              value=\"password\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"password\"}\n            >\n              Password\n            </Radio.Button>\n            <Radio.Button\n              id={\"email\" + props.index}\n              name={\"type\" + props.index}\n              value=\"email\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"email\"}\n            >\n              Email\n            </Radio.Button>\n          </div>\n        </div>\n        <button onClick={butHandler}>Сохранить</button>\n        <button onClick={changeInputHandler}>Отменить</button>\n      </div>\n      <div onClick={changeInputHandler} className=\"modal\" />\n    </>\n  );\n});\n","import React from \"react\";\nimport { Field } from \"./Field\";\nimport { message, Radio } from \"antd\";\nimport { dataType } from \"../../../../store/authReducer\";\nimport { dataInputNumParamType } from \"../../../../store/mainReducer\";\n\ntype propsType = {\n  ChangeTitleAC: (text: string) => void;\n  ChangeFormBackgroundColorAC: (text: string) => void;\n  ChangeGeneralBackgroundColorAC: (text: string) => void;\n  ChangeButtColorAC: (text: string) => void;\n  ChangeButtTextColorAC: (text: string) => void;\n  ChangeTitleColorAC: (text: string) => void;\n  ChangeTextColorAC: (text: string) => void;\n  ChangeDescriptionColorAC: (text: string) => void;\n  ChangeFormWidthAC: (text: string) => void;\n  ChangeButtWidthAC: (text: string) => void;\n  ChangeFormMarginTopAC: (text: string) => void;\n  ChangeButtHeightAC: (text: string) => void;\n  ChangeLabelsPositionAC: (text: string) => void;\n  ChangeNumOfFieldsAC: (text: string) => void;\n  ChangeAddFieldAC: () => void;\n  changeState: () => void;\n  changeInput: (input: number | null) => void;\n  saveTemplate: (obj: {\n    variables: { token: string; template: dataType };\n  }) => void;\n  process: (data: dataInputNumParamType, index: number) => void;\n  title: string;\n  formBackgroundColor: string;\n  generalBackgroundColor: string;\n  buttColor: string;\n  buttTextColor: string;\n  titleColor: string;\n  textColor: string;\n  descriptionColor: string;\n  formWidth: number;\n  loading: boolean;\n  buttWidth: number;\n  buttHeight: number;\n  formMarginTop: number;\n  labelsPosition: string;\n  numOfFields: number;\n  selectedInput: number | null;\n  token: string;\n  inputs: Array<dataInputNumParamType>;\n  InputsMaker: Array<JSX.Element>;\n};\nexport const DataFilling = React.memo((props: propsType) => (\n  <div className=\"dataFilling\">\n    <div className=\"dataFillingBlock\">\n      <label>Заголовок формы</label>\n      <input\n        value={props.title}\n        name=\"title\"\n        placeholder=\"Заголовок\"\n        onChange={(e) => {\n          props.ChangeTitleAC(e.target.value);\n        }}\n      />\n      <br />\n      <label>Выберете фон формы</label>\n      <input\n        value={props.formBackgroundColor}\n        onChange={(e) => {\n          props.ChangeFormBackgroundColorAC(e.target.value);\n        }}\n        name=\"formBackgroundColor\"\n        type=\"color\"\n      />\n      <label>Выберете цвет общего фона</label>\n      <input\n        value={props.generalBackgroundColor}\n        onChange={(e) => {\n          props.ChangeGeneralBackgroundColorAC(e.target.value);\n        }}\n        name=\"generalBackgroundColor\"\n        type=\"color\"\n      />\n      <label>Выберете цвет кнопки</label>\n      <input\n        value={props.buttColor}\n        onChange={(e) => {\n          props.ChangeButtColorAC(e.target.value);\n        }}\n        name=\"buttColor\"\n        type=\"color\"\n      />\n      <label>Выберете цвет текста кнопки</label>\n      <input\n        value={props.buttTextColor}\n        onChange={(e) => {\n          props.ChangeButtTextColorAC(e.target.value);\n        }}\n        name=\"buttTextColor\"\n        type=\"color\"\n      />\n      <label>Выберете цвет заголовка </label>\n      <input\n        value={props.titleColor}\n        onChange={(e) => {\n          props.ChangeTitleColorAC(e.target.value);\n        }}\n        name=\"titleColor\"\n        type=\"color\"\n      />\n      <label>Выберете цвет текста </label>\n      <input\n        value={props.textColor}\n        onChange={(e) => {\n          props.ChangeTextColorAC(e.target.value);\n        }}\n        name=\"textColor\"\n        type=\"color\"\n      />\n      <label>Выберете цвет описания поля</label>\n      <input\n        value={props.descriptionColor}\n        onChange={(e) => {\n          props.ChangeDescriptionColorAC(e.target.value);\n        }}\n        name=\"descriptionColor\"\n        type=\"color\"\n      />\n      <br />\n      <label htmlFor=\"formWidth\">Ширина формы</label>\n      <input\n        id=\"formWidth\"\n        value={props.formWidth}\n        onChange={(e) => {\n          props.ChangeFormWidthAC(e.target.value);\n        }}\n        name=\"formWidth\"\n        type=\"number\"\n      />\n      %\n      <br />\n      <label htmlFor=\"formMarginTop\">Отступ сверху</label>\n      <input\n        id=\"formMarginTop\"\n        value={props.formMarginTop}\n        onChange={(e) => {\n          props.ChangeFormMarginTopAC(e.target.value);\n        }}\n        name=\"formMarginTop\"\n        type=\"number\"\n      />\n      vh\n      <br />\n      <label htmlFor=\"buttWidth\">Ширина кнопки</label>\n      <input\n        id=\"buttWidth\"\n        value={props.buttWidth}\n        onChange={(e) => {\n          props.ChangeButtWidthAC(e.target.value);\n        }}\n        name=\"buttWidth\"\n        type=\"number\"\n      />\n      vw\n      <br />\n      <label htmlFor=\"buttHeight\"> Высота кнопки</label>\n      <input\n        id=\"buttHeight\"\n        value={props.buttHeight}\n        onChange={(e) => {\n          props.ChangeButtHeightAC(e.target.value);\n        }}\n        name=\"buttHeight\"\n        type=\"number\"\n      />\n      vh\n      <br />\n      <label>Положение названия поля</label>\n      <Radio.Button\n        name=\"labelsPosition\"\n        onChange={(e) => {\n          props.ChangeLabelsPositionAC(e.target.value);\n        }}\n        checked={props.labelsPosition === \"top\"}\n        value=\"top\"\n      >\n        Сверху\n      </Radio.Button>\n      <Radio.Button\n        name=\"labelsPosition\"\n        checked={props.labelsPosition === \"left\"}\n        onChange={(e) => {\n          props.ChangeLabelsPositionAC(e.target.value);\n        }}\n        value=\"left\"\n      >\n        Слева\n      </Radio.Button>\n      <br />\n      <div className={props.labelsPosition === \"left\" ? \"hidden\" : \"shown\"}>\n        <label>Количество полей в строке</label>\n        <input\n          value={props.numOfFields}\n          name=\"numOfFields\"\n          placeholder=\"Полей в строке\"\n          onChange={(e) => {\n            props.ChangeNumOfFieldsAC(e.target.value);\n          }}\n          type=\"number\"\n        />\n      </div>\n      <br />\n      <div className=\"blockItemsOfInputs\">{props.InputsMaker}</div>\n      <button\n        name=\"count\"\n        onClick={() => {\n          props.ChangeAddFieldAC();\n        }}\n      >\n        Добавить поле\n      </button>\n      <div\n        className={\n          props.selectedInput !== null\n            ? \" FieldsBlock shown\"\n            : \"FieldsBlock hidden\"\n        }\n      >\n        {props.selectedInput !== null && props.inputs[props.selectedInput] ? (\n          <Field\n            changeInput={props.changeInput}\n            inputs={props.inputs[props.selectedInput]}\n            process={props.process}\n            index={props.selectedInput}\n          />\n        ) : (\n          <></>\n        )}\n      </div>\n      <br />\n      <button onClick={props.changeState}>Получить код</button>\n      <br />\n      <button\n        disabled={props.loading}\n        onClick={() => {\n          props.token\n            ? props.saveTemplate({\n                variables: {\n                  token: props.token,\n                  template: {\n                    generalBackgroundColor: props.generalBackgroundColor,\n                    formBackgroundColor: props.formBackgroundColor,\n                    titleColor: props.titleColor,\n                    descriptionColor: props.descriptionColor,\n                    formWidth: props.formWidth,\n                    formMarginTop: props.formMarginTop,\n                    buttHeight: props.buttHeight,\n                    buttWidth: props.buttWidth,\n                    textColor: props.textColor,\n                    buttColor: props.buttColor,\n                    buttTextColor: props.buttTextColor,\n                    title: props.title,\n                    labelsPosition: props.labelsPosition,\n                    numOfFields: props.numOfFields,\n                    inputs: props.inputs,\n                  },\n                },\n              })\n            : message.warning(\"Для этого действия необходимо войти в аккаунт\");\n        }}\n      >\n        Сохранить\n      </button>\n    </div>\n  </div>\n));\n","import { gql } from \"@apollo/client\";\n\nexport const templateFragment = gql`\n  fragment template on TemplatesType {\n    generalBackgroundColor\n    formBackgroundColor\n    titleColor\n    descriptionColor\n    formWidth\n    formMarginTop\n    buttHeight\n    buttWidth\n    textColor\n    buttColor\n    buttTextColor\n    title\n    labelsPosition\n    numOfFields\n    inputs {\n      id\n      name\n      placeholder\n      type\n      width\n      height\n      fieldDescription\n      descriptionPosition\n    }\n  }\n`;\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { actions, dataInputNumParamType } from \"../../../../store/mainReducer\";\nimport { actions as authActions } from \"../../../../store/authReducer\";\nimport { SeeingFields } from \"./SeeingFields\";\nimport { DataFilling } from \"./DataFilling\";\nimport React from \"react\";\nimport { GlobalState } from \"../../../../store/store\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { message } from \"antd\";\nimport { templateFragment } from \"../../../graphQl-fragments/templateFragment\";\nconst MapStateToProps = (state: GlobalState) => ({\n  state: state.mainReducer,\n  formBackgroundColor: state.mainReducer.formBackgroundColor,\n  titleColor: state.mainReducer.titleColor,\n  descriptionColor: state.mainReducer.descriptionColor,\n  generalBackgroundColor: state.mainReducer.generalBackgroundColor,\n  buttHeight: state.mainReducer.buttHeight,\n  buttWidth: state.mainReducer.buttWidth,\n  numOfFields: state.mainReducer.numOfFields,\n  inputs: state.mainReducer.inputs,\n  textColor: state.mainReducer.textColor,\n  labelsPosition: state.mainReducer.labelsPosition,\n  isFillingVision: state.mainReducer.isFillingVision,\n  buttTextColor: state.mainReducer.buttTextColor,\n  buttColor: state.mainReducer.buttColor,\n  title: state.mainReducer.title,\n  formWidth: state.mainReducer.formWidth,\n  formMarginTop: state.mainReducer.formMarginTop,\n  selectedInput: state.mainReducer.selectedInput,\n  isAuth: state.authReducer.isAuth,\n  token: state.authReducer.token,\n});\nconst DataFillingBlock = (props: propsType) => {\n  const [saveTemplate, { loading }] = useMutation(\n    gql`\n      ${templateFragment}\n      mutation saveTemplate(\n        $template: saveTemplateTemplatesType!\n        $token: String!\n      ) {\n        saveTemplate(template: $template, token: $token) {\n          ...template\n        }\n      }\n    `,\n    {\n      refetchQueries: [\"getUserData\"],\n      onError: (e) => {\n        message.warn(\n          e.message === \"more5\"\n            ? \"Нельзя сохранять более 5-ти шаблонов\"\n            : \"Что-то пошло не так\"\n        );\n      },\n      onCompleted: () => {\n        message.success(\"Шаблон сохранен\");\n      },\n    }\n  );\n  const process = (data: dataInputNumParamType, index: number) => {\n    props.ChangeInputsAC(data, index);\n  };\n  const changeInput = (index: number | null) => {\n    props.ChangeSelectedInputAC(index);\n  };\n  const InputsMaker = props.inputs.map((val, i) => (\n    <SeeingFields\n      changeInput={changeInput}\n      inputs={val}\n      index={i}\n      ChangeDeconsteFieldAC={props.ChangeDeconsteFieldAC}\n      key={val.id}\n    />\n  ));\n  return (\n    <DataFilling\n      generalBackgroundColor={props.generalBackgroundColor}\n      formBackgroundColor={props.formBackgroundColor}\n      saveTemplate={saveTemplate}\n      titleColor={props.titleColor}\n      descriptionColor={props.descriptionColor}\n      textColor={props.textColor}\n      buttColor={props.buttColor}\n      buttTextColor={props.buttTextColor}\n      formMarginTop={props.formMarginTop}\n      formWidth={props.formWidth}\n      changeState={props.ChangeStateOFFormAC}\n      changeInput={changeInput}\n      buttHeight={props.buttHeight}\n      buttWidth={props.buttWidth}\n      numOfFields={props.numOfFields}\n      process={process}\n      loading={loading}\n      selectedInput={props.selectedInput}\n      inputs={props.inputs}\n      title={props.title}\n      labelsPosition={props.labelsPosition}\n      InputsMaker={InputsMaker}\n      ChangeAddFieldAC={props.ChangeAddFieldAC}\n      ChangeButtColorAC={props.ChangeButtColorAC}\n      ChangeButtHeightAC={props.ChangeButtHeightAC}\n      ChangeButtTextColorAC={props.ChangeButtTextColorAC}\n      ChangeButtWidthAC={props.ChangeButtWidthAC}\n      ChangeDescriptionColorAC={props.ChangeDescriptionColorAC}\n      ChangeFormBackgroundColorAC={props.ChangeFormBackgroundColorAC}\n      ChangeFormMarginTopAC={props.ChangeFormMarginTopAC}\n      ChangeFormWidthAC={props.ChangeFormWidthAC}\n      ChangeGeneralBackgroundColorAC={props.ChangeGeneralBackgroundColorAC}\n      ChangeLabelsPositionAC={props.ChangeLabelsPositionAC}\n      ChangeNumOfFieldsAC={props.ChangeNumOfFieldsAC}\n      ChangeTextColorAC={props.ChangeTextColorAC}\n      ChangeTitleAC={props.ChangeTitleAC}\n      ChangeTitleColorAC={props.ChangeTitleColorAC}\n      token={props.token}\n    />\n  );\n};\n\nconst DataFillingConnector = connect(MapStateToProps, {\n  ChangeStateOFFormAC: actions.ChangeStateOFFormAC,\n  ChangeAddFieldAC: actions.ChangeAddFieldAC,\n  ChangeSelectedInputAC: actions.ChangeSelectedInputAC,\n  ChangeInputsAC: actions.ChangeInputsAC,\n  ChangeLabelsPositionAC: actions.ChangeLabelsPositionAC,\n  userTemplatesAC: authActions.userTemplatesAC,\n  ChangeDeconsteFieldAC: actions.ChangeDeconsteFieldAC,\n  ChangeNumOfFieldsAC: actions.ChangeNumOfFieldsAC,\n  ChangeTitleAC: actions.ChangeTitleAC,\n  ChangeButtHeightAC: actions.ChangeButtHeightAC,\n  ChangeButtWidthAC: actions.ChangeButtWidthAC,\n  ChangeFormBackgroundColorAC: actions.ChangeFormBackgroundColorAC,\n  ChangeGeneralBackgroundColorAC: actions.ChangeGeneralBackgroundColorAC,\n  ChangeTextColorAC: actions.ChangeTextColorAC,\n  ChangeButtTextColorAC: actions.ChangeButtTextColorAC,\n  ChangeDescriptionColorAC: actions.ChangeDescriptionColorAC,\n  ChangeTitleColorAC: actions.ChangeTitleColorAC,\n  ChangeButtColorAC: actions.ChangeButtColorAC,\n  ChangeFormMarginTopAC: actions.ChangeFormMarginTopAC,\n  ChangeFormWidthAC: actions.ChangeFormWidthAC,\n});\ntype propsType = ConnectedProps<typeof DataFillingConnector>;\nexport const DataFillingContainer = DataFillingConnector(DataFillingBlock);\n","import React from \"react\";\ntype propsType = {\n  stateOfHeader: number;\n  stateOfHeaderAC: (num: number) => void;\n  isAuth: boolean;\n};\nexport const MiniHeader = (props: propsType) => (\n  <div className=\"mini-header\">\n    <div\n      className={\n        props.stateOfHeader === 1\n          ? \"slider-1 slider\"\n          : props.stateOfHeader === 2\n          ? \"slider-2 slider\"\n          : \"slider-3 slider\"\n      }\n    />\n    <div>\n      <p onClick={() => props.stateOfHeaderAC(1)}>Шаблоны</p>\n      <div />\n    </div>\n    <div>\n      <p onClick={() => props.stateOfHeaderAC(2)}>Настройки</p>\n      <div />\n    </div>\n    <div style={{ backgroundColor: props.isAuth ? \"\" : \"#c2c1c0\" }}>\n      <button\n        disabled={!props.isAuth}\n        onClick={() => props.stateOfHeaderAC(3)}\n        style={{ cursor: props.isAuth ? \"pointer\" : \"not-allowed\" }}\n      >\n        Пользовательские <br /> шаблоны\n      </button>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { dataTemplatesNumbersFieldsType } from \"../../../../store/mainReducer\";\ntype propsType = {\n  ApplyTemplateAC: (template: dataTemplatesNumbersFieldsType) => void;\n  template: dataTemplatesNumbersFieldsType;\n};\nexport const Templates = React.memo((props: propsType) => {\n  const handler = () => {\n    props.ApplyTemplateAC(props.template);\n  };\n  return (\n    <div className=\"Template\">\n      <h3>{props.template.settings.nameOfTemplate}</h3>\n      <img onClick={handler} src={props.template.settings.image} alt=\"lorem\" />\n      <br />\n      <button onClick={handler}>\n        {props.template.settings.nameOfTemplate}\n      </button>\n    </div>\n  );\n});\n","import React from \"react\";\ntype propsType = {\n  FiltersAC: (name: string) => void;\n  VisionFilter: () => void;\n  isFilterVision: boolean;\n};\n\nexport const Filter = React.memo((props: propsType) => {\n  const options = [\n    \"Форма обратной связи\",\n    \"Подписка на рассылку\",\n    \"Заказ звонка\",\n    \"Оформление заказа\",\n  ];\n  const optionsWrapper = options.map((e, i) => (\n    <div key={i}>\n      <input\n        type={\"checkbox\"}\n        onClick={() => props.FiltersAC(e)}\n        id={e}\n        name={e}\n      />\n      <label htmlFor={e}>{e}</label>\n    </div>\n  ));\n  return (\n    <div className=\"filter\">\n      <div onClick={props.VisionFilter}>Фильтр</div>\n      <div\n        className={\n          !props.isFilterVision ? \"filterBoxes hidden \" : \"filterBoxes shown \"\n        }\n      >\n        {optionsWrapper}\n      </div>\n    </div>\n  );\n});\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { actions } from \"../../../../store/mainReducer\";\nimport { Filter } from \"./filter\";\nimport React from \"react\";\nimport { GlobalState } from \"../../../../store/store\";\n\nconst MapStateToProps = (state: GlobalState) => ({\n  templates: state.mainReducer.templates,\n  filters: state.mainReducer.filters,\n  isFilterVision: state.mainReducer.isFilterVision,\n});\nconst FilterBlock = (props: propsType) => {\n  const VisionFilter = () => {\n    props.ChangeIsFilterVision();\n  };\n\n  return (\n    <Filter\n      FiltersAC={props.FiltersAC}\n      isFilterVision={props.isFilterVision}\n      VisionFilter={VisionFilter}\n    />\n  );\n};\nconst FilterConnector = connect(MapStateToProps, {\n  FiltersAC: actions.FiltersAC,\n  ChangeIsFilterVision: actions.ChangeIsFilterVision,\n});\ntype propsType = ConnectedProps<typeof FilterConnector>;\nexport const FilterContainer = FilterConnector(FilterBlock);\n","import { createSelector } from \"reselect\";\nimport { GlobalState } from \"../store/store\";\nconst getTemplates = (state: GlobalState) => {\n  return state.mainReducer.templates;\n};\nconst getFilters = (state: GlobalState) => {\n  return state.mainReducer.filters;\n};\nexport const TemplateSelector = createSelector(\n  getTemplates,\n  getFilters,\n  (templates, filters) => {\n    if (filters[0]) {\n      return templates.filter((e) => {\n        return filters.indexOf(e.settings.group) > -1;\n      });\n    } else {\n      return templates;\n    }\n  }\n);\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { actions } from \"../../../../store/mainReducer\";\nimport { Templates } from \"./templates\";\nimport { FilterContainer } from \"./filterContainer\";\nimport { TemplateSelector } from \"../../../../selectors/templateSelector\";\nimport React from \"react\";\nimport { GlobalState } from \"../../../../store/store\";\nconst MapStateToProps = (state: GlobalState) => ({\n  templates: TemplateSelector(state),\n  isFilterVision: state.mainReducer.isFilterVision,\n});\nconst TemplatesBlock = (props: propsType) => {\n  const TemplatesMaker = props.templates.map((e, i) => (\n    <Templates key={i} ApplyTemplateAC={props.ApplyTemplateAC} template={e} />\n  ));\n  return (\n    <>\n      <FilterContainer />\n      <div\n        className={\n          props.isFilterVision ? \"Templates-box openedFilter\" : \"Templates-box\"\n        }\n      >\n        {TemplatesMaker}\n      </div>\n    </>\n  );\n};\nconst TemplatesConnector = connect(MapStateToProps, {\n  ApplyTemplateAC: actions.ApplyTemplateAC,\n});\ntype propsType = ConnectedProps<typeof TemplatesConnector>;\nexport const TemplatesContainer = TemplatesConnector(TemplatesBlock);\n","import { FormInput } from \"../../form-display/FormInput\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dataType } from \"../../../../store/authReducer\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { message } from \"antd\";\nimport { templateFragment } from \"../../../graphQl-fragments/templateFragment\";\ntype propsType = {\n  index: number;\n  token: string;\n  template: dataType;\n  ApplyUserTemplateAC: (data: dataType) => void;\n};\nexport const PersonalTemplatesCreator = React.memo((props: propsType) => {\n  const [deconsteTempl, { error, data, loading }] = useMutation(\n    gql`\n      ${templateFragment}\n      mutation deconsteTemplate($index: Int!, $token: String!) {\n        deconsteTemplate(index: $index, token: $token) {\n          ...template\n        }\n      }\n    `,\n    { refetchQueries: [\"getUserData\"] }\n  );\n  if (error) {\n    message.warn(\"Возникла ошибка, попробуйте позже\");\n  }\n  if (data) {\n    message.success(\"Шаблон удален\");\n  }\n  const handler = () => {\n    props.ApplyUserTemplateAC(props.template);\n  };\n  const InputsCreator = props.template.inputs.map((e, i) => (\n    <FormInput\n      key={i}\n      labelsPosition={props.template.labelsPosition}\n      i={i}\n      numOfFields={props.template.numOfFields}\n      type={e.type || \"text\"}\n      name={e.name || \"\"}\n      placeholder={e.placeholder || \"\"}\n      fieldDescription={e.fieldDescription || \"\"}\n      disabled={true}\n      width={Number(e.width) / 3 || 3}\n      height={Number(e.height) / 3 || 3}\n      descriptionPosition={e.descriptionPosition || \"\"}\n      descriptionColor={props.template.descriptionColor}\n    />\n  ));\n  return (\n    <div\n      style={{\n        border: \".2vw solid #65ccbc\",\n        display: \"grid\",\n        margin: \"0 .5vw 0 .5vw\",\n      }}\n    >\n      <div className=\"deconsteTemplate\">\n        <FontAwesomeIcon\n          icon=\"times\"\n          title=\"deconsteTemplate\"\n          onClick={() => {\n            if (!loading) {\n              deconsteTempl({\n                variables: { index: props.index, token: props.token },\n              });\n            }\n          }}\n        />\n      </div>\n      <div\n        className=\"personalFormBlock\"\n        onClick={handler}\n        style={{ backgroundColor: props.template.generalBackgroundColor }}\n      >\n        <div\n          className=\"form\"\n          style={{\n            color: props.template.textColor,\n            backgroundColor: props.template.formBackgroundColor,\n            width: props.template.formWidth / 3 + \"vw\",\n            marginTop: \"5%\",\n            marginBottom: \"5%\",\n          }}\n        >\n          <h1\n            className=\"FormTitle\"\n            style={{\n              color: props.template.titleColor,\n            }}\n          >\n            {props.template.title || \"Заголовок\"}\n          </h1>\n          <div\n            className=\"wrapperOfInputsCreator\"\n            style={{\n              gridTemplateColumns:\n                props.template.labelsPosition === \"left\" ||\n                props.template.numOfFields === 1\n                  ? \"1fr\"\n                  : \"1fr 1fr\",\n            }}\n          >\n            {InputsCreator}\n          </div>\n          <button\n            disabled\n            style={{\n              height: 4 + \"vh\",\n              width: 9 + \"vw\",\n              color: props.template.buttTextColor,\n              backgroundColor: props.template.buttColor,\n            }}\n          >\n            Отправить\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { connect } from \"react-redux\";\nimport { PersonalTemplates } from \"./personalTemplates\";\nimport { actions } from \"../../../../store/mainReducer\";\nimport { GlobalState } from \"../../../../store/store\";\nconst MapStateToProps = (state: GlobalState) => {\n  return {\n    userTemplates: state.authReducer.userTemplates,\n    token: state.authReducer.token,\n  };\n};\nconst PersonalTemplatesConnector = connect(MapStateToProps, {\n  ApplyUserTemplateAC: actions.ApplyUserTemplateAC,\n});\nexport const PersonalTemplatesContainer =\n  PersonalTemplatesConnector(PersonalTemplates);\n","import React from \"react\";\nimport { PersonalTemplatesCreator } from \"./personalTemplatesCreator\";\nimport { dataType } from \"../../../../store/authReducer\";\ntype propsType = {\n  userTemplates: Array<dataType>;\n  ApplyUserTemplateAC: (data: dataType) => void;\n  token: string;\n};\nexport const PersonalTemplates = (props: propsType) => {\n  const userTemplatesMaker = props.userTemplates.map((e, i) => (\n    <PersonalTemplatesCreator\n      key={i}\n      index={i}\n      token={props.token}\n      template={e}\n      ApplyUserTemplateAC={props.ApplyUserTemplateAC}\n    />\n  ));\n  if (props.userTemplates[0]) {\n    return <div className=\"personalTemplatesBlock\">{userTemplatesMaker}</div>;\n  } else {\n    return <p>У вас пока нет шаблонов</p>;\n  }\n};\n","import { connect } from \"react-redux\";\nimport { stateOfHeaderAC } from \"../../../store/menuReducer\";\nimport { MiniHeaderSwitch } from \"./MiniHeaderSwitch\";\nimport { actions } from \"../../../store/mainReducer\";\nimport { GlobalState } from \"../../../store/store\";\nconst MapStateToProps = (state: GlobalState) => ({\n  stateOfHeader: state.menuReducer.stateOfHeader,\n  isFillingVision: state.mainReducer.isFillingVision,\n  isAuth: state.authReducer.isAuth,\n});\nexport const MiniHeaderSwitchContainer = connect(MapStateToProps, {\n  stateOfHeaderAC,\n  ChangeFillingVisionAC: actions.ChangeFillingVisionAC,\n})(MiniHeaderSwitch);\n","import React from \"react\";\nimport { DataFillingContainer } from \"./customization/DataFillingContainer\";\nimport { MiniHeader } from \"./miniHeader\";\nimport { TemplatesContainer } from \"./templates/templatesContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { PersonalTemplatesContainer } from \"./user-templates/personalTemplatesContainer\";\ntype propsType = {\n  ChangeFillingVisionAC: () => void;\n  isFillingVision: boolean;\n  stateOfHeader: number;\n  isAuth: boolean;\n  stateOfHeaderAC: (num: number) => void;\n};\nexport const MiniHeaderSwitch = (props: propsType) => (\n  <>\n    <div\n      onClick={props.ChangeFillingVisionAC}\n      className={\n        props.isFillingVision ? \"icon-angles-shown\" : \"icon-angles-hidden\"\n      }\n    >\n      <FontAwesomeIcon\n        className=\"icon-left\"\n        icon={\n          props.isFillingVision ? \"angle-double-right\" : \"angle-double-left\"\n        }\n        size=\"lg\"\n      />\n    </div>\n    <MiniHeader\n      stateOfHeader={props.stateOfHeader}\n      isAuth={props.isAuth}\n      stateOfHeaderAC={props.stateOfHeaderAC}\n    />\n    {props.stateOfHeader === 1 ? (\n      <TemplatesContainer />\n    ) : props.stateOfHeader === 2 ? (\n      <DataFillingContainer />\n    ) : props.stateOfHeader === 3 ? (\n      <PersonalTemplatesContainer />\n    ) : (\n      <div />\n    )}\n  </>\n);\n","import { connect } from \"react-redux\";\nimport { Main } from \"./Main\";\nimport { actions } from \"../../store/mainReducer\";\nimport { GlobalState } from \"../../store/store\";\ntype MapStateToPropsType = {\n  isFillingVision: boolean;\n  generalBackgroundColor: string;\n};\nconst MapStateToProps = (state: GlobalState): MapStateToPropsType => ({\n  isFillingVision: state.mainReducer.isFillingVision,\n  generalBackgroundColor: state.mainReducer.generalBackgroundColor,\n});\nexport const MainContainer = connect(MapStateToProps, {\n  ChangeFillingVisionAC: actions.ChangeFillingVisionAC,\n})(Main);\n","import React from \"react\";\nimport { FormContainer } from \"./form-display/FormContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MiniHeaderSwitchContainer } from \"./form-customization/MiniHeaderSwitchContainer\";\n\ntype propsType = {\n  isFillingVision: boolean;\n  generalBackgroundColor: string;\n  ChangeFillingVisionAC: () => void;\n};\nexport const Main = (props: propsType) => (\n  <>\n    <div\n      onClick={props.ChangeFillingVisionAC}\n      title={\n        props.isFillingVision\n          ? \"Закрыть настройки полей\"\n          : \"Развернуть настройки полей\"\n      }\n      className={\n        props.isFillingVision ? \"icon-angles-shown\" : \"icon-angles-hidden\"\n      }\n    >\n      <FontAwesomeIcon\n        className=\"icon-left\"\n        icon={\n          props.isFillingVision ? \"angle-double-right\" : \"angle-double-left\"\n        }\n        size=\"lg\"\n      />\n    </div>\n    <div\n      className=\"output-closed-body\"\n      style={{ backgroundColor: props.generalBackgroundColor }}\n    >\n      <div\n        className={\n          props.isFillingVision ? \"output-closed-s\" : \"output-opened-ss\"\n        }\n      >\n        <FormContainer />\n      </div>\n    </div>\n    <div\n      className={\n        props.isFillingVision ? \"input-closed-sss\" : \"input-opened-ssss\"\n      }\n    >\n      <MiniHeaderSwitchContainer />\n    </div>\n  </>\n);\n","export default __webpack_public_path__ + \"static/media/preloader.1b272b89.webp\";","import React from \"react\";\nimport preloader from \"../../accets/img/preloader.webp\";\nexport const Preloader = () => (\n  <div className=\"preloader\">\n    <img src={preloader} alt=\"preloader\" />\n  </div>\n);\n","import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Preloader } from \"../preloader/preloader\";\nimport { useParams } from \"react-router-dom\";\nexport const AcceptAccount = () => {\n  const { Id } = useParams();\n  const { loading, error, data } = useQuery(\n    gql`\n      query acceptAcc($id: String!) {\n        access(id: $id)\n      }\n    `,\n    { variables: { id: Id } }\n  );\n  if (loading) {\n    return <Preloader />;\n  }\n  if (error) {\n    return (\n      <p>\n        {error.message === \"err in req\"\n          ? \"Ошибка в запросе\"\n          : error.message === \"acc already accessed\"\n          ? \"Аккаунт уже подтвержден\"\n          : \"Что-то пошло не так\"}\n      </p>\n    );\n  }\n  if (data) {\n    return <p>Аккаунт подвержден</p>;\n  }\n  return <p />;\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\ntype propsType = {\n  formRes: (obj: { variables: { [key: string]: any } }) => void;\n  setPassVision: (passVision: boolean) => void;\n  setEmail: (email: string) => void;\n  setPassword: (password: string) => void;\n  passVision: boolean;\n  password: string;\n  email: string;\n};\nexport const Auth = (props: propsType) => {\n  const handler = () => {\n    props.setPassVision(!props.passVision);\n  };\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.formRes({\n            variables: { email: props.email, password: props.password },\n          });\n        }}\n      >\n        <input\n          type=\"text\"\n          value={props.email}\n          onChange={(e) => {\n            props.setEmail(e.currentTarget.value);\n          }}\n          placeholder=\"Почта\"\n          required\n        />\n        <div className=\"passBlock\">\n          <input\n            type={props.passVision ? \"text\" : \"password\"}\n            value={props.password}\n            onChange={(e) => {\n              props.setPassword(e.currentTarget.value);\n            }}\n            placeholder=\"Пароль\"\n            required\n          />\n          <FontAwesomeIcon\n            title={!props.passVision ? \"Показать пароль\" : \"Скрыть пароль\"}\n            onClick={handler}\n            icon={props.passVision ? \"eye\" : \"eye-slash\"}\n          />\n        </div>\n        <button type=\"submit\">Войти</button>\n      </form>\n    </>\n  );\n};\n","import { Auth } from \"./auth\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { templateFragment } from \"../graphQl-fragments/templateFragment\";\nimport { message } from \"antd\";\nimport React, { useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { actions } from \"../../store/authReducer\";\nimport { Preloader } from \"../preloader/preloader\";\nexport const AuthBlock = (props: propsType) => {\n  const [passVision, setPassVision] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [formRes, { loading }] = useLazyQuery(\n    gql`\n      ${templateFragment}\n      query auth($email: String!, $password: String!) {\n        auth(email: $email, password: $password) {\n          token\n          templates {\n            ...template\n          }\n        }\n      }\n    `,\n    {\n      onCompleted: (data) => {\n        localStorage.setItem(\"token\", JSON.stringify(data.auth.token));\n        message.success(\"Вы вошли в аккаунт\");\n        props.isAuthAC(true, data.auth.templates, data.auth.token);\n      },\n      onError: (err) => {\n        message.warn(\n          err.message === \"data\"\n            ? \"Неверно введен логин или пароль\"\n            : err.message === \"acc not accept\"\n            ? \"Аккаунт не подтвержден\"\n            : \"Что-то пошло не так\"\n        );\n      },\n    }\n  );\n  if (loading) return <Preloader />;\n  return (\n    <Auth\n      email={email}\n      password={password}\n      setPassword={setPassword}\n      setEmail={setEmail}\n      passVision={passVision}\n      setPassVision={setPassVision}\n      formRes={formRes}\n    />\n  );\n};\nconst AuthConnector = connect(null, { isAuthAC: actions.isAuthAC });\ntype propsType = ConnectedProps<typeof AuthConnector>;\nexport const AuthContainer = AuthConnector(AuthBlock);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\ntype propsType = {\n  setPassVision: (passVision: boolean) => void;\n  setEmail: (email: string) => void;\n  setPassword: (password: string) => void;\n  setPasswordAccess: (passwordAccess: string) => void;\n  passwordAccess: string;\n  passVision: boolean;\n  password: string;\n  email: string;\n  regFun: (obj: { variables: { [key: string]: any } }) => void;\n};\nexport const Registration = (props: propsType) => {\n  const handler = () => {\n    props.setPassVision(!props.passVision);\n  };\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.regFun({\n          variables: {\n            email: props.email,\n            password: props.password,\n            passwordAccess: props.passwordAccess,\n          },\n        });\n      }}\n    >\n      <input\n        type=\"email\"\n        placeholder=\"Почта\"\n        value={props.email}\n        onChange={(e) => {\n          props.setEmail(e.currentTarget.value);\n        }}\n        required\n      />\n      <div className=\"passBlock\">\n        <input\n          type={props.passVision ? \"text\" : \"password\"}\n          value={props.password}\n          placeholder=\"Пароль\"\n          onChange={(e) => {\n            props.setPassword(e.currentTarget.value);\n          }}\n          required\n        />\n        <FontAwesomeIcon\n          onClick={handler}\n          title={!props.passVision ? \"Показать пароль\" : \"Скрыть пароль\"}\n          icon={props.passVision ? \"eye\" : \"eye-slash\"}\n        />\n      </div>\n      <input\n        type={props.passVision ? \"text\" : \"password\"}\n        value={props.passwordAccess}\n        placeholder=\"Введите пароль повторно\"\n        onChange={(e) => {\n          props.setPasswordAccess(e.currentTarget.value);\n        }}\n        required\n      />\n      <button type={\"submit\"}>Регистрация</button>\n    </form>\n  );\n};\n","import { gql, useLazyQuery } from \"@apollo/client\";\nimport { message } from \"antd\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../../store/authReducer\";\nimport { Preloader } from \"../preloader/preloader\";\nimport { Registration } from \"./registration\";\nexport const RegBlock = () => {\n  const [passVision, setPassVision] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordAccess, setPasswordAccess] = useState(\"\");\n  const [regFun, { loading }] = useLazyQuery(\n    gql`\n      query reg($email: String!, $password: String!, $passwordAccess: String!) {\n        reg(email: $email, password: $password, passwordAccess: $passwordAccess)\n      }\n    `,\n    {\n      onCompleted: () => {\n        message.success(\n          \"Необходимо подтверждение аккаунта. Вам на почту отправлено письмо.\"\n        );\n      },\n      onError: (err) =>\n        message.warn(\n          err.message === \"not enough data\"\n            ? \"Не все данные были введены\"\n            : err.message === \"acc already created\"\n            ? \"Аккаунт уже создан\"\n            : err.message === \"Password mismatch\"\n            ? \"Пароли не совпадают\"\n            : \"Что-то пошло не так\"\n        ),\n    }\n  );\n  if (loading) return <Preloader />;\n  return (\n    <Registration\n      email={email}\n      password={password}\n      setPassword={setPassword}\n      setEmail={setEmail}\n      passVision={passVision}\n      setPassVision={setPassVision}\n      setPasswordAccess={setPasswordAccess}\n      passwordAccess={passwordAccess}\n      regFun={regFun}\n    />\n  );\n};\nexport const RegistrationContainer = connect(null, {\n  isAuthAC: actions.isAuthAC,\n})(RegBlock);\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { GlobalState } from \"../../store/store\";\nimport { AuthContainer } from \"../auth/authContainer\";\nimport { RegistrationContainer } from \"../registration/registrationContainer\";\n\nconst MapStateToProps = (state: GlobalState) => ({\n  isAuth: state.authReducer.isAuth,\n});\nconst AccBlock = (props: propsType) => {\n  const [loginState, setLoginState] = useState(\"login\");\n  return props.isAuth ? (\n    <Navigate to=\"/\" />\n  ) : (\n    <div className=\"LogRegBlock\">\n      <div className=\"LogRegWrapper\">\n        <div className=\"LogRegTitles\">\n          <h3\n            style={{\n              color: loginState === \"login\" ? \"white\" : \"#c2c2c2\",\n            }}\n            onClick={() => {\n              setLoginState(\"login\");\n            }}\n          >\n            Вход\n          </h3>\n          <h3\n            style={{\n              color: loginState === \"registration\" ? \"white\" : \"#c2c2c2\",\n            }}\n            onClick={() => {\n              setLoginState(\"registration\");\n            }}\n          >\n            Регистрация\n          </h3>\n        </div>\n        <div className=\"LogReg\">\n          {loginState === \"login\" ? (\n            <AuthContainer />\n          ) : (\n            <RegistrationContainer />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\nconst AccountConnector = connect(MapStateToProps);\ntype propsType = ConnectedProps<typeof AccountConnector>;\nexport const AccountContainer = AccountConnector(AccBlock);\n","import { connect } from \"react-redux\";\nimport { App } from \"./App\";\nimport { actions } from \"./store/authReducer\";\nimport { GlobalState } from \"./store/store\";\n\ntype MapStateToPropsType = {\n  stateOfHeader: number;\n  isFillingVision: boolean;\n};\nconst MapStateToProps = (state: GlobalState): MapStateToPropsType => ({\n  stateOfHeader: state.menuReducer.stateOfHeader,\n  isFillingVision: state.mainReducer.isFillingVision,\n});\n\nexport const AppContainer = connect(MapStateToProps, {\n  isAuthAC: actions.isAuthAC,\n})(App);\n","import React from \"react\";\nimport \"./css/style.scss\";\nimport { HeaderContainer } from \"./components/header/headerContainer\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { HelpContainer } from \"./components/contact/helpContainer\";\nimport { MainContainer } from \"./components/main-components/MainContainer\";\nimport { AcceptAccount } from \"./components/acc/acceptAccount\";\nimport { AccountContainer } from \"./components/acc/accountContainer\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { dataType } from \"./store/authReducer\";\nimport { Preloader } from \"./components/preloader/preloader\";\nimport { templateFragment } from \"./components/graphQl-fragments/templateFragment\";\n\ntype propsType = {\n  stateOfHeader: number;\n  isFillingVision: boolean;\n  isAuthAC: (\n    isAuth: boolean,\n    templates: Array<dataType>,\n    token: string\n  ) => void;\n};\nexport const App = (props: propsType) => {\n  const userToken = localStorage.getItem(\"token\");\n  let { loading } = useQuery(\n    gql`\n      ${templateFragment}\n      query getUserData($userToken: String) {\n        getUsersData(userToken: $userToken) {\n          templates {\n            ...template\n          }\n          token\n        }\n      }\n    `,\n    {\n      variables: {\n        userToken: userToken ? userToken.replace(/\"/g, ``) : null,\n      },\n      notifyOnNetworkStatusChange: true,\n      onCompleted: (data) => {\n        props.isAuthAC(\n          true,\n          data.getUsersData.templates,\n          data.getUsersData.token\n        );\n      },\n    }\n  );\n  if (loading) {\n    return <Preloader />;\n  }\n  return (\n    <div className=\"App\">\n      <HeaderContainer />\n      <main>\n        <Routes>\n          <Route path=\"/\" element={<MainContainer />} />\n          <Route path=\"/help\" element={<HelpContainer />} />\n          <Route path=\"/account\" element={<AccountContainer />} />\n          <Route path=\"/accept/:Id\" element={<AcceptAccount />} />\n          <Route path=\"*\" element={<MainContainer />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This consts the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. const's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\nimport { mainReducer } from \"./mainReducer\";\nimport { menuReducer } from \"./menuReducer\";\nimport { authReducer } from \"./authReducer\";\n\nconst reducers = combineReducers({\n  mainReducer,\n  authReducer,\n  menuReducer,\n});\nexport type actionsTypes<\n  T extends { [keys: string]: (...args: any[]) => any }\n> = ReturnType<T extends { [key: string]: infer U } ? U : never>;\nexport type GlobalState = ReturnType<typeof reducers>;\nconst store = createStore(reducers);\n\nexport default store;\n","import {\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n  faCogs,\n  faEye,\n  faTimes,\n  faEyeSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nlibrary.add(\n  faAngleDoubleRight,\n  faAngleDoubleLeft,\n  faCogs,\n  faTimes,\n  faEye,\n  faEyeSlash\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppContainer } from \"./AppContainer\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./accets/FAIcons\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      UserData: {\n        keyFields: [\"templates\"],\n      },\n    },\n  }),\n  uri: \"/GqlApi\",\n});\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}