{"version":3,"sources":["accets/img/Template-1.png","accets/img/Template-2.png","accets/img/Template-3.png","accets/img/Template-4.png","accets/img/preloader.webp","components/header/header.tsx","store/authReducer.ts","store/menuReducer.ts","components/header/headerContainer.tsx","components/contact/help.tsx","components/contact/helpContainer.tsx","components/main-components/form-display/FormInput.tsx","components/main-components/get-code/HtmlCreatorBlock.tsx","components/main-components/get-code/HtmlCreator.tsx","components/main-components/form-display/Form.tsx","store/mainReducer.ts","store/initialTemplates.ts","components/main-components/form-display/FormContainer.tsx","components/main-components/form-customization/customization/SeeingFields.tsx","components/main-components/form-customization/customization/Field.tsx","components/main-components/form-customization/customization/DataFilling.tsx","components/graphQl-fragments/templateFragment.ts","components/main-components/form-customization/customization/DataFillingContainer.tsx","components/main-components/form-customization/miniHeader.tsx","components/main-components/form-customization/templates/templates.tsx","components/main-components/form-customization/templates/filter.tsx","components/main-components/form-customization/templates/filterContainer.tsx","selectors/templateSelector.ts","components/main-components/form-customization/templates/templatesContainer.tsx","components/main-components/form-customization/user-templates/personalTemplatesCreator.tsx","components/main-components/form-customization/user-templates/personalTemplatesContainer.tsx","components/main-components/form-customization/user-templates/personalTemplates.tsx","components/main-components/form-customization/MiniHeaderSwitchContainer.ts","components/main-components/form-customization/MiniHeaderSwitch.tsx","components/main-components/MainContainer.tsx","components/main-components/Main.tsx","components/preloader/preloader.tsx","components/acc/acceptAccount.tsx","components/auth/auth.tsx","components/auth/authContainer.tsx","components/registration/registration.tsx","components/registration/registrationContainer.tsx","components/acc/accountContainer.tsx","AppContainer.tsx","App.tsx","serviceWorker.js","store/store.ts","accets/FAIcons.js","index.tsx"],"names":["module","exports","Header","props","className","to","isAuth","onClick","handler","data","userTemplates","token","actions","isAuthAC","templates","type","userTemplatesAC","deleteUserTemplatesAC","template","logoutAC","stateOfHeader","stateOfHeaderAC","HeaderContainer","connect","state","authReducer","menuReducer","authActions","HeaderConnector","localStorage","removeItem","message","success","Form","onSubmit","e","preventDefault","sendMessage","variables","name","email","messages","value","onChange","setName","currentTarget","placeholder","required","setEmail","setMessages","disabled","loading","HelpContainer","useState","useMutation","gql","onCompleted","onError","error","warn","FormInput","Field","numOfFields","labelsPosition","style","justifySelf","width","display","descriptionPosition","color","descriptionColor","fieldDescription","height","marginLeft","htmlFor","i","id","HtmlCreatorBlock","stateOfForm","changeState","whiteSpace","inputs","map","title","join","generalBackgroundColor","formWidth","formBackgroundColor","formMarginTop","titleColor","buttWidth","buttHeight","buttTextColor","buttColor","textColor","HtmlCreator","InputsCreator","key","backgroundColor","marginTop","gridTemplateColumns","onMouseOver","background","onMouseLeave","action","method","selectedInput","isFillingVision","isFilterVision","filters","fields","settings","nameOfTemplate","image","Template1","group","Template2","Template3","Template4","ApplyUserTemplateAC","ApplyTemplateAC","ChangeStateOFFormAC","ChangeFormBackgroundColorAC","ChangeButtTextColorAC","ChangeIsFilterVision","ChangeButtColorAC","ChangeGeneralBackgroundColorAC","ChangeAddFieldAC","ChangeInputsAC","index","ChangeFillingVisionAC","ChangeTitleAC","ChangeSelectedInputAC","ChangeDeleteFieldAC","ChangeNumOfFieldsAC","ChangeLabelsPositionAC","FiltersAC","ChangeFormMarginTopAC","ChangeButtHeightAC","ChangeButtWidthAC","ChangeFormWidthAC","ChangeTextColorAC","ChangeDescriptionColorAC","ChangeTitleColorAC","FormContainer","mainReducer","FormConnector","SeeingFields","isObjVision","setIsObjVision","DeleteField","a","setTimeout","icon","changeInput","React","memo","useEffect","setPlaceholder","setTypeOfInput","setFieldDescription","setDescriptionPosition","setHeight","String","setWidth","setSize","typeOfInput","size","changeInputHandler","target","step","min","max","Number","Button","checked","process","DataFilling","InputsMaker","saveTemplate","warning","templateFragment","DataFillingContainer","DataFillingConnector","refetchQueries","val","MiniHeader","cursor","Templates","src","alt","Filter","optionsWrapper","VisionFilter","FilterContainer","FilterConnector","TemplateSelector","createSelector","filter","indexOf","TemplatesContainer","TemplatesConnector","TemplatesMaker","PersonalTemplatesCreator","deleteTempl","border","margin","marginBottom","PersonalTemplatesContainer","PersonalTemplatesConnector","userTemplatesMaker","MiniHeaderSwitchContainer","MainContainer","Preloader","preloader","AcceptAccount","withRouter","useQuery","match","params","Id","Auth","formRes","password","passVision","setPassword","setPassVision","AuthContainer","AuthConnector","useLazyQuery","setItem","JSON","stringify","auth","err","Registration","regFun","passwordAccess","setPasswordAccess","RegistrationContainer","AccountContainer","AccountConnector","loginState","setLoginState","AppContainer","userToken","getItem","replace","notifyOnNetworkStatusChange","getUsersData","exact","path","render","Boolean","window","location","hostname","reducers","combineReducers","newObj","parse","length","substr","keysOfInputs","Object","keys","posEl","forEach","splice","push","copyState","store","createStore","library","add","faAngleDoubleRight","faAngleDoubleLeft","faCogs","faTimes","faEye","faEyeSlash","client","ApolloClient","cache","InMemoryCache","typePolicies","UserData","keyFields","uri","ReactDOM","ApolloProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.83096c5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Template-1.8d398272.png\";","module.exports = __webpack_public_path__ + \"static/media/Template-2.5213bf95.png\";","module.exports = __webpack_public_path__ + \"static/media/Template-3.17829dbb.png\";","module.exports = __webpack_public_path__ + \"static/media/Template-4.e1733ffa.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.e691533e.webp\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\ntype props = {\n  isAuth: boolean;\n  handler:()=>void\n};\nexport let Header = (props: props) => {\n  return (\n    <header>\n      <div className=\"header\">\n        <span className=\"logo-txt\">\n          <NavLink to=\"/\">FormMaker</NavLink>\n        </span>\n        <NavLink to=\"/\">Главная</NavLink>\n        <NavLink to=\"/help\">Помощь</NavLink>\n        {props.isAuth ? (\n          <p onClick={props.handler}>Выйти</p>\n        ) : (\n          <NavLink to=\"/account\">Войти</NavLink>\n        )}\n      </div>\n    </header>\n  );\n};\n","import { actionsTypes} from \"./store\";\n\ntype dataInputNumParamType = {\n  name: string | null;\n  placeholder: string | null;\n  type: string | null;\n  width: number | null;\n  height: number | null;\n  fieldDescription: string | null;\n  descriptionPosition: \"inline\" | \"bottom\";\n};\ntype dataAuthType = typeof data;\n\nexport type dataType = {\n  generalBackgroundColor: string;\n  formBackgroundColor: string;\n  textColor: string;\n  buttColor: string;\n  buttTextColor: string;\n  title: string;\n  descriptionColor: string;\n  titleColor: string;\n  labelsPosition: string;\n  formWidth: number;\n  formMarginTop: number;\n  buttWidth: number;\n  buttHeight: number;\n  numOfFields: number;\n  inputs: Array<dataInputNumParamType>;\n};\nlet data = {\n  isAuth: false,\n  userTemplates: [] as Array<dataType>,\n  token: \"\",\n};\ntype actionTypes = actionsTypes<typeof actions>;\n\nexport let authReducer = (state: dataAuthType = data, action: actionTypes) => {\n  switch (action.type) {\n    case \"Auth\": {\n      let copyState = { ...state };\n      copyState.isAuth = action.isAuth;\n      copyState.userTemplates = action.templates;\n      copyState.token = action.token;\n      return { ...copyState };\n    }\n    case \"userTemplates\": {\n      let copyState = JSON.parse(JSON.stringify(state));\n      copyState.userTemplates.push(action.userTemplates);\n      return { ...copyState };\n    }\n    case \"deleteUserTemplatesAC\": {\n      let copyState = JSON.parse(JSON.stringify(state));\n      copyState.userTemplates.splice(action.template, 1);\n      return { ...copyState };\n    }\n    case \"logout\": {\n      let copyState = { ...state };\n      copyState.isAuth = false;\n      return { ...copyState };\n    }\n    default: {\n      return state;\n    }\n  }\n};\nexport let actions = {\n  isAuthAC: (isAuth: boolean, templates: Array<dataType>, token: string) =>\n    ({\n      type: \"Auth\",\n      isAuth,\n      templates,\n      token,\n    } as const),\n  userTemplatesAC: (userTemplates: dataType) =>\n    ({\n      type: \"userTemplates\",\n      userTemplates,\n    } as const),\n  deleteUserTemplatesAC: (template: number) =>\n    ({\n      type: \"deleteUserTemplatesAC\",\n      template,\n    } as const),\n  logoutAC: () =>\n    ({\n      type: \"logout\",\n    } as const),\n};","type dataType = {\n  stateOfHeader: number;\n};\nlet data: dataType = {\n  stateOfHeader: 1,\n};\nexport let menuReducer = (\n  state = data,\n  action: ReturnType<typeof stateOfHeaderAC>\n) => {\n  switch (action.type) {\n    case \"stateOfHeader\": {\n      return { ...state, stateOfHeader: Number(action.stateOfHeader) };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n};\ntype stateOfHeaderACType = {\n  type: string;\n  stateOfHeader: number;\n};\nexport let stateOfHeaderAC = (stateOfHeader: number): stateOfHeaderACType => ({\n  type: \"stateOfHeader\",\n  stateOfHeader,\n});\n","import {connect, ConnectedProps} from \"react-redux\";\nimport { Header } from \"./header\";\nimport { GlobalState } from \"../../store/store\";\nimport  React from \"react\";\nimport {actions  as authActions} from \"../../store/authReducer\";\nimport {stateOfHeaderAC} from \"../../store/menuReducer\";\nimport {message} from \"antd\";\nlet MapStateToProps = (state: GlobalState) => ({\n  isAuth: state.authReducer.isAuth,\n  stateOfHeader:state.menuReducer.stateOfHeader\n});\nlet HeaderBlock=(props:propsType)=>{\n  let handler=()=>{\n    localStorage.removeItem(\"token\");\n    props.logoutAC();\n    if (props.stateOfHeader === 3) {\n      props.stateOfHeaderAC(2)\n    }\n    message.success(\"Вы вышли из аккаунта\");\n  }\n  return <Header handler={handler} isAuth={props.isAuth}/>\n}\nexport let HeaderConnector = connect(MapStateToProps,{logoutAC:authActions.logoutAC,stateOfHeaderAC});\ntype propsType=ConnectedProps<typeof HeaderConnector >;\nexport let HeaderContainer=HeaderConnector (HeaderBlock);\n","import React from \"react\";\ntype propsType = {\n  name: string;\n  email: string;\n  messages: string;\n  loading: boolean;\n  setName: (name: string) => void;\n  setEmail: (email: string) => void;\n  setMessages: (message: string) => void;\n  sendMessage: (obj: {\n    variables: { name: string; email: string; message: string };\n  }) => void;\n};\nexport let Form = (props: propsType) => {\n  return (\n    <div className=\"HelpForm\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.sendMessage({\n            variables: {\n              name: props.name,\n              email: props.email,\n              message: props.messages,\n            },\n          });\n        }}\n      >\n        <h1>Мы ответим вам в течение часа</h1>\n        <input\n          className=\"help-input\"\n          value={props.name}\n          onChange={(e) => {\n            props.setName(e.currentTarget.value);\n          }}\n          placeholder=\"Ваше имя\"\n          type=\"text\"\n          required\n        />\n        <input\n          className=\"help-input\"\n          value={props.email}\n          onChange={(e) => {\n            props.setEmail(e.currentTarget.value);\n          }}\n          placeholder=\"Почта\"\n          type=\"email\"\n          required\n        />\n        <textarea\n          className=\"help-input\"\n          value={props.messages}\n          onChange={(e) => {\n            props.setMessages(e.currentTarget.value);\n          }}\n          placeholder=\"Сообщение\"\n          required\n        />\n        <div className=\"CheckMessageAccept\">\n          <label>\n            Отправляя сообщение, я даю соглашение на обработку персональных\n            данных\n          </label>\n          <input name=\"agree\" type=\"checkbox\" required />\n        </div>\n        <button type=\"submit\" disabled={props.loading}>\n          Отправить\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Form } from \"./help\";\nimport { message } from \"antd\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nexport let HelpContainer = () => {\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [messages, setMessages] = useState(\"\");\n  let [sendMessage, { loading }] = useMutation(\n    gql`\n      mutation sendMessage($name: String!, $email: String!, $message: String!) {\n        sendMessage(name: $name, email: $email, message: $message)\n      }\n    `,\n    {\n      onCompleted: () => {\n        message.success(\"Сообщение отправлено\");\n      },\n      onError: (error) => {\n        message.warn(\n          error.message === \"data\"\n            ? \"Не все данные были введены\"\n            : \"Что-то пошло не так\"\n        );\n      },\n    }\n  );\n  return (\n    <Form\n      setEmail={setEmail}\n      email={email}\n      loading={loading}\n      name={name}\n      messages={messages}\n      sendMessage={sendMessage}\n      setMessages={setMessages}\n      setName={setName}\n    />\n  );\n};\n","import React from \"react\";\ntype propsType = {\n  type: string;\n  numOfFields: number;\n  labelsPosition: string;\n  name: string;\n  descriptionPosition: string;\n  descriptionColor: string;\n  width: number;\n  height: number;\n  disabled?: boolean;\n  placeholder: string;\n  fieldDescription: string;\n  i: number;\n};\nexport const FormInput = (props: propsType) => {\n  let Field = () => {\n    if (props.type === \"textarea\") {\n      return (\n        <div\n          className={\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\n              ? \"wrapper-Form-Intputs-two-textarea \"\n              : \"wrapper-Form-Intputs-one-textarea\"\n          }\n          style={\n            props.numOfFields === 1 && props.labelsPosition === \"top\"\n              ? { justifySelf: \"center\", width: \"fit-content\" }\n              : {}\n          }\n        >\n          {props.name ? (\n            <div className=\"textOfInputs\">\n              <label>{`${props.name}`}</label>\n              <p\n                style={{\n                  display:\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\n                  color: props.descriptionColor,\n                }}\n              >\n                {!props.fieldDescription\n                  ? \"\"\n                  : props.descriptionPosition === \"inline\"\n                  ? ` (${props.fieldDescription})`\n                  : `${props.fieldDescription}`}\n              </p>\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <textarea\n            disabled={props.disabled}\n            style={{\n              width: props.width + \"vw\",\n              height: props.height + \"vh\",\n              color: \"black\",\n            }}\n            placeholder={props.placeholder}\n            required\n          />\n        </div>\n      );\n    } else if (props.type === \"file\") {\n      return (\n        <div\n          className={\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\n              ? \"wrapper-Form-Intputs-two-textarea \"\n              : \"wrapper-Form-Intputs-one-textarea\"\n          }\n          style={{\n            justifySelf:\n              props.numOfFields === 1 && props.labelsPosition === \"top\"\n                ? \"center\"\n                : \"left\",\n            width: \"fit-content\",\n            marginLeft:\n              props.numOfFields === 2 && props.labelsPosition === \"top\"\n                ? \"10%\"\n                : \"\",\n          }}\n        >\n          {props.name ? (\n            <div className=\"textOfInputs\">\n              <label>{`${props.name}`}</label>\n              <p\n                style={{\n                  display:\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\n                  color: props.descriptionColor,\n                }}\n              >\n                {!props.fieldDescription\n                  ? \"\"\n                  : props.descriptionPosition === \"inline\"\n                  ? ` (${props.fieldDescription})`\n                  : `${props.fieldDescription}`}\n              </p>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <input\n            placeholder={props.placeholder}\n            type={props.type || \"text\"}\n            required\n            disabled={props.disabled}\n            style={{\n              color: \"black\",\n            }}\n          />\n        </div>\n      );\n    } else if (props.type === \"checkbox\") {\n      return (\n        <div\n          className={\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\n              ? \"inputRadio wrapper-Form-CheckBoxes-two \"\n              : \"inputRadio wrapper-Form-CheckBoxes-one\"\n          }\n          style={\n            props.numOfFields === 1 && props.labelsPosition === \"top\"\n              ? { justifySelf: \"center\" }\n              : props.numOfFields === 2 && props.labelsPosition === \"top\"\n              ? { marginLeft: \"10%\" }\n              : {}\n          }\n        >\n          <div className=\"textOfInputs\">\n            {props.name ? (\n              <label htmlFor={props.disabled ? \"\" : \"inputRadio\" + props.i}>\n                {props.name}\n              </label>\n            ) : (\n              \"\"\n            )}\n            <input\n              style={{\n                width: props.width + \"vw\",\n                height: props.height + \"vh\",\n                color: \"black\",\n              }}\n              id={\"inputRadio\" + props.i}\n              type={props.type || \"radio\"}\n              disabled={props.disabled}\n              required\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={\n            props.labelsPosition === \"top\"\n              ? \"wrapper-Form-Intputs-top\"\n              : \"wrapper-Form-Intputs-left\"\n          }\n        >\n          {props.name ? (\n            <div className=\"textOfInputs\">\n              <label>{`${props.name} `}</label>\n              <p\n                style={{\n                  display:\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\n                  color: props.descriptionColor,\n                }}\n              >\n                {!props.fieldDescription\n                  ? \"\"\n                  : props.descriptionPosition === \"inline\"\n                  ? ` (${props.fieldDescription})`\n                  : `${props.fieldDescription}`}\n              </p>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <input\n            placeholder={props.placeholder}\n            type={props.type || \"text\"}\n            required\n            disabled={props.disabled}\n            style={{\n              width: props.width + \"vw\",\n              height: props.height + \"vh\",\n              color: \"black\",\n            }}\n          />\n        </div>\n      );\n    }\n  };\n  return (\n    <>\n      <Field />\n    </>\n  );\n};\n","import React from \"react\";\nimport { HtmlCreator } from \"./HtmlCreator\";\nimport { dataInputNumParamType } from \"../../../store/mainReducer\";\n\ntype propsType = {\n  generalBackgroundColor: string;\n  formBackgroundColor: string;\n  descriptionColor: string;\n  textColor: string;\n  buttTextColor: string;\n  formWidth: number;\n  buttWidth: number;\n  labelsPosition: string;\n  stateOfForm: boolean;\n  changeState: () => void;\n  titleColor: string;\n  buttColor: string;\n  formMarginTop: number;\n  numOfFields: number;\n  buttHeight: number;\n  title: string;\n  inputs: Array<dataInputNumParamType>;\n};\nexport let HtmlCreatorBlock = (props: propsType) => (\n  <div className={props.stateOfForm ? \"CodeBlock hidden\" : \"CodeBlock shown\"}>\n    <div className=\"Code\">\n      <p className=\"cancel\" onClick={props.changeState}>\n        ×\n      </p>\n      <p style={{ whiteSpace: \"pre-line\" }}>\n        {HtmlCreator({\n          generalBackgroundColor: props.generalBackgroundColor,\n          formBackgroundColor: props.formBackgroundColor,\n          titleColor: props.titleColor,\n          descriptionColor: props.descriptionColor,\n          textColor: props.textColor,\n          buttColor: props.buttColor,\n          buttTextColor: props.buttTextColor,\n          formMarginTop: props.formMarginTop,\n          formWidth: props.formWidth,\n          buttHeight: props.buttHeight,\n          buttWidth: props.buttWidth,\n          numOfFields: props.numOfFields,\n          title: props.title,\n          labelsPosition: props.labelsPosition,\n          inputs: props.inputs,\n        })}\n      </p>\n    </div>\n    <div onClick={props.changeState} className=\"modal\" />\n  </div>\n);\n","import { dataInputNumParamType } from \"../../../store/mainReducer\";\n\ntype propsType = {\n  generalBackgroundColor: string;\n  formBackgroundColor: string;\n  descriptionColor: string;\n  textColor: string;\n  buttTextColor: string;\n  formWidth: number;\n  buttWidth: number;\n  labelsPosition: string;\n  titleColor: string;\n  buttColor: string;\n  formMarginTop: number;\n  numOfFields: number;\n  buttHeight: number;\n  title: string;\n  inputs: Array<dataInputNumParamType>;\n};\nexport const HtmlCreator = (props: propsType) => {\n  let inputs = props.inputs.map((e) => {\n    if (e.type === \"textarea\") {\n      return `<div class=\"wrapper-form-inputs-textarea\"><div class=\"textOfInputs\">${\n        e.name ? `<label>${e.name}</label>` : ``\n      }${\n        e.fieldDescription\n          ? `<p style=\"${\n              e.descriptionPosition === \"inline\" ? \"display:inline\" : \"\"\n            }\">${\n              e.descriptionPosition === \"inline\"\n                ? \"(\" + e.fieldDescription + \")\"\n                : e.fieldDescription\n            }</p>`\n          : \"\"\n      }\n      </div><textarea style=\"height:${e.height}vh;width:${\n        e.width\n      }vw;\" placeholder=\"${e.placeholder}\"/></div>`;\n    } else if (e.type === \"checkbox\") {\n      return `<div class=\"wrapper-form-inputs\"><div style=\"display:grid;\n      grid-template-columns: 1fr 1fr;align-items: center;\" class=\"textOfInputs\">${\n        e.name ? `<label>${e.name}</label>` : ``\n      }\n      <input style=\"color:black;width:${e.width}vw;height:${\n        e.height\n      }vh\" placeholder=\"${e.placeholder}\" type=\"${e.type}\"/></div></div>`;\n    } else {\n      /************Остальное ****************/\n      return `<div class=\"wrapper-form-inputs\"><div class=\"textOfInputs\" >${\n        e.name ? `<label>${e.name}</label>` : ``\n      }${\n        e.fieldDescription\n          ? `<p style=\"${\n              e.descriptionPosition === \"inline\" ? \"display:inline\" : \"\"\n            }\">${\n              e.descriptionPosition === \"inline\"\n                ? \"(\" + e.fieldDescription + \")\"\n                : e.fieldDescription\n            }</p>`\n          : \"\"\n      }\n      </div><input style=\"color:black;width:${e.width}vw;height:${\n        e.height\n      }vh\" placeholder=\"${e.placeholder}\" type=\"${e.type}\"/></div>`;\n    }\n  });\n  return `Html: \\n <div class=\"formBlock\">\\n<form class=\"form\" action=\"/\" method=\"Post\"/> \\n <h1 class=\"FormTitle\">${\n    props.title || \"Заголовок\"\n  }</h1> \\n <div class=\"wrapperOfInputsCreator\">${inputs.join(\n    \"\\n\"\n  )}</div> \\n <button onclick=\"return false\">Отправить</button>\\n</form>\\n</div>\n   \\n CSS:\\n @import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,400;0,600;0,700;0,800;0,900;1,400;1,600;1,700;1,800;1,900&display=swap');\n    * {margin: 0;padding: 0;font-family: 'Nunito', sans-serif;} \n   input:not([type=\"color\"]) { padding-left: .2vw;}\n   input { border-radius: 5px;border-width: 1px; outline: none;}\n   .formBlock { background-color:${\n     props.generalBackgroundColor\n   };width: 100%;display: grid;justify-items: center;grid-gap: 2vw;} \n   .formBlock .form {text-align:center;margin-bottom: 2vw;font-size: 1.7vmin;height: -moz-fit-content;height: fit-content;padding: 2vw 3vw 2vw 3vw;grid-auto-rows: minmax(auto, 2vw);width:${\n     props.formWidth\n   }%;background-color:${props.formBackgroundColor};margin-top:${\n    props.formMarginTop\n  }vh}\n   .formBlock .form h1 {color:${\n     props.titleColor\n   };grid-column: 1/3;text-align: center;}\n   .formBlock .form button{cursor: pointer;width:${props.buttWidth}vw;height:${\n    props.buttHeight\n  }vh;color:${props.buttTextColor};background-color:${\n    props.buttColor\n  };outline: none;font-size: 0.9vw;border: none;margin-top: 2vw;transition: all ease 0.3s;}\n  .formBlock .form button:hover {border:1px solid;color:${\n    props.buttColor\n  };background-color:${props.formBackgroundColor}}\n  .formBlock .form .wrapperOfInputsCreator {display: grid;grid-gap: 3vw 5vw;grid-auto-rows: minmax(auto, auto);grid-template-columns: ${\n    props.numOfFields === 2 && props.labelsPosition === \"top\"\n      ? \"1fr 1fr\"\n      : \"1fr\"\n  };align-self: center;padding-top: 2vw;padding-bottom: 2vw; margin-bottom: 2vw;margin-top: 2vw;border-radius: .8vw;}\n   .formBlock .form .wrapperOfInputsCreator .wrapper-form-inputs-textarea{display: grid;text-align: left;grid-template-columns: 1fr;grid-column-start: 1;grid-column-end: ${\n     props.numOfFields === 2 && props.labelsPosition === \"top\" ? 3 : 2\n   };${\n    props.numOfFields === 2 && props.labelsPosition === \"top\"\n      ? \"justify-self: center;\"\n      : \"\"\n  }${\n    props.numOfFields === 1 && props.labelsPosition === \"top\"\n      ? \"justify-self: center;width: fit-content;\"\n      : \"width: 100%;margin-left:8vw;\"\n  }}\n  .formBlock .form .wrapperOfInputsCreator .textOfInputs{grid-gap: 1vw 1vw;align-self: center;}\n  .textOfInputs p{ color:${props.descriptionColor}}\n  .textOfInputs label {color:${props.textColor}}\n  .wrapper-form-inputs-textarea textarea {color:black;max-height: 18vh;min-height: 15vh;grid-column: 1/3;}\n  .formBlock .form .wrapperOfInputsCreator .wrapper-form-inputs {display: grid;text-align: left;${\n    props.labelsPosition === \"top\"\n      ? \"grid-template-columns: 1fr;justify-self: center;width: -moz-fit-content;width: fit-content;\"\n      : \"grid-template-columns: 1fr 1fr;width: 100%;\"\n  }}\n  `;\n};\n","import React from \"react\";\nimport { FormInput } from \"./FormInput\";\nimport { HtmlCreatorBlock } from \"../get-code/HtmlCreatorBlock\";\nimport { dataInputNumParamType } from \"../../../store/mainReducer\";\n\ntype propsType = {\n  inputs: Array<dataInputNumParamType>;\n  generalBackgroundColor: string;\n  numOfFields: number;\n  buttHeight: number;\n  buttWidth: number;\n  formBackgroundColor: string;\n  textColor: string;\n  buttTextColor: string;\n  buttColor: string;\n  stateOfForm: boolean;\n  title: string;\n  titleColor: string;\n  descriptionColor: string;\n  formWidth: number;\n  formMarginTop: number;\n  labelsPosition: string;\n  changeState: () => void;\n};\nexport let Form = (props: propsType) => {\n  if (props.inputs) {\n    let InputsCreator = props.inputs.map((e, i) => {\n      return (\n        <FormInput\n          key={i}\n          labelsPosition={props.labelsPosition}\n          i={i}\n          numOfFields={props.numOfFields}\n          type={props.inputs[i].type || \"text\"}\n          name={props.inputs[i].name || \"\"}\n          placeholder={props.inputs[i].placeholder || \"\"}\n          fieldDescription={props.inputs[i].fieldDescription || \"\"}\n          descriptionPosition={props.inputs[i].descriptionPosition || \"\"}\n          width={props.inputs[i].width || 20}\n          height={props.inputs[i].height || 5}\n          descriptionColor={props.descriptionColor}\n        />\n      );\n    });\n    return (\n      <>\n        <div\n          className=\"formBlock\"\n          style={{ backgroundColor: props.generalBackgroundColor }}\n        >\n          <form\n            onSubmit={(e) => e.preventDefault()}\n            className=\"form\"\n            style={{\n              color: props.textColor,\n              backgroundColor: props.formBackgroundColor,\n              width: props.formWidth + \"%\",\n              marginTop: props.formMarginTop + \"vh\",\n            }}\n          >\n            <h1 className=\"FormTitle\" style={{ color: props.titleColor }}>\n              {props.title || \"Заголовок\"}\n            </h1>\n            <div\n              className=\"wrapperOfInputsCreator\"\n              style={{\n                gridTemplateColumns:\n                  props.labelsPosition === \"left\" || props.numOfFields === 1\n                    ? \"1fr\"\n                    : \"1fr 1fr\",\n              }}\n            >\n              {InputsCreator}\n            </div>\n            <button\n              type=\"submit\"\n              onMouseOver={(e) => {\n                e.currentTarget.style.color = props.buttColor;\n                e.currentTarget.style.background = \"none\";\n              }}\n              onMouseLeave={(e) => {\n                e.currentTarget.style.color = props.buttTextColor;\n                e.currentTarget.style.background = props.buttColor;\n              }}\n              style={{\n                height: props.buttHeight + \"vh\",\n                width: props.buttWidth + \"vw\",\n                color: props.buttTextColor,\n                backgroundColor: props.buttColor,\n              }}\n            >\n              Отправить\n            </button>\n          </form>\n        </div>\n        <HtmlCreatorBlock\n          generalBackgroundColor={props.generalBackgroundColor}\n          formBackgroundColor={props.formBackgroundColor}\n          titleColor={props.titleColor}\n          descriptionColor={props.descriptionColor}\n          textColor={props.textColor}\n          buttColor={props.buttColor}\n          buttTextColor={props.buttTextColor}\n          formMarginTop={props.formMarginTop}\n          formWidth={props.formWidth}\n          buttHeight={props.buttHeight}\n          buttWidth={props.buttWidth}\n          numOfFields={props.numOfFields}\n          title={props.title}\n          labelsPosition={props.labelsPosition}\n          inputs={props.inputs}\n          stateOfForm={props.stateOfForm}\n          changeState={props.changeState}\n        />\n      </>\n    );\n  } else {\n    return (\n      <>\n        <form action=\"\" method=\"post\" />\n      </>\n    );\n  }\n};\n","import {dataType as authDataType} from \"./authReducer\"\r\nimport {message} from \"antd\";\r\nimport {actionsTypes} from \"./store\";\r\nimport {templates} from \"./initialTemplates\";\r\n\r\n/***********************types of inputs*******************************/\r\nexport type dataInputNumParamType = {\r\n    name: string,\r\n    placeholder: string,\r\n    type: string,\r\n    width: number,\r\n    height: number,\r\n    fieldDescription: string,\r\n    descriptionPosition: \"inline\" | \"bottom\",\r\n}\r\n/***********************type of default templates*******************************/\r\nexport type dataTemplatesNumbersFieldsType = {\r\n    fields: Array<dataInputNumParamType>,\r\n    settings: dataTemplatesSettingsType\r\n}\r\ntype dataTemplatesSettingsType = {\r\n    nameOfTemplate: string | null,\r\n    generalBackgroundColor: string,\r\n    image: string,\r\n    group: string,\r\n    labelsPosition: string,\r\n    title: string | null,\r\n    numOfFields: number,\r\n    formWidth: number,\r\n    buttWidth: number,\r\n    buttHeight: number,\r\n    formMarginTop: number,\r\n    formBackgroundColor: string,\r\n    textColor: string,\r\n    descriptionColor: string,\r\n    buttTextColor: string,\r\n    titleColor: string,\r\n    buttColor: string\r\n}\r\n\r\n/******************************************* *******************************/\r\ntype dataType = typeof data;\r\n\r\nlet data = {\r\n    generalBackgroundColor: \"#ffffff\",\r\n    formBackgroundColor: \"#a3a19f\",\r\n    selectedInput: null as null|number,\r\n    formWidth: 80,\r\n    formMarginTop: 23,\r\n    textColor: \"#000000\",\r\n    buttColor: \"#65ccbc\",\r\n    buttTextColor: \"#fdfcff\",\r\n    buttWidth: 35,\r\n    buttHeight: 6,\r\n    stateOfForm: true,\r\n    isFillingVision: true,\r\n    title: \"\",\r\n    descriptionColor: \"#a175ff\",\r\n    titleColor: \"#ffffff\",\r\n    labelsPosition: \"top\",\r\n    numOfFields: 2,\r\n    inputs: [\r\n         {\r\n            name: \"Поле1\",\r\n            placeholder: \"\",\r\n            type: \"text\",\r\n            width: 20,\r\n            height: 3,\r\n            fieldDescription: \"\",\r\n            descriptionPosition: \"inline\"\r\n        },\r\n        {\r\n            name: \"Поле2\",\r\n            placeholder: \"\",\r\n            type: \"text\",\r\n            width: 20,\r\n            height: 3,\r\n            fieldDescription: \"\",\r\n            descriptionPosition: \"inline\"\r\n        }\r\n    ] as Array<dataInputNumParamType>,\r\n    isFilterVision: false,\r\n    filters: [] as Array<string>,\r\n    templates: templates as Array<dataTemplatesNumbersFieldsType>\r\n};\r\ntype localActionsTypes = actionsTypes<typeof actions>;\r\nexport const mainReducer = (state = data, action: localActionsTypes): dataType => {\r\n    switch (action.type) {\r\n        case \"formBackgroundColor\":\r\n            return {...state, formBackgroundColor: action.formBackgroundColor};\r\n\r\n        case \"numOfFields\": {\r\n            return {\r\n                ...state,\r\n                numOfFields:\r\n                    Number(action.numOfFields) > 2\r\n                        ? 2\r\n                        : Number(action.numOfFields) < 1\r\n                        ? 1\r\n                        : Number(action.numOfFields)\r\n            };\r\n        }\r\n        case \"title\": {\r\n            return {...state, title: action.title};\r\n        }\r\n        case \"buttWidth\": {\r\n            return {\r\n                ...state,\r\n                buttWidth:\r\n                    Number(action.buttWidth) < 0\r\n                        ? 0\r\n                        : Number(action.buttWidth) > 100\r\n                        ? 100\r\n                        : Number(action.buttWidth)\r\n            };\r\n        }\r\n        case \"buttHeight\": {\r\n            return {\r\n                ...state,\r\n                buttHeight:\r\n                    Number(action.buttHeight) < 0 ? 0 : Number(action.buttHeight)\r\n            };\r\n        }\r\n        case \"isFilterVision\": {\r\n            return {...state, isFilterVision: !state.isFilterVision};\r\n        }\r\n        case \"FillingVision\": {\r\n            return {...state, isFillingVision: !state.isFillingVision};\r\n        }\r\n        case \"buttColor\": {\r\n            return {...state, buttColor: action.buttColor};\r\n        }\r\n        case \"labelsPosition\": {\r\n            return {...state, labelsPosition: action.labelsPosition};\r\n        }\r\n        case \"changeStateOfForm\": {\r\n            return {...state, stateOfForm: !state.stateOfForm};\r\n        }\r\n        case \"buttTextColor\": {\r\n            return {...state, buttTextColor: action.buttTextColor};\r\n        }\r\n        case \"textColor\": {\r\n            return {...state, textColor: action.textColor};\r\n        }\r\n        case \"generalBackgroundColor\": {\r\n            return {\r\n                ...state,\r\n                generalBackgroundColor: action.generalBackgroundColor\r\n            };\r\n        }\r\n        case \"selectedInput\": {\r\n            return {...state, selectedInput: action.selectedInput};\r\n        }\r\n        case \"titleColor\": {\r\n            return {...state, titleColor: action.titleColor};\r\n        }\r\n        case \"descriptionColor\": {\r\n            return {...state, descriptionColor: action.descriptionColor};\r\n        }\r\n        case \"formWidth\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            Number(action.formWidth) <= 0\r\n                ? (newObj.formWidth = 1)\r\n                : Number(action.formWidth) > 100\r\n                ? (newObj.formWidth = 100)\r\n                : (newObj.formWidth = action.formWidth);\r\n            return {...newObj};\r\n        }\r\n        case \"formMarginTop\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            Number(action.formMarginTop) < 0\r\n                ? (newObj.formMarginTop = 0)\r\n                : Number(action.formMarginTop) > 500\r\n                ? (newObj.formMarginTop = 500)\r\n                : (newObj.formMarginTop = action.formMarginTop);\r\n            return {...newObj};\r\n        }\r\n        case \"deleteField\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            delete newObj.inputs[action.index];\r\n            return {...newObj};\r\n        }\r\n        case \"inputs\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            newObj.inputs[action.index] = {\r\n                name:\r\n                    action.data[\"name\"].length >= 50\r\n                        ? action.data[\"name\"].substr(0, 50)\r\n                        : action.data[\"name\"],\r\n                placeholder:\r\n                    action.data[\"type\"] !== \"checkbox\"\r\n                        ? action.data[\"placeholder\"]\r\n                        : \"\",\r\n\r\n                type: action.data.type,\r\n                fieldDescription: action.data[\"fieldDescription\"],\r\n                descriptionPosition: action.data[\"descriptionPosition\"] || \"inline\",\r\n                width: Number(action.data[\"width\"]) || 20,\r\n                height: Number(action.data[\"height\"]) || 3\r\n            };\r\n            return newObj;\r\n        }\r\n        case \"addField\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            let keysOfInputs = Object.keys(newObj.inputs);\r\n            if (keysOfInputs.length !== 15) {\r\n                newObj.inputs[\r\n                    keysOfInputs.length\r\n                        ? Number(keysOfInputs[keysOfInputs.length - 1]) + 1\r\n                        : 1\r\n                    ] = {\r\n                    name: `Поле${\r\n                        keysOfInputs.length\r\n                            ? Number(keysOfInputs[keysOfInputs.length - 1]) + 1\r\n                            : 1\r\n                    }`,\r\n                    placeholder: \"\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 3\r\n                };\r\n            }\r\n            return newObj;\r\n        }\r\n        case \"ApplyUserTemplate\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            newObj.inputs = action.data.inputs;\r\n            newObj.labelsPosition = action.data.labelsPosition || \"top\";\r\n            newObj.title = action.data.title || \"Заголовок\";\r\n            newObj.numOfFields = action.data.numOfFields || 1;\r\n            newObj.titleColor = action.data.titleColor || \"#ffffff\";\r\n            newObj.generalBackgroundColor =\r\n                action.data.generalBackgroundColor || \"#ffffff\";\r\n            newObj.descriptionColor =\r\n                action.data.descriptionColor|| \"#a175ff\";\r\n            newObj.formBackgroundColor =\r\n                action.data.formBackgroundColor || \"#a3a19f\";\r\n            newObj.formWidth = action.data.formWidth || 80;\r\n            newObj.textColor = action.data.textColor || \"#ffffff\";\r\n            newObj.formMarginTop = action.data.formMarginTop || 23;\r\n            newObj.buttColor = action.data.buttColor || \"#a175ff\";\r\n            newObj.buttTextColor = action.data.buttTextColor || \"#fdfcff\";\r\n            newObj.buttHeight = action.data.buttHeight || \"6\";\r\n            newObj.buttWidth = action.data.buttWidth || \"35\";\r\n            message.success(\"Шаблон применен\");\r\n            return {...newObj};\r\n        }\r\n        case \"ApplyTemplate\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            newObj.inputs = action.data.fields;\r\n            newObj.labelsPosition = action.data.settings.labelsPosition || \"top\";\r\n            newObj.title = action.data.settings.title || \"Заголовок\";\r\n            newObj.numOfFields = action.data.settings.numOfFields || 1;\r\n            newObj.titleColor = action.data.settings.titleColor || \"#ffffff\";\r\n            newObj.generalBackgroundColor =\r\n                action.data.settings.generalBackgroundColor || \"#ffffff\";\r\n            newObj.descriptionColor =\r\n                action.data.settings.descriptionColor|| \"#a175ff\";\r\n            newObj.formBackgroundColor =\r\n                action.data.settings.formBackgroundColor || \"#a3a19f\";\r\n            newObj.formWidth = action.data.settings.formWidth || 80;\r\n            newObj.textColor = action.data.settings.textColor || \"#ffffff\";\r\n            newObj.formMarginTop = action.data.settings.formMarginTop || 23;\r\n            newObj.buttColor = action.data.settings.buttColor || \"#a175ff\";\r\n            newObj.buttTextColor = action.data.settings.buttTextColor || \"#fdfcff\";\r\n            newObj.buttHeight = action.data.settings.buttHeight || \"6\";\r\n            newObj.buttWidth = action.data.settings.buttWidth || \"35\";\r\n            message.success(\"Шаблон применен\");\r\n            return {...newObj};\r\n        }\r\n        case \"filters\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            let posEl: Array<string | number> = [];\r\n            newObj.filters.forEach((e: string, i: number) => {\r\n                if (e === action.filters) {\r\n                    posEl = [e, i];\r\n                }\r\n            });\r\n            posEl[0]\r\n                ? newObj.filters.splice(posEl[1], 1)\r\n                : newObj.filters.push(action.filters);\r\n            return {...newObj};\r\n        }\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n};\r\nexport let actions = {\r\n    ApplyUserTemplateAC: (data:authDataType) => ({\r\n        type: \"ApplyUserTemplate\",\r\n        data: data\r\n    }as const),\r\n    ApplyTemplateAC: (data:dataTemplatesNumbersFieldsType) => ({\r\n        type: \"ApplyTemplate\",\r\n        data: data\r\n    }as const),\r\n    ChangeStateOFFormAC: () => ({\r\n        type: \"changeStateOfForm\"\r\n    }as const),\r\n    ChangeFormBackgroundColorAC: (formBackgroundColor: string) => ({\r\n        type: \"formBackgroundColor\",\r\n        formBackgroundColor\r\n    }as const),\r\n    ChangeButtTextColorAC: (buttTextColor: string) => ({\r\n        type: \"buttTextColor\",\r\n        buttTextColor\r\n    }as const),\r\n    ChangeIsFilterVision: () => ({\r\n        type: \"isFilterVision\"\r\n    }as const),\r\n    ChangeButtColorAC: (buttColor: string) => ({\r\n        type: \"buttColor\",\r\n        buttColor\r\n    }as const),\r\n    ChangeGeneralBackgroundColorAC: (generalBackgroundColor: string) => ({\r\n        type: \"generalBackgroundColor\",\r\n        generalBackgroundColor\r\n    }as const),\r\n    ChangeAddFieldAC: () => ({\r\n        type: \"addField\"\r\n    }as const),\r\n    ChangeInputsAC: (data: dataInputNumParamType, index: number) => ({\r\n        type: \"inputs\",\r\n        data,\r\n        index\r\n    }as const),\r\n    ChangeFillingVisionAC: () => ({\r\n        type: \"FillingVision\"\r\n    }as const),\r\n    ChangeTitleAC: (title: string) => ({\r\n        type: \"title\",\r\n        title: title\r\n    }as const),\r\n    ChangeSelectedInputAC: (selectedInput: number|null) => ({\r\n        type: \"selectedInput\",\r\n        selectedInput: selectedInput\r\n    }as const),\r\n    ChangeDeleteFieldAC: (index: number) => ({\r\n        type: \"deleteField\",\r\n        index: index\r\n    }as const),\r\n    ChangeNumOfFieldsAC: (numOfFields: string) => ({\r\n        type: \"numOfFields\",\r\n        numOfFields: numOfFields\r\n    }as const),\r\n    ChangeLabelsPositionAC: (labelsPosition: string) => ({\r\n        type: \"labelsPosition\",\r\n        labelsPosition: labelsPosition\r\n    }as const),\r\n    FiltersAC: (filters: string) => ({\r\n        type: \"filters\",\r\n        filters\r\n    }as const),\r\n    ChangeFormMarginTopAC: (formMarginTop: string) => ({\r\n        type: \"formMarginTop\",\r\n        formMarginTop\r\n    }as const),\r\n    ChangeButtHeightAC: (buttHeight: string) => ({\r\n        type: \"buttHeight\",\r\n        buttHeight\r\n    }as const),\r\n    ChangeButtWidthAC: (buttWidth: string) => ({\r\n        type: \"buttWidth\",\r\n        buttWidth\r\n    }as const),\r\n    ChangeFormWidthAC: (formWidth: string) => ({\r\n        type: \"formWidth\",\r\n        formWidth\r\n    }as const),\r\n    ChangeTextColorAC: (textColor: string) => ({\r\n        type: \"textColor\",\r\n        textColor\r\n    }as const),\r\n    ChangeDescriptionColorAC: (descriptionColor: string) => ({\r\n        type: \"descriptionColor\",\r\n        descriptionColor\r\n    }as const),\r\n    ChangeTitleColorAC: (titleColor: string) => ({\r\n        type: \"titleColor\",\r\n        titleColor\r\n    }as const)\r\n};","import Template1 from \"../accets/img/Template-1.png\";\nimport Template2 from \"../accets/img/Template-2.png\";\nimport Template3 from \"../accets/img/Template-3.png\";\nimport Template4 from \"../accets/img/Template-4.png\";\n\nexport let templates = [\n  {\n    fields: [\n      {\n        name: \"Имя\",\n        placeholder: \"Имя\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        name: \"Фамилия\",\n        placeholder: \"Фамилия\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        name: \"Телефон\",\n        placeholder: \"Введите номер телефона\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        name: \"Почта\",\n        placeholder: \"Введите почту\",\n        type: \"email\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        name: \"Сообщение\",\n        placeholder: \"Сообщение\",\n        type: \"textarea\",\n        width: 60,\n        height: 15,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n    ],\n    settings: {\n      nameOfTemplate: \"Шаблон 1\",\n      image: Template1,\n      group: \"Форма обратной связи\",\n      labelsPosition: \"top\",\n      title: \"Мы ответим на любые ваши вопросы\",\n      numOfFields: 2,\n      buttWidth: 35,\n      formWidth: 68,\n      buttHeight: 6,\n      descriptionColor: \"#ffffff\",\n      formMarginTop: 2,\n      generalBackgroundColor: \"#ffffff\",\n      formBackgroundColor: \"#a3a19f\",\n      textColor: \"#ffffff\",\n      buttTextColor: \"#fdfcff\",\n      titleColor: \"#ffffff\",\n      buttColor: \"#53c6b4\",\n    },\n  },\n  {\n    fields: [\n      {\n        name: \"Почта\",\n        placeholder: \"Введите почту\",\n        type: \"email\",\n        width: 15,\n        height: 4,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n    ],\n    settings: {\n      nameOfTemplate: \"Шаблон 2\",\n      image: Template2,\n      group: \"Подписка на рассылку\",\n      labelsPosition: \"left\",\n      title: \"Подписка на рассылку\",\n      numOfFields: 1,\n      formWidth: 28,\n      buttWidth: 21,\n      generalBackgroundColor: \"#ffffff\",\n      formBackgroundColor: \"#a3a19f\",\n      buttHeight: 6,\n      formMarginTop: 25,\n      descriptionColor: \"#ffffff\",\n      textColor: \"#ffffff\",\n      buttTextColor: \"#fdfcff\",\n      titleColor: \"#ffffff\",\n      buttColor: \"#53c6b4\",\n    },\n  },\n  {\n    fields: [\n      {\n        name: \"Имя\",\n        placeholder: \"Имя\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        name: \"Телефон\",\n        placeholder: \"Введите телефон\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n    ],\n    settings: {\n      nameOfTemplate: \"Шаблон 3\",\n      image: Template3,\n      group: \"Заказ звонка\",\n      labelsPosition: \"top\",\n      title: \"Заказ звонка\",\n      numOfFields: 2,\n      formWidth: 68,\n      generalBackgroundColor: \"#ffffff\",\n      formBackgroundColor: \"#a3a19f\",\n      buttWidth: 35,\n      buttHeight: 6,\n      formMarginTop: 23,\n      textColor: \"#ffffff\",\n      buttTextColor: \"#fdfcff\",\n      titleColor: \"#ffffff\",\n      descriptionColor: \"#ffffff\",\n      buttColor: \"#53c6b4\",\n    },\n  },\n  {\n    fields: [\n      {\n        name: \"Имя\",\n        placeholder: \"Имя\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        name: \"Фамилия\",\n        placeholder: \"Фамилия\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n      {\n        name: \"Телефон\",\n        placeholder: \"Введите телефон\",\n        type: \"text\",\n        width: 20,\n        height: 5,\n        fieldDescription: \"\",\n        descriptionPosition: \"inline\",\n      },\n    ],\n    settings: {\n      nameOfTemplate: \"Шаблон 4\",\n      image: Template4,\n      group: \"Оформление заказа\",\n      labelsPosition: \"top\",\n      title: \"Оформление заказа\",\n      numOfFields: 1,\n      generalBackgroundColor: \"#ffffff\",\n      formBackgroundColor: \"#a3a19f\",\n      formWidth: 36,\n      buttWidth: 23,\n      buttHeight: 6,\n      formMarginTop: 7,\n      textColor: \"#ffffff\",\n      descriptionColor: \"#ffffff\",\n      buttTextColor: \"#fdfcff\",\n      titleColor: \"#ffffff\",\n      buttColor: \"#53c6b4\",\n    },\n  },\n];\n","import {connect, ConnectedProps} from \"react-redux\";\r\nimport {Form} from \"./Form\";\r\nimport React from \"react\";\r\nimport {actions} from \"../../../store/mainReducer\";\r\nimport {GlobalState} from \"../../../store/store\";\r\nlet MapStateToProps = (state: GlobalState) => {\r\n    return {\r\n        generalBackgroundColor: state.mainReducer.generalBackgroundColor,\r\n        inputs: state.mainReducer.inputs,\r\n        numOfFields: state.mainReducer.numOfFields,\r\n        buttHeight: state.mainReducer.buttHeight,\r\n        buttWidth: state.mainReducer.buttWidth,\r\n        formBackgroundColor: state.mainReducer.formBackgroundColor,\r\n        textColor: state.mainReducer.textColor,\r\n        buttTextColor: state.mainReducer.buttTextColor,\r\n        buttColor: state.mainReducer.buttColor,\r\n        stateOfForm: state.mainReducer.stateOfForm,\r\n        title: state.mainReducer.title,\r\n        titleColor: state.mainReducer.titleColor,\r\n        descriptionColor: state.mainReducer.descriptionColor,\r\n        formWidth: state.mainReducer.formWidth,\r\n        formMarginTop: state.mainReducer.formMarginTop,\r\n        labelsPosition: state.mainReducer.labelsPosition\r\n    };\r\n};\r\nlet FormHOC = (props:propsType) => {\r\n    return (\r\n        <Form\r\n            changeState={props.ChangeStateOFFormAC}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nlet FormConnector = connect(MapStateToProps, {ChangeStateOFFormAC: actions.ChangeStateOFFormAC});\r\ntype propsType=ConnectedProps<typeof FormConnector>\r\nexport let FormContainer=FormConnector(FormHOC);\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { dataInputNumParamType } from \"../../../../store/mainReducer\";\ntype propsType = {\n  changeInput: (index: number | null) => void;\n  index: number;\n  ChangeDeleteFieldAC: (index: number) => void;\n  inputs: dataInputNumParamType;\n};\nexport let SeeingFields = (props: propsType) => {\n  let changeInputIndex = () => {\n    props.changeInput(props.index);\n  };\n  let [isObjVision, setIsObjVision] = useState(true);\n  let DeleteField = async () => {\n    setIsObjVision(!isObjVision);\n    await setTimeout(() => {\n      props.ChangeDeleteFieldAC(props.index);\n    }, 100);\n  };\n\n  return (\n    <div\n      className={isObjVision ? \"ItemsOfInputs shown\" : \"ItemsOfInputs hidden\"}\n    >\n      <div>\n        <p>{props.inputs.name}</p>\n      </div>\n\n      <div className=\"IconsOfInputs\">\n        <FontAwesomeIcon onClick={DeleteField} icon=\"times\" />\n      </div>\n\n      <div className=\"IconsOfInputs\">\n        <FontAwesomeIcon onClick={changeInputIndex} icon=\"cogs\" />\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Radio } from \"antd\";\nimport { dataInputNumParamType } from \"../../../../store/mainReducer\";\n\ntype propsType = {\n  inputs: {\n    name: string;\n    placeholder: string;\n    type: string;\n    width: number;\n    height: number;\n    fieldDescription: string;\n    descriptionPosition: \"inline\" | \"bottom\";\n  };\n  index: number;\n  changeInput: (val: number | null) => void;\n  process: (data: dataInputNumParamType, index: number) => void;\n};\nexport let Field = React.memo((props: propsType) => {\n  useEffect(() => {\n    setPlaceholder(props.inputs.placeholder || \"\");\n    setTypeOfInput(props.inputs.type || \"text\");\n    setName(props.inputs.name || \"\");\n    setFieldDescription(props.inputs.fieldDescription || \"\");\n    setDescriptionPosition(props.inputs.descriptionPosition || \"bottom\");\n    setHeight(String(props.inputs.height) || \"5\");\n    setWidth(String(props.inputs.width) || \"20\");\n    setSize(String(props.inputs.height) || \"5\");\n  }, [\n    props.inputs.placeholder,\n    props.inputs.type,\n    props.inputs.name,\n    props.inputs.fieldDescription,\n    props.inputs.descriptionPosition,\n    props.inputs.height,\n    props.inputs,\n    props.inputs.width,\n  ]);\n  let [typeOfInput, setTypeOfInput] = useState(\"\");\n  let [placeholder, setPlaceholder] = useState(\"\");\n  let [name, setName] = useState(\"\");\n  let [fieldDescription, setFieldDescription] = useState(\"\");\n  let [descriptionPosition, setDescriptionPosition] = useState<\n    \"bottom\" | \"inline\"\n  >(\"bottom\");\n  let [width, setWidth] = useState(\"\");\n  let [height, setHeight] = useState(\"\");\n  let [size, setSize] = useState(\"\");\n  let butHandler = () => {\n    let data = {\n      name,\n      placeholder,\n      type: typeOfInput,\n      fieldDescription,\n      descriptionPosition,\n      width: typeOfInput === \"checkbox\" ? Number(size) : Number(width),\n      height: typeOfInput === \"checkbox\" ? Number(size) : Number(height),\n    };\n    props.process(data, props.index);\n    props.changeInput(null);\n  };\n  let changeInputHandler = () => {\n    props.changeInput(null);\n  };\n  return (\n    <>\n      <div className=\"fields\">\n        <h2>Настройки поля</h2>\n        <label>\n          Название поля\n          <input\n            name=\"name\"\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n            value={name}\n            placeholder=\"Название поля\"\n            type=\"text\"\n          />\n        </label>\n        <label>\n          Placeholder поля\n          <input\n            name=\"placeholder\"\n            onChange={(e) => {\n              setPlaceholder(e.target.value);\n            }}\n            value={placeholder}\n            placeholder=\"placeholder поля\"\n            type=\"text\"\n          />\n        </label>\n        <br />\n        {typeOfInput === \"checkbox\" ? (\n          <>\n            <label>\n              Размер поля\n              <input\n                name=\"size\"\n                onChange={(e) => {\n                  setSize(e.target.value);\n                }}\n                value={size}\n                placeholder=\"Размер поля\"\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"99.9\"\n              />\n              vw\n            </label>\n            <br />\n          </>\n        ) : (\n          <>\n            <label>\n              Ширина поля\n              <input\n                name=\"width\"\n                onChange={(e) => {\n                  setWidth(\n                    Number(e.target.value) > 100\n                      ? \"100\"\n                      : Number(e.target.value) < 0\n                      ? \"0\"\n                      : e.target.value\n                  );\n                }}\n                value={width}\n                placeholder=\"Ширина поля\"\n                type=\"number\"\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"99.9\"\n              />\n              vw\n            </label>\n            <label>\n              Высота поля\n              <input\n                name=\"height\"\n                onChange={(e) => {\n                  setHeight(\n                    Number(e.target.value) > 100\n                      ? \"100\"\n                      : Number(e.target.value) < 0\n                      ? \"0\"\n                      : e.target.value\n                  );\n                }}\n                step=\"0.1\"\n                min=\"0.1\"\n                max=\"99.9\"\n                value={height}\n                placeholder=\"Высота поля\"\n                type=\"number\"\n              />\n              vh\n            </label>\n            <br />\n          </>\n        )}\n\n        <label>Описание поля</label>\n        <input\n          name=\"fieldDescription\"\n          onChange={(e) => {\n            setFieldDescription(e.target.value);\n          }}\n          value={fieldDescription}\n          placeholder=\"Описание поля\"\n          type=\"text\"\n        />\n        <Radio.Button\n          name=\"descriptionPosition\"\n          onChange={(e) => {\n            setDescriptionPosition(e.target.value);\n          }}\n          checked={descriptionPosition === \"bottom\"}\n          value=\"bottom\"\n        >\n          Снизу\n        </Radio.Button>\n        <Radio.Button\n          name=\"descriptionPosition\"\n          checked={descriptionPosition === \"inline\"}\n          onChange={(e) => {\n            setDescriptionPosition(e.target.value);\n          }}\n          value=\"inline\"\n        >\n          Справа\n        </Radio.Button>\n        <br />\n        <div className=\"typeOFieldBlock\">\n          <label>Тип поля</label>\n          <div className=\"typeOField\">\n            <Radio.Button\n              id={\"textarea\" + props.index}\n              name={\"type\" + props.index}\n              value=\"textarea\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"textarea\"}\n            >\n              Textarea\n            </Radio.Button>\n            <Radio.Button\n              id={\"input\" + props.index}\n              name={\"type\" + props.index}\n              value=\"text\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"text\"}\n            >\n              Input\n            </Radio.Button>\n            <Radio.Button\n              id={\"flag\" + props.index}\n              name={\"type\" + props.index}\n              value=\"checkbox\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"checkbox\"}\n            >\n              Checkbox\n            </Radio.Button>\n            <Radio.Button\n              id={\"file\" + props.index}\n              name={\"type\" + props.index}\n              value=\"file\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"file\"}\n            >\n              File\n            </Radio.Button>\n            <Radio.Button\n              id={\"password\" + props.index}\n              name={\"type\" + props.index}\n              value=\"password\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"password\"}\n            >\n              Password\n            </Radio.Button>\n            <Radio.Button\n              id={\"email\" + props.index}\n              name={\"type\" + props.index}\n              value=\"email\"\n              onChange={(e) => {\n                setTypeOfInput(e.target.value);\n              }}\n              checked={typeOfInput === \"email\"}\n            >\n              Email\n            </Radio.Button>\n          </div>\n        </div>\n        <button onClick={butHandler}>Сохранить</button>\n        <button onClick={changeInputHandler}>Отменить</button>\n      </div>\n      <div onClick={changeInputHandler} className=\"modal\" />\n    </>\n  );\n});\n","import React from \"react\";\nimport { Field } from \"./Field\";\nimport {message, Radio} from \"antd\";\nimport { dataType } from \"../../../../store/authReducer\";\nimport {dataInputNumParamType} from \"../../../../store/mainReducer\";\n\ntype propsType = {\n  ChangeTitleAC: (text: string) => void;\n  ChangeFormBackgroundColorAC: (text: string) => void;\n  ChangeGeneralBackgroundColorAC: (text: string) => void;\n  ChangeButtColorAC: (text: string) => void;\n  ChangeButtTextColorAC: (text: string) => void;\n  ChangeTitleColorAC: (text: string) => void;\n  ChangeTextColorAC: (text: string) => void;\n  ChangeDescriptionColorAC: (text: string) => void;\n  ChangeFormWidthAC: (text: string) => void;\n  ChangeButtWidthAC: (text: string) => void;\n  ChangeFormMarginTopAC: (text: string) => void;\n  ChangeButtHeightAC: (text: string) => void;\n  ChangeLabelsPositionAC: (text: string) => void;\n  ChangeNumOfFieldsAC: (text: string) => void;\n  ChangeAddFieldAC: () => void;\n  changeState: () => void;\n  changeInput: (input: number | null) => void;\n  saveTemplate:(obj:{variables:{token:string,template:dataType}})=>void;\n  process: (data: dataInputNumParamType, index: number) => void;\n  title: string;\n  formBackgroundColor: string;\n  generalBackgroundColor: string;\n  buttColor: string;\n  buttTextColor: string;\n  titleColor: string;\n  textColor: string;\n  descriptionColor: string;\n  formWidth: number;\n  loading:boolean;\n  buttWidth: number;\n  buttHeight: number;\n  formMarginTop: number;\n  labelsPosition: string;\n  numOfFields: number;\n  selectedInput: number | null;\n  token: string;\n  inputs: Array<dataInputNumParamType>;\n  InputsMaker: Array<JSX.Element>;\n};\nexport const DataFilling = React.memo((props: propsType) => {\n  return (\n    <div className=\"dataFilling\">\n      <div className=\"dataFillingBlock\">\n        <label>Заголовок формы</label>\n        <input\n          value={props.title}\n          name=\"title\"\n          placeholder=\"Заголовок\"\n          onChange={(e) => {\n            props.ChangeTitleAC(e.target.value);\n          }}\n        />\n        <br />\n        <label>Выберете фон формы</label>\n        <input\n          value={props.formBackgroundColor}\n          onChange={(e) => {\n            props.ChangeFormBackgroundColorAC(e.target.value);\n          }}\n          name=\"formBackgroundColor\"\n          type=\"color\"\n        />\n        <label>Выберете цвет общего фона</label>\n        <input\n          value={props.generalBackgroundColor}\n          onChange={(e) => {\n            props.ChangeGeneralBackgroundColorAC(e.target.value);\n          }}\n          name=\"generalBackgroundColor\"\n          type=\"color\"\n        />\n        <label>Выберете цвет кнопки</label>\n        <input\n          value={props.buttColor}\n          onChange={(e) => {\n            props.ChangeButtColorAC(e.target.value);\n          }}\n          name=\"buttColor\"\n          type=\"color\"\n        />\n        <label>Выберете цвет текста кнопки</label>\n        <input\n          value={props.buttTextColor}\n          onChange={(e) => {\n            props.ChangeButtTextColorAC(e.target.value);\n          }}\n          name=\"buttTextColor\"\n          type=\"color\"\n        />\n        <label>Выберете цвет заголовка </label>\n        <input\n          value={props.titleColor}\n          onChange={(e) => {\n            props.ChangeTitleColorAC(e.target.value);\n          }}\n          name=\"titleColor\"\n          type=\"color\"\n        />\n        <label>Выберете цвет текста </label>\n        <input\n          value={props.textColor}\n          onChange={(e) => {\n            props.ChangeTextColorAC(e.target.value);\n          }}\n          name=\"textColor\"\n          type=\"color\"\n        />\n        <label>Выберете цвет описания поля</label>\n        <input\n          value={props.descriptionColor}\n          onChange={(e) => {\n            props.ChangeDescriptionColorAC(e.target.value);\n          }}\n          name=\"descriptionColor\"\n          type=\"color\"\n        />\n        <br />\n        <label>Ширина формы</label>\n        <input\n          value={props.formWidth}\n          onChange={(e) => {\n            props.ChangeFormWidthAC(e.target.value);\n          }}\n          name=\"formWidth\"\n          type=\"number\"\n        />\n        %\n        <br />\n        <label>Отступ сверху</label>\n        <input\n          value={props.formMarginTop}\n          onChange={(e) => {\n            props.ChangeFormMarginTopAC(e.target.value);\n          }}\n          name=\"formMarginTop\"\n          type=\"number\"\n        />\n        vh\n        <br />\n        <label>Ширина кнопки</label>\n        <input\n          value={props.buttWidth}\n          onChange={(e) => {\n            props.ChangeButtWidthAC(e.target.value);\n          }}\n          name=\"buttWidth\"\n          type=\"number\"\n        />\n        vw\n        <br />\n        <label>Высота кнопки</label>\n        <input\n          value={props.buttHeight}\n          onChange={(e) => {\n            props.ChangeButtHeightAC(e.target.value);\n          }}\n          name=\"buttHeight\"\n          type=\"number\"\n        />\n        vh\n        <br />\n        <label>Положение названия поля</label>\n        <Radio.Button\n          name=\"labelsPosition\"\n          onChange={(e) => {\n            props.ChangeLabelsPositionAC(e.target.value);\n          }}\n          checked={props.labelsPosition === \"top\"}\n          value=\"top\"\n        >\n          Сверху\n        </Radio.Button>\n        <Radio.Button\n          name=\"labelsPosition\"\n          checked={props.labelsPosition === \"left\"}\n          onChange={(e) => {\n            props.ChangeLabelsPositionAC(e.target.value);\n          }}\n          value=\"left\"\n        >\n          Слева\n        </Radio.Button>\n        <br />\n        <div className={props.labelsPosition === \"left\" ? \"hidden\" : \"shown\"}>\n          <label>Количество полей в строке</label>\n          <input\n            value={props.numOfFields}\n            name=\"numOfFields\"\n            placeholder=\"Полей в строке\"\n            onChange={(e) => {\n              props.ChangeNumOfFieldsAC(e.target.value);\n            }}\n            type=\"number\"\n          />\n        </div>\n        <br />\n        <div className=\"blockItemsOfInputs\">{props.InputsMaker}</div>\n        <button\n          name=\"count\"\n          onClick={() => {\n            props.ChangeAddFieldAC();\n          }}\n        >\n          Добавить поле\n        </button>\n        <div\n          className={\n            props.selectedInput !== null\n              ? \" FieldsBlock shown\"\n              : \"FieldsBlock hidden\"\n          }\n        >\n          {props.selectedInput !== null && props.inputs[props.selectedInput] ? (\n            <Field\n              changeInput={props.changeInput}\n              inputs={props.inputs[props.selectedInput]}\n              process={props.process}\n              index={props.selectedInput}\n            />\n          ) : (\n            <></>\n          )}\n        </div>\n        <br />\n        <button onClick={props.changeState}>Получить код</button>\n        <br />\n        <button\n            disabled={props.loading}\n          onClick={() => {props.token ?\n            props.saveTemplate({\n              variables: {\n                token: props.token,\n                template: {\n                  generalBackgroundColor: props.generalBackgroundColor,\n                  formBackgroundColor: props.formBackgroundColor,\n                  titleColor: props.titleColor,\n                  descriptionColor: props.descriptionColor,\n                  formWidth: props.formWidth,\n                  formMarginTop: props.formMarginTop,\n                  buttHeight: props.buttHeight,\n                  buttWidth: props.buttWidth,\n                  textColor: props.textColor,\n                  buttColor: props.buttColor,\n                  buttTextColor: props.buttTextColor,\n                  title: props.title,\n                  labelsPosition: props.labelsPosition,\n                  numOfFields: props.numOfFields,\n                  inputs: props.inputs,\n                },\n              }\n            })\n              : message.warning(\"Для этого действия необходимо войти в аккаунт\")\n          }}\n        >\n          Сохранить\n        </button>\n      </div>\n    </div>\n  );\n});\n","import { gql } from \"@apollo/client\";\n\nexport let templateFragment = gql`\n  fragment template on TemplatesType {\n    generalBackgroundColor\n    formBackgroundColor\n    titleColor\n    descriptionColor\n    formWidth\n    formMarginTop\n    buttHeight\n    buttWidth\n    textColor\n    buttColor\n    buttTextColor\n    title\n    labelsPosition\n    numOfFields\n    inputs {\n      name\n      placeholder\n      type\n      width\n      height\n      fieldDescription\n      descriptionPosition\n    }\n  }\n`;\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { actions, dataInputNumParamType } from \"../../../../store/mainReducer\";\nimport { actions as authActions } from \"../../../../store/authReducer\";\nimport { SeeingFields } from \"./SeeingFields\";\nimport { DataFilling } from \"./DataFilling\";\nimport React from \"react\";\nimport { GlobalState } from \"../../../../store/store\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { message } from \"antd\";\nimport { templateFragment } from \"../../../graphQl-fragments/templateFragment\";\nlet MapStateToProps = (state: GlobalState) => {\n  return {\n    state: state.mainReducer,\n    formBackgroundColor: state.mainReducer.formBackgroundColor,\n    titleColor: state.mainReducer.titleColor,\n    descriptionColor: state.mainReducer.descriptionColor,\n    generalBackgroundColor: state.mainReducer.generalBackgroundColor,\n    buttHeight: state.mainReducer.buttHeight,\n    buttWidth: state.mainReducer.buttWidth,\n    numOfFields: state.mainReducer.numOfFields,\n    inputs: state.mainReducer.inputs,\n    textColor: state.mainReducer.textColor,\n    labelsPosition: state.mainReducer.labelsPosition,\n    isFillingVision: state.mainReducer.isFillingVision,\n    buttTextColor: state.mainReducer.buttTextColor,\n    buttColor: state.mainReducer.buttColor,\n    title: state.mainReducer.title,\n    formWidth: state.mainReducer.formWidth,\n    formMarginTop: state.mainReducer.formMarginTop,\n    selectedInput: state.mainReducer.selectedInput,\n    isAuth: state.authReducer.isAuth,\n    token: state.authReducer.token,\n  };\n};\nlet DataFillingBlock = (props: propsType) => {\n  let [saveTemplate, { loading }] = useMutation(\n    gql`\n      ${templateFragment}\n      mutation saveTemplate(\n        $template: saveTemplateTemplatesType!\n        $token: String!\n      ) {\n        saveTemplate(template: $template, token: $token) {\n          ...template\n        }\n      }\n    `,\n    {\n      refetchQueries: [\"getUserData\"],\n      onError: () => {\n        message.warn(\"Что-то пошло не так\");\n      },\n      onCompleted: () => {\n        message.success(\"Шаблон сохранен\");\n      },\n    }\n  );\n\n  let process = (data: dataInputNumParamType, index: number) => {\n    props.ChangeInputsAC(data, index);\n  };\n  let changeInput = (index: number | null) => {\n    props.ChangeSelectedInputAC(index);\n  };\n  let InputsMaker = props.inputs.map((val, i) => (\n    <SeeingFields\n      changeInput={changeInput}\n      inputs={props.inputs[i]}\n      index={i}\n      ChangeDeleteFieldAC={props.ChangeDeleteFieldAC}\n      key={i}\n    />\n  ));\n  return (\n    <DataFilling\n      generalBackgroundColor={props.generalBackgroundColor}\n      formBackgroundColor={props.formBackgroundColor}\n      saveTemplate={saveTemplate}\n      titleColor={props.titleColor}\n      descriptionColor={props.descriptionColor}\n      textColor={props.textColor}\n      buttColor={props.buttColor}\n      buttTextColor={props.buttTextColor}\n      formMarginTop={props.formMarginTop}\n      formWidth={props.formWidth}\n      changeState={props.ChangeStateOFFormAC}\n      changeInput={changeInput}\n      buttHeight={props.buttHeight}\n      buttWidth={props.buttWidth}\n      numOfFields={props.numOfFields}\n      process={process}\n      loading={loading}\n      selectedInput={props.selectedInput}\n      inputs={props.inputs}\n      title={props.title}\n      labelsPosition={props.labelsPosition}\n      InputsMaker={InputsMaker}\n      ChangeAddFieldAC={props.ChangeAddFieldAC}\n      ChangeButtColorAC={props.ChangeButtColorAC}\n      ChangeButtHeightAC={props.ChangeButtHeightAC}\n      ChangeButtTextColorAC={props.ChangeButtTextColorAC}\n      ChangeButtWidthAC={props.ChangeButtWidthAC}\n      ChangeDescriptionColorAC={props.ChangeDescriptionColorAC}\n      ChangeFormBackgroundColorAC={props.ChangeFormBackgroundColorAC}\n      ChangeFormMarginTopAC={props.ChangeFormMarginTopAC}\n      ChangeFormWidthAC={props.ChangeFormWidthAC}\n      ChangeGeneralBackgroundColorAC={props.ChangeGeneralBackgroundColorAC}\n      ChangeLabelsPositionAC={props.ChangeLabelsPositionAC}\n      ChangeNumOfFieldsAC={props.ChangeNumOfFieldsAC}\n      ChangeTextColorAC={props.ChangeTextColorAC}\n      ChangeTitleAC={props.ChangeTitleAC}\n      ChangeTitleColorAC={props.ChangeTitleColorAC}\n      token={props.token}\n    />\n  );\n};\n\nlet DataFillingConnector = connect(MapStateToProps, {\n  ChangeStateOFFormAC: actions.ChangeStateOFFormAC,\n  ChangeAddFieldAC: actions.ChangeAddFieldAC,\n  ChangeSelectedInputAC: actions.ChangeSelectedInputAC,\n  ChangeInputsAC: actions.ChangeInputsAC,\n  ChangeLabelsPositionAC: actions.ChangeLabelsPositionAC,\n  userTemplatesAC: authActions.userTemplatesAC,\n  ChangeDeleteFieldAC: actions.ChangeDeleteFieldAC,\n  ChangeNumOfFieldsAC: actions.ChangeNumOfFieldsAC,\n  ChangeTitleAC: actions.ChangeTitleAC,\n  ChangeButtHeightAC: actions.ChangeButtHeightAC,\n  ChangeButtWidthAC: actions.ChangeButtWidthAC,\n  ChangeFormBackgroundColorAC: actions.ChangeFormBackgroundColorAC,\n  ChangeGeneralBackgroundColorAC: actions.ChangeGeneralBackgroundColorAC,\n  ChangeTextColorAC: actions.ChangeTextColorAC,\n  ChangeButtTextColorAC: actions.ChangeButtTextColorAC,\n  ChangeDescriptionColorAC: actions.ChangeDescriptionColorAC,\n  ChangeTitleColorAC: actions.ChangeTitleColorAC,\n  ChangeButtColorAC: actions.ChangeButtColorAC,\n  ChangeFormMarginTopAC: actions.ChangeFormMarginTopAC,\n  ChangeFormWidthAC: actions.ChangeFormWidthAC,\n});\ntype propsType = ConnectedProps<typeof DataFillingConnector>;\nexport let DataFillingContainer = DataFillingConnector(DataFillingBlock);\n","import React from \"react\";\ntype propsType = {\n  stateOfHeader: number;\n  stateOfHeaderAC: (num: number) => void;\n  isAuth: boolean;\n};\nexport let MiniHeader = (props: propsType) => {\n  return (\n    <div className=\"mini-header\">\n      <div\n        className={\n          props.stateOfHeader === 1\n            ? \"slider-1 slider\"\n            : props.stateOfHeader === 2\n            ? \"slider-2 slider\"\n            : \"slider-3 slider\"\n        }\n      />\n      <div>\n        <p onClick={() => props.stateOfHeaderAC(1)}>Шаблоны</p>\n        <div />\n      </div>\n      <div>\n        <p onClick={() => props.stateOfHeaderAC(2)}>Настройки</p>\n        <div />\n      </div>\n      <div style={{ backgroundColor: props.isAuth ? \"\" : \"#c2c1c0\" }}>\n        <button\n          disabled={!props.isAuth}\n          onClick={() => props.stateOfHeaderAC(3)}\n          style={{ cursor: props.isAuth ? \"pointer\" : \"not-allowed\" }}\n        >\n          Пользовательские <br /> шаблоны\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { dataTemplatesNumbersFieldsType } from \"../../../../store/mainReducer\";\ntype propsType = {\n  ApplyTemplateAC: (template: dataTemplatesNumbersFieldsType) => void;\n  template: dataTemplatesNumbersFieldsType;\n};\nexport let Templates = React.memo((props: propsType) => {\n  let handler = () => {\n    props.ApplyTemplateAC(props.template);\n  };\n  return (\n    <div className=\"Template\">\n      <h3>{props.template.settings.nameOfTemplate}</h3>\n      <img onClick={handler} src={props.template.settings.image} alt=\"lorem\" />\n      <br />\n      <button onClick={handler}>\n        {props.template.settings.nameOfTemplate}\n      </button>\n    </div>\n  );\n});\n","import React from \"react\";\r\ntype propsType= {\r\n    FiltersAC: (name: string) => void,\r\n    VisionFilter:()=>void,\r\n    isFilterVision:boolean,\r\n}\r\n\r\nexport let Filter = React.memo((props:propsType) => {\r\n  let options = [\r\n    \"Форма обратной связи\",\r\n    \"Подписка на рассылку\",\r\n    \"Заказ звонка\",\r\n    \"Оформление заказа\"\r\n  ];\r\n  let optionsWrapper = options.map((e, i) => {\r\n    return (\r\n      <div key={i}>\r\n        <input type={\"checkbox\"} onClick={()=>props.FiltersAC(e)} id={e} name={e} />\r\n        <label htmlFor={e}>{e}</label>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"filter\">\r\n      <div onClick={props.VisionFilter}>Фильтр</div>\r\n      <div\r\n        className={\r\n          !props.isFilterVision ? \"filterBoxes hidden \" : \"filterBoxes shown \"\r\n        }\r\n      >\r\n        {optionsWrapper}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { actions } from \"../../../../store/mainReducer\";\nimport { Filter } from \"./filter\";\nimport React from \"react\";\nimport { GlobalState } from \"../../../../store/store\";\n\nlet MapStateToProps = (state: GlobalState) => ({\n  templates: state.mainReducer.templates,\n  filters: state.mainReducer.filters,\n  isFilterVision: state.mainReducer.isFilterVision,\n});\nlet FilterBlock = (props: propsType) => {\n  let VisionFilter = () => {\n    props.ChangeIsFilterVision();\n  };\n\n  return (\n    <Filter\n      FiltersAC={props.FiltersAC}\n      isFilterVision={props.isFilterVision}\n      VisionFilter={VisionFilter}\n    />\n  );\n};\nlet FilterConnector = connect(MapStateToProps, {\n  FiltersAC: actions.FiltersAC,\n  ChangeIsFilterVision: actions.ChangeIsFilterVision,\n});\ntype propsType = ConnectedProps<typeof FilterConnector>;\nexport let FilterContainer = FilterConnector(FilterBlock);\n","import { createSelector } from \"reselect\";\nimport { GlobalState } from \"../store/store\";\nlet getTemplates = (state: GlobalState) => {\n  return state.mainReducer.templates;\n};\nlet getFilters = (state: GlobalState) => {\n  return state.mainReducer.filters;\n};\nexport let TemplateSelector = createSelector(\n  getTemplates,\n  getFilters,\n  (templates, filters) => {\n    if (filters[0]) {\n      return templates.filter((e) => {\n        return filters.indexOf(e.settings.group) > -1;\n      });\n    } else {\n      return templates;\n    }\n  }\n);\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { actions } from \"../../../../store/mainReducer\";\nimport { Templates } from \"./templates\";\nimport { FilterContainer } from \"./filterContainer\";\nimport { TemplateSelector } from \"../../../../selectors/templateSelector\";\nimport React from \"react\";\nimport { GlobalState } from \"../../../../store/store\";\nlet MapStateToProps = (state: GlobalState) => ({\n  templates: TemplateSelector(state),\n  isFilterVision: state.mainReducer.isFilterVision,\n});\nlet TemplatesBlock = (props: propsType) => {\n  let TemplatesMaker = props.templates.map((e, i) => (\n    <Templates\n      key={i}\n      ApplyTemplateAC={props.ApplyTemplateAC}\n      template={props.templates[i]}\n    />\n  ));\n  return (\n    <>\n      <FilterContainer />\n      <div\n        className={\n          props.isFilterVision ? \"Templates-box openedFilter\" : \"Templates-box\"\n        }\n      >\n        {TemplatesMaker}\n      </div>\n    </>\n  );\n};\nlet TemplatesConnector = connect(MapStateToProps, {\n  ApplyTemplateAC: actions.ApplyTemplateAC,\n});\ntype propsType = ConnectedProps<typeof TemplatesConnector>;\nexport let TemplatesContainer = TemplatesConnector(TemplatesBlock);\n","import { FormInput } from \"../../form-display/FormInput\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dataType } from \"../../../../store/authReducer\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { message } from \"antd\";\nimport { templateFragment } from \"../../../graphQl-fragments/templateFragment\";\ntype propsType = {\n  index: number;\n  token: string;\n  template: dataType;\n  ApplyUserTemplateAC: (data: dataType) => void;\n};\nexport let PersonalTemplatesCreator = React.memo((props: propsType) => {\n  let [deleteTempl, { error, data, loading }] = useMutation(\n    gql`\n      ${templateFragment}\n      mutation deleteTemplate($index: Int!, $token: String!) {\n        deleteTemplate(index: $index, token: $token) {\n          ...template\n        }\n      }\n    `,\n    { refetchQueries: [\"getUserData\"] }\n  );\n  if (error) {\n    message.warn(\"Возникла ошибка, попробуйте позже\");\n  }\n  if (data) {\n    message.success(\"Шаблон удален\");\n  }\n  let handler = () => {\n    props.ApplyUserTemplateAC(props.template);\n  };\n  let InputsCreator = props.template.inputs.map((e, i) => {\n    return (\n      <FormInput\n        key={i}\n        labelsPosition={props.template.labelsPosition}\n        i={i}\n        numOfFields={props.template.numOfFields}\n        type={props.template.inputs[i].type || \"text\"}\n        name={props.template.inputs[i].name || \"\"}\n        placeholder={props.template.inputs[i].placeholder || \"\"}\n        fieldDescription={props.template.inputs[i].fieldDescription || \"\"}\n        disabled={true}\n        width={Number(props.template.inputs[i].width) / 3 || 3}\n        height={Number(props.template.inputs[i].height) / 3 || 3}\n        descriptionPosition={props.template.inputs[i].descriptionPosition || \"\"}\n        descriptionColor={props.template.descriptionColor}\n      />\n    );\n  });\n  return (\n    <div\n      style={{\n        border: \".2vw solid #65ccbc\",\n        display: \"grid\",\n        margin: \"0 .5vw 0 .5vw\",\n      }}\n    >\n      <div className=\"deleteTemplate\">\n        <FontAwesomeIcon\n          icon=\"times\"\n          onClick={() => {\n            if (!loading) {\n              deleteTempl({\n                variables: { index: props.index, token: props.token },\n              });\n            }\n          }}\n        />\n      </div>\n      <div\n        className=\"personalFormBlock\"\n        onClick={handler}\n        style={{ backgroundColor: props.template.generalBackgroundColor }}\n      >\n        <div\n          className=\"form\"\n          style={{\n            color: props.template.textColor,\n            backgroundColor: props.template.formBackgroundColor,\n            width: props.template.formWidth / 3 + \"vw\",\n            marginTop: \"5%\",\n            marginBottom: \"5%\",\n          }}\n        >\n          <h1\n            className=\"FormTitle\"\n            style={{\n              color: props.template.titleColor,\n            }}\n          >\n            {props.template.title || \"Заголовок\"}\n          </h1>\n          <div\n            className=\"wrapperOfInputsCreator\"\n            style={{\n              gridTemplateColumns:\n                props.template.labelsPosition === \"left\" ||\n                props.template.numOfFields === 1\n                  ? \"1fr\"\n                  : \"1fr 1fr\",\n            }}\n          >\n            {InputsCreator}\n          </div>\n          <button\n            disabled\n            style={{\n              height: 4 + \"vh\",\n              width: 9 + \"vw\",\n              color: props.template.buttTextColor,\n              backgroundColor: props.template.buttColor,\n            }}\n          >\n            Отправить\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { connect } from \"react-redux\";\nimport { PersonalTemplates } from \"./personalTemplates\";\nimport { actions } from \"../../../../store/mainReducer\";\nimport { GlobalState } from \"../../../../store/store\";\nlet MapStateToProps = (state: GlobalState) => {\n  return {\n    userTemplates: state.authReducer.userTemplates,\n    token: state.authReducer.token,\n  };\n};\nlet PersonalTemplatesConnector = connect(MapStateToProps, {\n  ApplyUserTemplateAC: actions.ApplyUserTemplateAC,\n});\nexport let PersonalTemplatesContainer =\n  PersonalTemplatesConnector(PersonalTemplates);\n","import React from \"react\";\nimport { PersonalTemplatesCreator } from \"./personalTemplatesCreator\";\nimport { dataType } from \"../../../../store/authReducer\";\ntype propsType = {\n  userTemplates: Array<dataType>;\n  ApplyUserTemplateAC: (data: dataType) => void;\n  token: string;\n};\nexport const PersonalTemplates = (props: propsType) => {\n  let userTemplatesMaker = props.userTemplates.map((e, i) => {\n    return (\n      <PersonalTemplatesCreator\n        key={i}\n        index={i}\n        token={props.token}\n        template={props.userTemplates[i]}\n        ApplyUserTemplateAC={props.ApplyUserTemplateAC}\n      />\n    );\n  });\n  if (props.userTemplates[0]) {\n    return <div className=\"personalTemplatesBlock\">{userTemplatesMaker}</div>;\n  } else {\n    return (\n      <>\n        <p>У вас пока нет шаблонов</p>\n      </>\n    );\n  }\n};\n","import { connect } from \"react-redux\";\nimport { stateOfHeaderAC } from \"../../../store/menuReducer\";\nimport { MiniHeaderSwitch } from \"./MiniHeaderSwitch\";\nimport { actions } from \"../../../store/mainReducer\";\nimport { GlobalState } from \"../../../store/store\";\nlet MapStateToProps = (state: GlobalState) => ({\n  stateOfHeader: state.menuReducer.stateOfHeader,\n  isFillingVision: state.mainReducer.isFillingVision,\n  isAuth: state.authReducer.isAuth,\n});\nexport let MiniHeaderSwitchContainer = connect(MapStateToProps, {\n  stateOfHeaderAC,\n  ChangeFillingVisionAC: actions.ChangeFillingVisionAC,\n})(MiniHeaderSwitch);\n","import React from \"react\";\nimport { DataFillingContainer } from \"./customization/DataFillingContainer\";\nimport { MiniHeader } from \"./miniHeader\";\nimport { TemplatesContainer } from \"./templates/templatesContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { PersonalTemplatesContainer } from \"./user-templates/personalTemplatesContainer\";\ntype propsType = {\n  ChangeFillingVisionAC: () => void;\n  isFillingVision: boolean;\n  stateOfHeader: number;\n  isAuth: boolean;\n  stateOfHeaderAC: (num: number) => void;\n};\nexport let MiniHeaderSwitch = (props: propsType) => {\n  return (\n    <>\n      <div\n        onClick={props.ChangeFillingVisionAC}\n        className={\n          props.isFillingVision ? \"icon-angles-shown\" : \"icon-angles-hidden\"\n        }\n      >\n        <FontAwesomeIcon\n          className=\"icon-left\"\n          icon={\n            props.isFillingVision ? \"angle-double-right\" : \"angle-double-left\"\n          }\n          size=\"lg\"\n        />\n      </div>\n      <MiniHeader\n        stateOfHeader={props.stateOfHeader}\n        isAuth={props.isAuth}\n        stateOfHeaderAC={props.stateOfHeaderAC}\n      />\n      {props.stateOfHeader === 1 ? (\n        <TemplatesContainer />\n      ) : props.stateOfHeader === 2 ? (\n        <DataFillingContainer />\n      ) : props.stateOfHeader === 3 ? (\n        <PersonalTemplatesContainer />\n      ) : (\n        <div />\n      )}\n    </>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { Main } from \"./Main\";\nimport { actions } from \"../../store/mainReducer\";\nimport { GlobalState } from \"../../store/store\";\ntype MapStateToPropsType = {\n  isFillingVision: boolean;\n  generalBackgroundColor: string;\n};\nlet MapStateToProps = (state: GlobalState): MapStateToPropsType => ({\n  isFillingVision: state.mainReducer.isFillingVision,\n  generalBackgroundColor: state.mainReducer.generalBackgroundColor,\n});\nexport let MainContainer = connect(MapStateToProps, {\n  ChangeFillingVisionAC: actions.ChangeFillingVisionAC,\n})(Main);\n","import React from \"react\";\nimport { FormContainer } from \"./form-display/FormContainer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MiniHeaderSwitchContainer } from \"./form-customization/MiniHeaderSwitchContainer\";\n\ntype propsType = {\n  isFillingVision: boolean;\n  generalBackgroundColor: string;\n  ChangeFillingVisionAC: () => void;\n};\nexport const Main = (props: propsType) => {\n  return (\n    <>\n      <div\n        onClick={props.ChangeFillingVisionAC}\n        className={\n          props.isFillingVision ? \"icon-angles-shown\" : \"icon-angles-hidden\"\n        }\n      >\n        <FontAwesomeIcon\n          className=\"icon-left\"\n          icon={\n            props.isFillingVision ? \"angle-double-right\" : \"angle-double-left\"\n          }\n          size=\"lg\"\n        />\n      </div>\n      <div\n        className=\"output-closed-body\"\n        style={{ backgroundColor: props.generalBackgroundColor }}\n      >\n        <div\n          className={\n            props.isFillingVision ? \"output-closed-s\" : \"output-opened-ss\"\n          }\n        >\n          <FormContainer />\n        </div>\n      </div>\n      <div\n        className={\n          props.isFillingVision ? \"input-closed-sss\" : \"input-opened-ssss\"\n        }\n      >\n        <MiniHeaderSwitchContainer />\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport preloader from \"../../accets/img/preloader.webp\";\nexport let Preloader = () => {\n  return (\n    <div className=\"preloader\">\n      <img src={preloader} alt=\"\" />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Preloader } from \"../preloader/preloader\";\ntype PathParamsType = { Id: string };\nlet AcceptAccountBlock = (props: propsType) => {\n  let { loading, error, data } = useQuery(\n    gql`\n      query acceptAcc($id: String!) {\n        access(id: $id)\n      }\n    `,\n    { variables: { id: props.match.params.Id } }\n  );\n  if (loading) {\n    return <Preloader />;\n  }\n  if (error) {\n    return (\n      <p>\n        {error.message === \"err in req\"\n          ? \"Ошибка в запросе\"\n          : error.message === \"acc already accessed\"\n          ? \"Аккаунт уже подтвержден\"\n          : \"Что-то пошло не так\"}\n      </p>\n    );\n  }\n  if (data) {\n    return <p>Аккаунт подвержден</p>;\n  }\n  return <p />;\n};\nexport let AcceptAccount = withRouter(AcceptAccountBlock);\ntype propsType = RouteComponentProps<PathParamsType>;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\ntype propsType = {\n  formRes: (obj: { variables: { [key: string]: any } }) => void;\n  setPassVision: (passVision: boolean) => void;\n  setEmail: (email: string) => void;\n  setPassword: (password: string) => void;\n  passVision: boolean;\n  password: string;\n  email: string;\n};\nexport let Auth = (props: propsType) => {\n  let handler = () => {\n    props.setPassVision(!props.passVision);\n  };\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.formRes({\n            variables: { email: props.email, password: props.password },\n          });\n        }}\n      >\n        <input\n          type=\"text\"\n          value={props.email}\n          onChange={(e) => {\n            props.setEmail(e.currentTarget.value);\n          }}\n          placeholder=\"Почта\"\n          required\n        />\n        <div className=\"passBlock\">\n          <input\n            type={props.passVision ? \"text\" : \"password\"}\n            value={props.password}\n            onChange={(e) => {\n              props.setPassword(e.currentTarget.value);\n            }}\n            placeholder=\"Пароль\"\n            required\n          />\n          <FontAwesomeIcon\n            onClick={handler}\n            icon={props.passVision ? \"eye\" : \"eye-slash\"}\n          />\n        </div>\n        <button type=\"submit\">Войти</button>\n      </form>\n    </>\n  );\n};\n","import { Auth } from \"./auth\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { templateFragment } from \"../graphQl-fragments/templateFragment\";\nimport { message } from \"antd\";\nimport React, { useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { actions } from \"../../store/authReducer\";\nimport { Preloader } from \"../preloader/preloader\";\nexport let AuthBlock = (props: propsType) => {\n  let [passVision, setPassVision] = useState(false);\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [formRes, { loading }] = useLazyQuery(\n    gql`\n      ${templateFragment}\n      query auth($email: String!, $password: String!) {\n        auth(email: $email, password: $password) {\n          token\n          templates {\n            ...template\n          }\n        }\n      }\n    `,\n    {\n      onCompleted: (data) => {\n        localStorage.setItem(\"token\", JSON.stringify(data.auth.token));\n        props.isAuthAC(true, data.auth.templates, data.auth.token);\n      },\n      onError: (err) =>\n        message.warn(\n          err.message === \"data\"\n            ? \"Неверно введен логин или пароль\"\n            : err.message === \"acc not accept\"\n            ? \"Аккаунт не подтвержден\"\n            : \"Что-то пошло не так\"\n        ),\n    }\n  );\n  if (loading) return <Preloader />;\n  return (\n    <Auth\n      email={email}\n      password={password}\n      setPassword={setPassword}\n      setEmail={setEmail}\n      passVision={passVision}\n      setPassVision={setPassVision}\n      formRes={formRes}\n    />\n  );\n};\nlet AuthConnector = connect(null, { isAuthAC: actions.isAuthAC });\ntype propsType = ConnectedProps<typeof AuthConnector>;\nexport let AuthContainer = AuthConnector(AuthBlock);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\ntype propsType = {\n  setPassVision: (passVision: boolean) => void;\n  setEmail: (email: string) => void;\n  setPassword: (password: string) => void;\n  setPasswordAccess: (passwordAccess: string) => void;\n  passwordAccess: string;\n  passVision: boolean;\n  password: string;\n  email: string;\n  regFun: (obj: { variables: { [key: string]: any } }) => void;\n};\nexport let Registration = (props: propsType) => {\n  let handler = () => {\n    props.setPassVision(!props.passVision);\n  };\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.regFun({\n            variables: {\n              email: props.email,\n              password: props.password,\n              passwordAccess: props.passwordAccess,\n            },\n          });\n        }}\n      >\n        <input\n          type=\"email\"\n          placeholder=\"Почта\"\n          value={props.email}\n          onChange={(e) => {\n            props.setEmail(e.currentTarget.value);\n          }}\n          required\n        />\n        <div className=\"passBlock\">\n          <input\n            type={props.passVision ? \"text\" : \"password\"}\n            value={props.password}\n            placeholder=\"Пароль\"\n            onChange={(e) => {\n              props.setPassword(e.currentTarget.value);\n            }}\n            required\n          />\n          <FontAwesomeIcon\n            onClick={handler}\n            icon={props.passVision ? \"eye\" : \"eye-slash\"}\n          />\n        </div>\n        <input\n          type={props.passVision ? \"text\" : \"password\"}\n          value={props.passwordAccess}\n          placeholder=\"Введите пароль повторно\"\n          onChange={(e) => {\n            props.setPasswordAccess(e.currentTarget.value);\n          }}\n          required\n        />\n        <button type={\"submit\"}>Регистрация</button>\n      </form>\n    </>\n  );\n};\n","import { gql, useLazyQuery } from \"@apollo/client\";\nimport { message } from \"antd\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"../../store/authReducer\";\nimport { Preloader } from \"../preloader/preloader\";\nimport { Registration } from \"./registration\";\nexport let RegBlock = () => {\n  let [passVision, setPassVision] = useState(false);\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [passwordAccess, setPasswordAccess] = useState(\"\");\n  let [regFun, { loading }] = useLazyQuery(\n    gql`\n      query reg($email: String!, $password: String!, $passwordAccess: String!) {\n        reg(email: $email, password: $password, passwordAccess: $passwordAccess)\n      }\n    `,\n    {\n      onCompleted: () => {\n        message.success(\n          \"Необходимо подтверждение аккаунта. Вам на почту отправлено письмо.\"\n        );\n      },\n      onError: (err) =>\n        message.warn(\n          err.message === \"not enough data\"\n            ? \"Не все данные были введены\"\n            : err.message === \"acc already created\"\n            ? \"Аккаунт уже создан\"\n            : err.message === \"Password mismatch\"\n            ? \"Пароли не совпадают\"\n            : \"Что-то пошло не так\"\n        ),\n    }\n  );\n  if (loading) return <Preloader />;\n  return (\n    <Registration\n      email={email}\n      password={password}\n      setPassword={setPassword}\n      setEmail={setEmail}\n      passVision={passVision}\n      setPassVision={setPassVision}\n      setPasswordAccess={setPasswordAccess}\n      passwordAccess={passwordAccess}\n      regFun={regFun}\n    />\n  );\n};\nexport let RegistrationContainer = connect(null, {\n  isAuthAC: actions.isAuthAC,\n})(RegBlock);\n","import { connect, ConnectedProps } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { GlobalState } from \"../../store/store\";\nimport {AuthContainer} from \"../auth/authContainer\";\nimport { RegistrationContainer } from \"../registration/registrationContainer\";\n\nlet MapStateToProps = (state: GlobalState) => {\n  return {\n    isAuth: state.authReducer.isAuth,\n  };\n};\nlet AccBlock = (props: propsType) => {\n  let [loginState, setLoginState] = useState(\"login\");\n  return props.isAuth ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <div className=\"LogRegBlock\">\n      <div className=\"LogRegWrapper\">\n        <div className=\"LogRegTitles\">\n          <h3\n            style={{\n              color: loginState === \"login\" ? \"white\" : \"#c2c2c2\",\n            }}\n            onClick={() => {\n              setLoginState(\"login\");\n            }}\n          >\n            Вход\n          </h3>\n          <h3\n            style={{\n              color: loginState === \"registration\" ? \"white\" : \"#c2c2c2\",\n            }}\n            onClick={() => {\n              setLoginState(\"registration\");\n            }}\n          >\n            Регистрация\n          </h3>\n        </div>\n        <div className=\"LogReg\">\n          {loginState === \"login\" ? <AuthContainer /> : <RegistrationContainer />}\n        </div>\n      </div>\n    </div>\n  );\n};\nlet AccountConnector = connect(MapStateToProps);\ntype propsType = ConnectedProps<typeof AccountConnector>;\nexport let AccountContainer = AccountConnector(AccBlock);\n","import { connect } from \"react-redux\";\nimport { App } from \"./App\";\nimport { actions } from \"./store/authReducer\";\nimport { GlobalState } from \"./store/store\";\n\ntype MapStateToPropsType = {\n  stateOfHeader: number;\n  isFillingVision: boolean;\n};\nlet MapStateToProps = (state: GlobalState): MapStateToPropsType => ({\n  stateOfHeader: state.menuReducer.stateOfHeader,\n  isFillingVision: state.mainReducer.isFillingVision,\n});\n\nexport let AppContainer = connect(MapStateToProps, {\n  isAuthAC: actions.isAuthAC,\n})(App);\n","import React from \"react\";\nimport \"./css/style.scss\";\nimport { HeaderContainer } from \"./components/header/headerContainer\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { HelpContainer } from \"./components/contact/helpContainer\";\nimport { MainContainer } from \"./components/main-components/MainContainer\";\nimport { AcceptAccount } from \"./components/acc/acceptAccount\";\nimport { AccountContainer } from \"./components/acc/accountContainer\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { dataType } from \"./store/authReducer\";\nimport { Preloader } from \"./components/preloader/preloader\";\nimport { templateFragment } from \"./components/graphQl-fragments/templateFragment\";\n\ntype propsType = {\n  stateOfHeader: number;\n  isFillingVision: boolean;\n  isAuthAC: (\n    isAuth: boolean,\n    templates: Array<dataType>,\n    token: string\n  ) => void;\n};\nexport const App = (props: propsType) => {\n  let userToken = localStorage.getItem(\"token\");\n  let { loading } = useQuery(\n    gql`\n      ${templateFragment}\n      query getUserData($userToken: String) {\n        getUsersData(userToken: $userToken) {\n          templates {\n            ...template\n          }\n          token\n        }\n      }\n    `,\n    {\n      variables: {\n        userToken: userToken ? userToken.replace(/\"/g, ``) : null,\n      },\n      notifyOnNetworkStatusChange: true,\n      onCompleted: (data) => {\n        props.isAuthAC(\n          true,\n          data.getUsersData.templates,\n          data.getUsersData.token\n        );\n      },\n    }\n  );\n  if (loading) {\n    return <Preloader />;\n  }\n  return (\n    <div className=\"App\">\n      <HeaderContainer />\n      <main>\n        <Switch>\n          <Route exact path=\"/\" render={() => <MainContainer />} />\n          <Route exact path=\"/help\" render={() => <HelpContainer />} />\n          <Route exact path=\"/account\" render={() => <AccountContainer />} />\n          <Route exact path=\"/accept/:Id\" render={() => <AcceptAccount />} />\n          <Redirect to={\"/\"} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers} from \"redux\";\nimport { mainReducer } from \"./mainReducer\";\nimport { menuReducer } from \"./menuReducer\";\nimport { authReducer } from \"./authReducer\";\n\nlet reducers = combineReducers({\n  mainReducer,\n  authReducer,\n  menuReducer,\n});\nexport type actionsTypes<\n  T extends { [keys: string]: (...args: any[]) => any }\n> = ReturnType<T extends { [key: string]: infer U } ? U : never>;\nexport type GlobalState = ReturnType<typeof reducers>;\nconst store = createStore(reducers);\n\nexport default store;\n","import {\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n  faCogs,\n  faEye,\n  faTimes,\n  faEyeSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nlibrary.add(\n  faAngleDoubleRight,\n  faAngleDoubleLeft,\n  faCogs,\n  faTimes,\n  faEye,\n  faEyeSlash\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppContainer } from \"./AppContainer\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./accets/FAIcons\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nlet client = new ApolloClient({\n  cache: new InMemoryCache({\n    typePolicies: {\n      UserData: {\n        keyFields: [\"templates\"],\n      },\n    },\n  }),\n  uri: \"/GqlApi\",\n});\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}