{"version":3,"sources":["accets/img/Template-2.png","accets/img/Template-3.png","accets/img/Template-4.png","accets/img/Template-1.png","accets/img/preloader.webp","components/header.tsx","store/menuReducer.ts","store/authReducer.ts","components/headerContainer.tsx","components/contact/input.tsx","components/contact/help.tsx","store/mainReducer.ts","components/contact/helpContainer.tsx","components/main-components/FormInput.js","components/main-components/HtmlCreator.js","components/main-components/Form.js","components/main-components/FormContainer.tsx","components/main-components/SeeingFields.js","components/main-components/hooks.js","components/main-components/Field.js","components/main-components/DataFilling.js","components/main-components/DataFillingContainer.js","components/main-components/miniHeader.js","components/main-components/templates.js","components/main-components/filter.js","components/main-components/filterContainer.js","components/selectors/templateSelector.ts","components/main-components/templatesContainer.js","components/main-components/personalTemplatesCreator.js","components/main-components/personalTemplates.js","components/main-components/personalTemplatesContainer.js","components/main-components/MiniHeaderSwitch.js","components/main-components/MiniHeaderSwitchContainer.js","components/Main.tsx","components/MainContainer.tsx","components/acc/registration.tsx","components/acc/registrationContainer.tsx","components/acc/acceptAccount.tsx","components/acc/auth.tsx","components/acc/authContainer.tsx","components/acc/accountContainer.js","components/preloader.tsx","components/preloaderContainer.tsx","App.tsx","AppContainer.tsx","serviceWorker.js","store/store.ts","accets/FAIcons.js","index.tsx"],"names":["module","exports","Header","React","memo","props","className","to","isAuth","onClick","LogoutThunk","data","stateOfHeader","stateOfHeaderAC","type","token","userTemplates","login","loginState","isPreloaderVision","actions","isAuthAC","templates","loginStateAC","state","preloaderVisionAC","preloaderVision","userTemplatesAC","deleteUserTemplatesAC","template","logoutAC","HeaderContainer","connect","authReducer","dispatch","getState","localStorage","removeItem","menuReducer","message","success","Input","input","checked","placeholder","Forms","handleSubmit","onSubmit","name","component","disabled","disable","Form","reduxForm","form","generalBackgroundColor","formBackgroundColor","selectedInput","formWidth","formMarginTop","textColor","buttColor","buttTextColor","buttWidth","buttHeight","stateOfForm","isFillingVision","title","descriptionColor","titleColor","labelsPosition","numOfFields","inputs","1","width","height","fieldDescription","descriptionPosition","2","isFilterVision","filters","fields","3","4","5","settings","nameOfTemplate","image","Template1","group","Template2","Template3","Template4","ApplyTemplateAC","ChangeStateOFFormAC","ChangeFormBackgroundColorAC","ChangeButtTextColorAC","ChangeIsFilterVision","ChangeButtColorAC","ChangeGeneralBackgroundColorAC","ChangeAddFieldAC","ChangeInputsAC","index","ChangeFillingVisionAC","ChangeTitleAC","ChangeSelectedInputAC","ChangeDeleteFieldAC","ChangeNumOfFieldsAC","ChangeLabelsPositionAC","FiltersAC","ChangeFormMarginTopAC","ChangeButtHeightAC","ChangeButtWidthAC","ChangeFormWidthAC","ChangeTextColorAC","ChangeDescriptionColorAC","ChangeTitleColorAC","AuthThunk","authActions","setItem","JSON","stringify","getItem","replace","axios","post","parse","then","res","catch","RequestThunk","url","body","response","status","er","undefined","console","log","HelpContainer","useState","setDisable","reqFromForm","values","a","warning","FormInput","Field","style","justifySelf","display","color","required","marginLeft","htmlFor","i","id","HtmlCreator","keys","Object","map","e","String","inputsKeys","InputsCreator","key","backgroundColor","preventDefault","marginTop","gridTemplateColumns","onMouseOver","changeStyles","onMouseLeave","revertStyles","changeState","whiteSpace","action","method","FormContainer","mainReducer","target","background","currentTarget","SeeingFields","st","setSt","useDa","useEffect","DeleteField","setTimeout","icon","changeInput","setPlaceholder","setTypeOfInput","setName","setFieldDescription","setDescriptionPosition","setHeight","setWidth","setSize","typeOfInput","size","handler","value","changeInputHandler","onChange","step","min","max","Button","process","DataFilling","check","InputsMaker","saveFormHandler","DataFillingContainer","SaveThunk","err","val","MiniHeader","getAttribute","cursor","Templates","src","alt","Filter","optionsWrapper","VisionFilter","FilterContainer","TemplateSelector","createSelector","filter","indexOf","TemplatesContainer","templateKeys","TemplatesMaker","PersonalTemplatesCreator","border","margin","DeleteTemplateThunk","marginBottom","PersonalTemplates","userTemplatesMaker","PersonalTemplatesContainer","MiniHeaderSwitch","MiniHeaderSwitchContainer","Main","MainContainer","Registrations","passVision","SetPassVision","Registration","RegistrationContainer","FormReq","error","AcceptAccountBlock","match","params","Id","AcceptThunk","text","setText","da","withRouter","AcceptAccount","Auths","Auth","AuthContainer","AccountContainer","Preloader","preloader","PreloaderContainer","App","exact","path","render","AppContainer","Boolean","window","location","hostname","reducers","combineReducers","Number","newObj","length","substr","keysOfInputs","posEl","forEach","splice","push","formReducer","copyState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","library","add","faAngleDoubleRight","faAngleDoubleLeft","faCogs","faTimes","faEye","faEyeSlash","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39c4258a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Template-2.5213bf95.png\";","module.exports = __webpack_public_path__ + \"static/media/Template-3.17829dbb.png\";","module.exports = __webpack_public_path__ + \"static/media/Template-4.e1733ffa.png\";","module.exports = __webpack_public_path__ + \"static/media/Template-1.8d398272.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.e691533e.webp\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\ntype props= {\r\n    isAuth:boolean,\r\n    LogoutThunk: () => void\r\n}\r\nexport let Header:React.FC<props> = React.memo((props) => {\r\n  let handler= () => {\r\n    props.LogoutThunk();\r\n  };\r\n  return (\r\n    <header>\r\n      <div className=\"header\">\r\n        <span className=\"logo-txt\">\r\n          <NavLink to=\"/\">FormMaker</NavLink>\r\n        </span>\r\n        <NavLink to=\"/\">Главная</NavLink>\r\n        <NavLink to=\"/help\">Помощь</NavLink>\r\n        {props.isAuth ? (\r\n          <p onClick={handler}>Выйти</p>\r\n        ) : (\r\n          <NavLink to=\"/account\">Войти</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n});\r\n","type dataType={\r\n  stateOfHeader:number\r\n}\r\nlet data:dataType = {\r\n  stateOfHeader: 1\r\n};\r\nexport let menuReducer = (state = data, action:any) => {\r\n  switch (action.type) {\r\n    case \"stateOfHeader\": {\r\n      return { ...state, stateOfHeader: Number(action.stateOfHeader) };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\ntype stateOfHeaderACType={\r\n  type:string,\r\n  stateOfHeader:number\r\n}\r\nexport let stateOfHeaderAC = (stateOfHeader:number):stateOfHeaderACType => ({\r\n  type: \"stateOfHeader\",\r\n  stateOfHeader\r\n});\r\n","import {stateOfHeaderAC} from \"./menuReducer\";\r\nimport {message} from \"antd\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {actionsTypes, GlobalState} from \"./store\";\r\nimport {Action} from \"redux\";\r\n\r\ntype dataInputNumType = {\r\n    [key: number]: dataInputNumParamType\r\n}\r\ntype dataInputNumParamType = {\r\n    name: string | null,\r\n    placeholder: string | null,\r\n    type: string | null,\r\n    width: number | null,\r\n    height: number | null,\r\n    fieldDescription: string | null,\r\n    descriptionPosition: \"inline\" | \"bottom\",\r\n}\r\ntype dataAuthType = typeof data\r\n\r\nexport type dataType = {\r\n    generalBackgroundColor: string,\r\n    formBackgroundColor: string,\r\n    selectedInput: string,\r\n    textColor: string,\r\n    buttColor: string,\r\n    buttTextColor: string,\r\n    title: string,\r\n    descriptionColor: string,\r\n    titleColor: string,\r\n    labelsPosition: string,\r\n    formWidth: number,\r\n    formMarginTop: number,\r\n    buttWidth: number,\r\n    buttHeight: number,\r\n    numOfFields: number,\r\n    stateOfForm: boolean,\r\n    isFillingVision: boolean,\r\n    isFilterVision: boolean,\r\n    inputs: dataInputNumType\r\n}\r\nlet data = {\r\n    isAuth: false,\r\n    token: \"\",\r\n    userTemplates: [] as Array<dataType>,\r\n    login: \"\",\r\n    loginState: \"login\",\r\n    isPreloaderVision: false\r\n};\r\ntype actionTypes = actionsTypes<typeof actions>\r\n\r\nexport let authReducer = (state: dataAuthType = data, action: actionTypes) => {\r\n    switch (action.type) {\r\n        case \"Auth\": {\r\n            let copyState = {...state};\r\n            copyState.isAuth = action.isAuth;\r\n            copyState.token = action.token;\r\n            copyState.userTemplates = action.templates;\r\n            copyState.login = action.login;\r\n            return {...copyState};\r\n        }\r\n        case \"userTemplates\": {\r\n            let copyState = {...state};\r\n            copyState.userTemplates.push(action.userTemplates);\r\n            return {...copyState};\r\n        }\r\n        case \"deleteUserTemplatesAC\": {\r\n            let copyState = {...state};\r\n            copyState.userTemplates.splice(action.template, 1);\r\n            return {...copyState};\r\n        }\r\n        case \"preloaderVision\": {\r\n            return {...state, isPreloaderVision: !state.isPreloaderVision};\r\n        }\r\n        case \"loginState\": {\r\n            return {...state, loginState: action.state};\r\n        }\r\n        case \"logout\": {\r\n            let copyState = {...state};\r\n            copyState.isAuth = false;\r\n            copyState.token = \"\";\r\n            return {...copyState};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\nexport let actions = {\r\n    isAuthAC: (isAuth: boolean, token: string, templates: Array<dataType>, login: string) => ({\r\n        type: \"Auth\",\r\n        isAuth,\r\n        token,\r\n        templates,\r\n        login\r\n    } as const),\r\n    loginStateAC: (state: \"login\" | \"registration\") => ({\r\n        type: \"loginState\",\r\n        state\r\n    } as const),\r\n    preloaderVisionAC: (preloaderVision: boolean) => ({\r\n        type: \"preloaderVision\",\r\n        preloaderVision\r\n    } as const),\r\n    userTemplatesAC: (userTemplates: dataType) => ({\r\n        type: \"userTemplates\",\r\n        userTemplates\r\n    } as const),\r\n    deleteUserTemplatesAC: (template: number) => ({\r\n        type: \"deleteUserTemplatesAC\",\r\n        template\r\n    } as const),\r\n    logoutAC: () => ({\r\n        type: \"logout\"\r\n    } as const)\r\n}\r\n\r\nexport let LogoutThunk = (): ThunkAction<void, GlobalState, unknown, Action> => {\r\n    return (dispatch, getState) => {\r\n        localStorage.removeItem(\"token\");\r\n        dispatch(actions.logoutAC());\r\n        let state = getState();\r\n        if (state.menuReducer.stateOfHeader === 3) dispatch(stateOfHeaderAC(2));\r\n        message.success(\"Вы вышли из аккаунта\");\r\n    };\r\n};\r\n","import {connect} from \"react-redux\";\r\nimport {Header} from \"./header\";\r\nimport {LogoutThunk} from \"../store/authReducer\";\r\nimport {GlobalState} from \"../store/store\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    LogoutThunk: () => void\r\n}\r\nlet MapStateToProps = (state: GlobalState): MapStateToPropsType => ({\r\n    isAuth: state.authReducer.isAuth\r\n});\r\nexport let HeaderContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, GlobalState>(MapStateToProps, {LogoutThunk})(Header);\r\n","import React from \"react\";\r\ntype props={\r\n    type:string,\r\n    className:string,\r\n    checked?:boolean,\r\n    placeholder?:string,\r\n    input:inputType\r\n}\r\ntype inputType={\r\n    name:string,\r\n    value:string\r\n}\r\nexport let Input:React.FC<props> = React.memo((props) => {\r\n  let {  type, className,input } = props;\r\n  return (\r\n    <>\r\n      <input\r\n          {...input}\r\n        className={className}\r\n        checked={props.checked}\r\n        placeholder={props.placeholder}\r\n        type={type}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport {Input} from \"./input\";\r\nimport  {valuesType} from \"./helpContainer\"\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\ntype props={\r\n  disable:boolean\r\n}\r\nlet Forms:React.FC<InjectedFormProps<valuesType,props>&props> = React.memo((props) => {\r\n    const {handleSubmit} = props;\r\n    return (\r\n        <div className=\"HelpForm\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Мы ответим вам в течение часа</h1>\r\n                <Field name=\"name\" className=\"help-input\" placeholder=\"Ваше имя\" type=\"text\" component={Input}/>\r\n                <Field name=\"email\" className=\"help-input\" placeholder=\"Почта\" type=\"email\" component={Input}/>\r\n                <Field name=\"message\" className=\"help-input\" placeholder=\"Сообщение\" component=\"textarea\"/>\r\n                <div className=\"CheckMessegeAccept\">\r\n                    <label>Отправляя сообщение, я даю соглашение на обработку персональных данных</label>\r\n                    <Field name=\"agree\" component={Input} type=\"checkbox\" checked/>\r\n                </div>\r\n                <button type=\"submit\" disabled={props.disable}>Отправить</button>\r\n            </form>\r\n        </div>\r\n    );\r\n});\r\nexport let Form = reduxForm<valuesType,props>({\r\n    form: \"help\"\r\n})(Forms);\r\n","import Template2 from \"./../accets/img/Template-2.png\";\r\nimport Template3 from \"./../accets/img/Template-3.png\";\r\nimport Template4 from \"./../accets/img/Template-4.png\";\r\nimport axios, {AxiosError, AxiosResponse} from \"axios\";\r\nimport {dataType as authDataType} from \"./authReducer\"\r\nimport {actions as authActions} from \"./authReducer\";\r\nimport Template1 from \"./../accets/img/Template-1.png\";\r\nimport {message} from \"antd\";\r\nimport {valuesType} from \"../components/contact/helpContainer\";\r\nimport {valuesRegistrationType} from \"../components/acc/registrationContainer\";\r\nimport {valuesAuthType} from \"../components/acc/authContainer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {actionsTypes, GlobalState} from \"./store\";\r\nimport {Action} from \"redux\";\r\n\r\n/***********************types of inputs*******************************/\r\nexport type dataInputNumType = {\r\n    [key: number]: dataInputNumParamType\r\n}\r\ntype dataInputNumParamType = {\r\n    name: string,\r\n    placeholder: string,\r\n    type: string,\r\n    width: number,\r\n    height: number,\r\n    fieldDescription: string,\r\n    descriptionPosition: \"inline\" | \"bottom\",\r\n}\r\n/***********************types of templates*******************************/\r\ntype dataTemplatesNumbersFieldsType = {\r\n    fields: dataTemplatesFieldsType,\r\n    settings: dataTemplatesSettingsType\r\n}\r\ntype dataTemplatesFieldsType = {\r\n    [key: number]: dataInputNumParamType\r\n}\r\ntype dataTemplatesSettingsType = {\r\n    nameOfTemplate: string | null,\r\n    generalBackgroundColor: string,\r\n    image: string,\r\n    group: string,\r\n    labelsPosition: string,\r\n    title: string | null,\r\n    numOfFields: number,\r\n    formWidth: number,\r\n    buttWidth: number,\r\n    buttHeight: number,\r\n    formMarginTop: number,\r\n    formBackgroundColor: string,\r\n    textColor: string,\r\n    descriptionColor: string,\r\n    buttTextColor: string,\r\n    titleColor: string,\r\n    buttColor: string\r\n}\r\n\r\n/******************************************* *******************************/\r\ntype dataType = typeof data;\r\n\r\nlet data = {\r\n    generalBackgroundColor: \"#ffffff\",\r\n    formBackgroundColor: \"#a3a19f\",\r\n    selectedInput: null as null | string,\r\n    formWidth: 80,\r\n    formMarginTop: 23,\r\n    textColor: \"#000000\",\r\n    buttColor: \"#65ccbc\",\r\n    buttTextColor: \"#fdfcff\",\r\n    buttWidth: 35,\r\n    buttHeight: 6,\r\n    stateOfForm: true,\r\n    isFillingVision: true,\r\n    title: \"\",\r\n    descriptionColor: \"#a175ff\",\r\n    titleColor: \"#ffffff\",\r\n    labelsPosition: \"top\",\r\n    numOfFields: 2,\r\n    inputs: {\r\n        1: {\r\n            name: \"Поле1\",\r\n            placeholder: \"\",\r\n            type: \"text\",\r\n            width: 20,\r\n            height: 3,\r\n            fieldDescription: \"\",\r\n            descriptionPosition: \"inline\"\r\n        },\r\n        2: {\r\n            name: \"Поле2\",\r\n            placeholder: \"\",\r\n            type: \"text\",\r\n            width: 20,\r\n            height: 3,\r\n            fieldDescription: \"\",\r\n            descriptionPosition: \"inline\"\r\n        }\r\n    } as dataInputNumType,\r\n    isFilterVision: false,\r\n    filters: [] as Array<string>,\r\n    templates: [\r\n        {\r\n            fields: {\r\n                1: {\r\n                    name: \"Имя\",\r\n                    placeholder: \"Имя\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                },\r\n                2: {\r\n                    name: \"Фамилия\",\r\n                    placeholder: \"Фамилия\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n\r\n                },\r\n                3: {\r\n                    name: \"Телефон\",\r\n                    placeholder: \"Введите номер телефона\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                },\r\n                4: {\r\n                    name: \"Почта\",\r\n                    placeholder: \"Введите почту\",\r\n                    type: \"email\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                },\r\n                5: {\r\n                    name: \"Сообщение\",\r\n                    placeholder: \"Сообщение\",\r\n                    type: \"textarea\",\r\n                    width: 60,\r\n                    height: 15,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                }\r\n            },\r\n            settings: {\r\n                nameOfTemplate: \"Шаблон 1\",\r\n                image: Template1,\r\n                group: \"Форма обратной связи\",\r\n                labelsPosition: \"top\",\r\n                title: \"Мы ответим на любые ваши вопросы\",\r\n                numOfFields: 2,\r\n                buttWidth: 35,\r\n                formWidth: 68,\r\n                buttHeight: 6,\r\n                descriptionColor: \"#ffffff\",\r\n                formMarginTop: 2,\r\n                generalBackgroundColor: \"#ffffff\",\r\n                formBackgroundColor: \"#a3a19f\",\r\n                textColor: \"#ffffff\",\r\n                buttTextColor: \"#fdfcff\",\r\n                titleColor: \"#ffffff\",\r\n                buttColor: \"#53c6b4\"\r\n            }\r\n        },\r\n        {\r\n            fields: {\r\n                1: {\r\n                    name: \"Почта\",\r\n                    placeholder: \"Введите почту\",\r\n                    type: \"email\",\r\n                    width: 15,\r\n                    height: 4,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                }\r\n            },\r\n            settings: {\r\n                nameOfTemplate: \"Шаблон 2\",\r\n                image: Template2,\r\n                group: \"Подписка на рассылку\",\r\n                labelsPosition: \"left\",\r\n                title: \"Подписка на рассылку\",\r\n                numOfFields: 1,\r\n                formWidth: 28,\r\n                buttWidth: 21,\r\n                generalBackgroundColor: \"#ffffff\",\r\n                formBackgroundColor: \"#a3a19f\",\r\n                buttHeight: 6,\r\n                formMarginTop: 25,\r\n                descriptionColor: \"#ffffff\",\r\n                textColor: \"#ffffff\",\r\n                buttTextColor: \"#fdfcff\",\r\n                titleColor: \"#ffffff\",\r\n                buttColor: \"#53c6b4\"\r\n            }\r\n        },\r\n        {\r\n            fields: {\r\n                1: {\r\n                    name: \"Имя\",\r\n                    placeholder: \"Имя\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                },\r\n                2: {\r\n                    name: \"Телефон\",\r\n                    placeholder: \"Введите телефон\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                }\r\n            },\r\n            settings: {\r\n                nameOfTemplate: \"Шаблон 3\",\r\n                image: Template3,\r\n                group: \"Заказ звонка\",\r\n                labelsPosition: \"top\",\r\n                title: \"Заказ звонка\",\r\n                numOfFields: 2,\r\n                formWidth: 68,\r\n                generalBackgroundColor: \"#ffffff\",\r\n                formBackgroundColor: \"#a3a19f\",\r\n                buttWidth: 35,\r\n                buttHeight: 6,\r\n                formMarginTop: 23,\r\n                textColor: \"#ffffff\",\r\n                buttTextColor: \"#fdfcff\",\r\n                titleColor: \"#ffffff\",\r\n                descriptionColor: \"#ffffff\",\r\n                buttColor: \"#53c6b4\"\r\n            }\r\n        },\r\n        {\r\n            fields: {\r\n                1: {\r\n                    name: \"Имя\",\r\n                    placeholder: \"Имя\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                },\r\n                2: {\r\n                    name: \"Фамилия\",\r\n                    placeholder: \"Фамилия\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                },\r\n                3: {\r\n                    name: \"Телефон\",\r\n                    placeholder: \"Введите телефон\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 5,\r\n                    fieldDescription: \"\",\r\n                    descriptionPosition: \"inline\"\r\n                }\r\n            },\r\n            settings: {\r\n                nameOfTemplate: \"Шаблон 4\",\r\n                image: Template4,\r\n                group: \"Оформление заказа\",\r\n                labelsPosition: \"top\",\r\n                title: \"Оформление заказа\",\r\n                numOfFields: 1,\r\n                generalBackgroundColor: \"#ffffff\",\r\n                formBackgroundColor: \"#a3a19f\",\r\n                formWidth: 36,\r\n                buttWidth: 23,\r\n                buttHeight: 6,\r\n                formMarginTop: 7,\r\n                textColor: \"#ffffff\",\r\n                descriptionColor: \"#ffffff\",\r\n                buttTextColor: \"#fdfcff\",\r\n                titleColor: \"#ffffff\",\r\n                buttColor: \"#53c6b4\"\r\n            }\r\n        }] as Array<dataTemplatesNumbersFieldsType>\r\n};\r\ntype localActionsTypes = actionsTypes<typeof actions>;\r\nexport const mainReducer = (state = data, action: localActionsTypes): dataType => {\r\n    switch (action.type) {\r\n        case \"formBackgroundColor\":\r\n            return {...state, formBackgroundColor: action.formBackgroundColor};\r\n\r\n        case \"numOfFields\": {\r\n            return {\r\n                ...state,\r\n                numOfFields:\r\n                    Number(action.numOfFields) > 2\r\n                        ? 2\r\n                        : Number(action.numOfFields) < 1\r\n                        ? 1\r\n                        : Number(action.numOfFields)\r\n            };\r\n        }\r\n        case \"title\": {\r\n            return {...state, title: action.title};\r\n        }\r\n        case \"buttWidth\": {\r\n            return {\r\n                ...state,\r\n                buttWidth:\r\n                    Number(action.buttWidth) < 0\r\n                        ? 0\r\n                        : Number(action.buttWidth) > 100\r\n                        ? 100\r\n                        : Number(action.buttWidth)\r\n            };\r\n        }\r\n        case \"buttHeight\": {\r\n            return {\r\n                ...state,\r\n                buttHeight:\r\n                    Number(action.buttHeight) < 0 ? 0 : Number(action.buttHeight)\r\n            };\r\n        }\r\n        case \"isFilterVision\": {\r\n            return {...state, isFilterVision: !state.isFilterVision};\r\n        }\r\n        case \"FillingVision\": {\r\n            return {...state, isFillingVision: !state.isFillingVision};\r\n        }\r\n        case \"buttColor\": {\r\n            return {...state, buttColor: action.buttColor};\r\n        }\r\n        case \"labelsPosition\": {\r\n            return {...state, labelsPosition: action.labelsPosition};\r\n        }\r\n        case \"changeStateOfForm\": {\r\n            return {...state, stateOfForm: !state.stateOfForm};\r\n        }\r\n        case \"buttTextColor\": {\r\n            return {...state, buttTextColor: action.buttTextColor};\r\n        }\r\n        case \"textColor\": {\r\n            return {...state, textColor: action.textColor};\r\n        }\r\n        case \"generalBackgroundColor\": {\r\n            return {\r\n                ...state,\r\n                generalBackgroundColor: action.generalBackgroundColor\r\n            };\r\n        }\r\n        case \"selectedInput\": {\r\n            return {...state, selectedInput: action.selectedInput};\r\n        }\r\n        case \"titleColor\": {\r\n            return {...state, titleColor: action.titleColor};\r\n        }\r\n        case \"descriptionColor\": {\r\n            return {...state, descriptionColor: action.descriptionColor};\r\n        }\r\n        case \"formWidth\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            Number(action.formWidth) <= 0\r\n                ? (newObj.formWidth = 1)\r\n                : Number(action.formWidth) > 100\r\n                ? (newObj.formWidth = 100)\r\n                : (newObj.formWidth = action.formWidth);\r\n            return {...newObj};\r\n        }\r\n        case \"formMarginTop\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            Number(action.formMarginTop) < 0\r\n                ? (newObj.formMarginTop = 0)\r\n                : Number(action.formMarginTop) > 500\r\n                ? (newObj.formMarginTop = 500)\r\n                : (newObj.formMarginTop = action.formMarginTop);\r\n            return {...newObj};\r\n        }\r\n        case \"deleteField\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            delete newObj.inputs[action.index];\r\n            return {...newObj};\r\n        }\r\n        case \"inputs\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            console.log(action.data[\"type\"])\r\n            newObj.inputs[action.index] = {\r\n                name:\r\n                    action.data[\"name\"].length >= 50\r\n                        ? action.data[\"name\"].substr(0, 50)\r\n                        : action.data[\"name\"],\r\n                placeholder:\r\n                    action.data[\"type\"] !== \"checkbox\"\r\n                        ? action.data[\"placeholder\"]\r\n                        : \"\",\r\n\r\n                type: action.data.type,\r\n                fieldDescription: action.data[\"fieldDescription\"],\r\n                descriptionPosition: action.data[\"descriptionPosition\"] || \"inline\",\r\n                width: Number(action.data[\"width\"]) || 20,\r\n                height: Number(action.data[\"height\"]) || 3\r\n            };\r\n            return newObj;\r\n        }\r\n        case \"addField\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            let keysOfInputs = Object.keys(newObj.inputs);\r\n            if (keysOfInputs.length !== 15) {\r\n                newObj.inputs[\r\n                    keysOfInputs.length\r\n                        ? Number(keysOfInputs[keysOfInputs.length - 1]) + 1\r\n                        : 1\r\n                    ] = {\r\n                    name: `Поле${\r\n                        keysOfInputs.length\r\n                            ? Number(keysOfInputs[keysOfInputs.length - 1]) + 1\r\n                            : 1\r\n                    }`,\r\n                    placeholder: \"\",\r\n                    type: \"text\",\r\n                    width: 20,\r\n                    height: 3\r\n                };\r\n            }\r\n            return newObj;\r\n        }\r\n        case \"ApplyTemplate\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            newObj.inputs = action.data.fields;\r\n            newObj.labelsPosition = action.data.settings.labelsPosition || \"top\";\r\n            newObj.title = action.data.settings.title || \"Заголовок\";\r\n            newObj.numOfFields = action.data.settings.numOfFields || 1;\r\n            newObj.titleColor = action.data.settings.titleColor || \"#ffffff\";\r\n            newObj.generalBackgroundColor =\r\n                action.data.settings.generalBackgroundColor || \"#ffffff\";\r\n            newObj.descriptionColor =\r\n                action.data.settings.descriptionColor || \"#a175ff\";\r\n            newObj.formBackgroundColor =\r\n                action.data.settings.formBackgroundColor || \"#a3a19f\";\r\n            newObj.formWidth = action.data.settings.formWidth || 80;\r\n            newObj.textColor = action.data.settings.textColor || \"#ffffff\";\r\n            newObj.formMarginTop = action.data.settings.formMarginTop || 23;\r\n            newObj.buttColor = action.data.settings.buttColor || \"#a175ff\";\r\n            newObj.buttTextColor = action.data.settings.buttTextColor || \"#fdfcff\";\r\n            newObj.buttHeight = action.data.settings.buttHeight || \"6\";\r\n            newObj.buttWidth = action.data.settings.buttWidth || \"35\";\r\n            message.success(\"Шаблон применен\");\r\n            return {...newObj};\r\n        }\r\n        case \"filters\": {\r\n            let newObj = JSON.parse(JSON.stringify(state));\r\n            let posEl: Array<string | number> = [];\r\n            newObj.filters.forEach((e: string, i: number) => {\r\n                if (e === action.filters) {\r\n                    posEl = [e, i];\r\n                }\r\n            });\r\n            posEl[0]\r\n                ? newObj.filters.splice(posEl[1], 1)\r\n                : newObj.filters.push(action.filters);\r\n            return {...newObj};\r\n        }\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n};\r\nexport let actions = {\r\n    ApplyTemplateAC: (data:dataTemplatesNumbersFieldsType) => ({\r\n        type: \"ApplyTemplate\",\r\n        data: data\r\n    }as const),\r\n    ChangeStateOFFormAC: () => ({\r\n        type: \"changeStateOfForm\"\r\n    }as const),\r\n    ChangeFormBackgroundColorAC: (formBackgroundColor: string) => ({\r\n        type: \"formBackgroundColor\",\r\n        formBackgroundColor\r\n    }as const),\r\n    ChangeButtTextColorAC: (buttTextColor: string) => ({\r\n        type: \"buttTextColor\",\r\n        buttTextColor\r\n    }as const),\r\n    ChangeIsFilterVision: () => ({\r\n        type: \"isFilterVision\"\r\n    }as const),\r\n    ChangeButtColorAC: (buttColor: string) => ({\r\n        type: \"buttColor\",\r\n        buttColor\r\n    }as const),\r\n    ChangeGeneralBackgroundColorAC: (generalBackgroundColor: string) => ({\r\n        type: \"generalBackgroundColor\",\r\n        generalBackgroundColor\r\n    }as const),\r\n    ChangeAddFieldAC: () => ({\r\n        type: \"addField\"\r\n    }as const),\r\n    ChangeInputsAC: (data: dataInputNumParamType, index: number) => ({\r\n        type: \"inputs\",\r\n        data,\r\n        index\r\n    }as const),\r\n    ChangeFillingVisionAC: () => ({\r\n        type: \"FillingVision\"\r\n    }as const),\r\n    ChangeTitleAC: (title: string) => ({\r\n        type: \"title\",\r\n        title: title\r\n    }as const),\r\n    ChangeSelectedInputAC: (selectedInput: string) => ({\r\n        type: \"selectedInput\",\r\n        selectedInput: selectedInput\r\n    }as const),\r\n    ChangeDeleteFieldAC: (index: number) => ({\r\n        type: \"deleteField\",\r\n        index: index\r\n    }as const),\r\n    ChangeNumOfFieldsAC: (numOfFields: string) => ({\r\n        type: \"numOfFields\",\r\n        numOfFields: numOfFields\r\n    }as const),\r\n    ChangeLabelsPositionAC: (labelsPosition: string) => ({\r\n        type: \"labelsPosition\",\r\n        labelsPosition: labelsPosition\r\n    }as const),\r\n    FiltersAC: (filters: string) => ({\r\n        type: \"filters\",\r\n        filters\r\n    }as const),\r\n    ChangeFormMarginTopAC: (formMarginTop: string) => ({\r\n        type: \"formMarginTop\",\r\n        formMarginTop\r\n    }as const),\r\n    ChangeButtHeightAC: (buttHeight: string) => ({\r\n        type: \"buttHeight\",\r\n        buttHeight\r\n    }as const),\r\n    ChangeButtWidthAC: (buttWidth: string) => ({\r\n        type: \"buttWidth\",\r\n        buttWidth\r\n    }as const),\r\n    ChangeFormWidthAC: (formWidth: string) => ({\r\n        type: \"formWidth\",\r\n        formWidth\r\n    }as const),\r\n    ChangeTextColorAC: (textColor: string) => ({\r\n        type: \"textColor\",\r\n        textColor\r\n    }as const),\r\n    ChangeDescriptionColorAC: (descriptionColor: string) => ({\r\n        type: \"descriptionColor\",\r\n        descriptionColor\r\n    }as const),\r\n    ChangeTitleColorAC: (titleColor: string) => ({\r\n        type: \"titleColor\",\r\n        titleColor\r\n    }as const)\r\n}\r\n\r\nexport type AcceptThunkAxiosType = {\r\n    message: string\r\n}\r\nexport let AcceptThunk = (url: string, method = \"POST\", body: { id: string }, headers = {}): ThunkAction<Promise<AcceptThunkAxiosType | undefined>, GlobalState, unknown, Action> => {\r\n    return () => {\r\n        let resp = axios\r\n            .post(url, body)\r\n            .then((response: AxiosResponse<AcceptThunkAxiosType>) => {\r\n                return response.data;\r\n            })\r\n            .catch((er: AxiosError<AcceptThunkAxiosType>) => {\r\n                if (er.response) {\r\n                    return er.response.data;\r\n                }\r\n            });\r\n\r\n        return resp;\r\n    };\r\n};\r\ntype AuthThunkAxiosType = {\r\n    login: string,\r\n    message: boolean,\r\n    templates: Array<authDataType>\r\n}\r\nexport let AuthThunk = (token?: string, templates?: Array<authDataType>, login?: string): ThunkAction<void, GlobalState, unknown, Action> => {\r\n    return (dispatch, getState) => {\r\n        dispatch(authActions.preloaderVisionAC(getState().authReducer.isPreloaderVision));\r\n        if (token && login && templates) {\r\n            localStorage.setItem(\"token\", JSON.stringify(token));\r\n            dispatch(authActions.isAuthAC(true, token, templates, login));\r\n            dispatch(authActions.preloaderVisionAC(getState().authReducer.isPreloaderVision));\r\n        } else {\r\n            let data: any = localStorage.getItem(\"token\");\r\n            if (data) {\r\n                data = data.replace(/\"/g, ``);\r\n                axios\r\n                    .post(\"/api/checkToken\", {token: JSON.parse(`\"${data}\"`)})\r\n                    .then((res: AxiosResponse<AuthThunkAxiosType>) => {\r\n                        dispatch(authActions.isAuthAC(res.data.message, data, res.data.templates, res.data.login));\r\n                        dispatch(authActions.preloaderVisionAC(getState().authReducer.isPreloaderVision));\r\n                    })\r\n                    .catch(() => {\r\n                        dispatch(authActions.preloaderVisionAC(getState().authReducer.isPreloaderVision));\r\n                    });\r\n            } else {\r\n                dispatch(authActions.preloaderVisionAC(getState().authReducer.isPreloaderVision));\r\n            }\r\n        }\r\n    };\r\n};\r\nexport type RequestThunkResType = {\r\n    status: number, res: { message?: string, token?: string, login?: string, templates: Array<authDataType> }\r\n}\r\nexport let RequestThunk = (url: string, method: string = \"POST\", body: valuesAuthType | valuesType | valuesRegistrationType): ThunkAction<Promise<RequestThunkResType | undefined>, GlobalState, unknown, Action> => {\r\n    return () => {\r\n        let res =\r\n            axios\r\n                .post(url, body)\r\n                .then((response: AxiosResponse<{ message?: string, token?: string, login?: string, templates: Array<authDataType> }>) => {\r\n                    return {status: response.status, res: response.data};\r\n                })\r\n                .catch((er: AxiosError<any | undefined>) => {\r\n                    if (er.response !== undefined) {\r\n                        return {status: er.response.status, res: er.response.data};\r\n                    } else {\r\n                        console.log(\"err\")\r\n                    }\r\n                })\r\n\r\n        return res;\r\n    };\r\n};\r\nexport let SaveThunk = (data: any, token: string): ThunkAction<void, GlobalState, unknown, Action> => {\r\n    return (dispatch: any, getState: any) => {\r\n        if (getState().authReducer.isAuth) {\r\n            axios\r\n                .post(\"/api/saveForm\", {data, token})\r\n                .then((res) => {\r\n                    message.success(res.data.message);\r\n                    dispatch(authActions.userTemplatesAC(data));\r\n                })\r\n                .catch((err) => {\r\n                    message.warning(err.response.data.message);\r\n                });\r\n        } else {\r\n            message.warning(\"Для этого действия необходимо войти в аккаунт\");\r\n        }\r\n    };\r\n};\r\nexport let DeleteTemplateThunk = (index: number): ThunkAction<void, GlobalState, unknown, Action> => {\r\n    return (dispatch: any, getState: any) => {\r\n        if (getState().authReducer.isAuth) {\r\n            axios\r\n                .post(\"/api/deleteTemplate\", {\r\n                    index,\r\n                    token: getState().authReducer.token\r\n                })\r\n                .then((res) => {\r\n                    message.success(res.data.message);\r\n                    dispatch(authActions.deleteUserTemplatesAC(index));\r\n                })\r\n                .catch((err) => {\r\n                    message.warning(err.response.data.message);\r\n                });\r\n        } else {\r\n            message.warning(\"Для этого действия необходимо войти в аккаунт\");\r\n        }\r\n    };\r\n};\r\n","import React, {FC, useState} from \"react\";\r\nimport { Form } from \"./help\";\r\nimport { message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { RequestThunk, RequestThunkResType } from \"../../store/mainReducer\";\r\n\r\nexport type propsHelp={\r\n  RequestThunk:(url:string,method:string,body:valuesType)=>Promise<RequestThunkResType|undefined>\r\n}\r\nexport type valuesType={\r\n  name:string\r\n  message:string\r\n  email:string\r\n\r\n}\r\nexport let HelpBlock:FC<propsHelp> = (props) => {\r\n  let [disable, setDisable] = useState(false);\r\n  let reqFromForm= async (values:valuesType) => {\r\n    setDisable(!disable);\r\n    let data = await props.RequestThunk(\"/api/message\", \"POST\", values);\r\n    setDisable(disable);\r\n    if (data) {\r\n      let {status, res} = data;\r\n      status === 201\r\n          ? message.success(res.message)\r\n          : message.warning(res.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Form disable={disable} onSubmit={reqFromForm} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport let HelpContainer = connect(null, { RequestThunk })(HelpBlock);\r\n","import React from \"react\";\r\n\r\nexport const FormInput = React.memo((props) => {\r\n  let Field = () => {\r\n    if (props.type === \"textarea\") {\r\n      return (\r\n        <div\r\n          className={\r\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\r\n              ? \"wrapper-Form-Intputs-two-textarea \"\r\n              : \"wrapper-Form-Intputs-one-textarea\"\r\n          }\r\n          style={\r\n            props.numOfFields === 1 && props.labelsPosition === \"top\"\r\n              ? { justifySelf: \"center\", width: \"fit-content\" }\r\n              : {}\r\n          }\r\n        >\r\n          {props.name ? (\r\n            <div className=\"textOfInputs\">\r\n              <label>{`${props.name}`}</label>\r\n              <p\r\n                style={{\r\n                  display:\r\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\r\n                  color: props.descriptionColor\r\n                }}\r\n              >\r\n                {!props.fieldDescription\r\n                  ? \"\"\r\n                  : props.descriptionPosition === \"inline\"\r\n                  ? ` (${props.fieldDescription})`\r\n                  : `${props.fieldDescription}`}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <textarea\r\n            disabled={props.disabled}\r\n            style={{\r\n              width: props.width + \"vw\",\r\n              height: props.height + \"vh\",\r\n              color: \"black\"\r\n            }}\r\n            placeholder={props.placeholder}\r\n            required\r\n          />\r\n        </div>\r\n      );\r\n    } else if (props.type === \"file\") {\r\n      return (\r\n        <div\r\n          className={\r\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\r\n              ? \"wrapper-Form-Intputs-two-textarea \"\r\n              : \"wrapper-Form-Intputs-one-textarea\"\r\n          }\r\n          style={{\r\n            justifySelf:\r\n              props.numOfFields === 1 && props.labelsPosition === \"top\"\r\n                ? \"center\"\r\n                : \"left\",\r\n            width: \"fit-content\",\r\n            marginLeft:\r\n              props.numOfFields === 2 && props.labelsPosition === \"top\"\r\n                ? \"10%\"\r\n                : \"\"\r\n          }}\r\n        >\r\n          {props.name ? (\r\n            <div className=\"textOfInputs\">\r\n              <label>{`${props.name}`}</label>\r\n              <p\r\n                style={{\r\n                  display:\r\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\r\n                  color: props.descriptionColor\r\n                }}\r\n              >\r\n                {!props.fieldDescription\r\n                  ? \"\"\r\n                  : props.descriptionPosition === \"inline\"\r\n                  ? ` (${props.fieldDescription})`\r\n                  : `${props.fieldDescription}`}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <input\r\n            placeholder={props.placeholder}\r\n            type={props.type || \"text\"}\r\n            required\r\n            disabled={props.disabled}\r\n            style={{\r\n              color: \"black\"\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (props.type === \"checkbox\") {\r\n      return (\r\n        <div\r\n          className={\r\n            props.numOfFields === 2 && props.labelsPosition === \"top\"\r\n              ? \"inputRadio wrapper-Form-CheckBoxes-two \"\r\n              : \"inputRadio wrapper-Form-CheckBoxes-one\"\r\n          }\r\n          style={\r\n            props.numOfFields === 1 && props.labelsPosition === \"top\"\r\n              ? { justifySelf: \"center\" }\r\n              : props.numOfFields === 2 && props.labelsPosition === \"top\"\r\n              ? { marginLeft: \"10%\" }\r\n              : {}\r\n          }\r\n        >\r\n          <div className=\"textOfInputs\">\r\n            {props.name ? (\r\n              <label htmlFor={props.disabled ? \"\" : \"inputRadio\" + props.i}>\r\n                {props.name}\r\n              </label>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <input\r\n              style={{\r\n                width: props.width + \"vw\",\r\n                height: props.height + \"vh\",\r\n                color: \"black\"\r\n              }}\r\n              id={\"inputRadio\" + props.i}\r\n              type={props.type || \"radio\"}\r\n              disabled={props.disabled}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className={\r\n            props.labelsPosition === \"top\"\r\n              ? \"wrapper-Form-Intputs-top\"\r\n              : \"wrapper-Form-Intputs-left\"\r\n          }\r\n        >\r\n          {props.name ? (\r\n            <div className=\"textOfInputs\">\r\n              <label>{`${props.name} `}</label>\r\n              <p\r\n                style={{\r\n                  display:\r\n                    props.descriptionPosition === \"inline\" ? \"inline\" : \"\",\r\n                  color: props.descriptionColor\r\n                }}\r\n              >\r\n                {!props.fieldDescription\r\n                  ? \"\"\r\n                  : props.descriptionPosition === \"inline\"\r\n                  ? ` (${props.fieldDescription})`\r\n                  : `${props.fieldDescription}`}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <input\r\n            placeholder={props.placeholder}\r\n            type={props.type || \"text\"}\r\n            required\r\n            disabled={props.disabled}\r\n            style={{\r\n              width: props.width + \"vw\",\r\n              height: props.height + \"vh\",\r\n              color: \"black\"\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Field />\r\n    </>\r\n  );\r\n});\r\n","export const HtmlCreator = (props) => {\r\n  let keys = Object.keys(props.inputs);\r\n  let re = /,/gi;\r\n  let inputs = keys.map((e, i) => {\r\n    if (props.inputs[keys[i]].type === \"textarea\") {\r\n      return `<div class=\"wrapper-form-inputs-textarea\"><div class=\"textOfInputs\">${\r\n        props.inputs[keys[i]].name\r\n          ? `<label>${props.inputs[keys[i]].name}</label>`\r\n          : ``\r\n      }${\r\n        props.inputs[keys[i]].fieldDescription\r\n          ? `<p style=\"${\r\n              props.inputs[keys[i]].descriptionPosition === \"inline\"\r\n                ? \"display:inline\"\r\n                : \"\"\r\n            }\">${\r\n              props.inputs[keys[i]].descriptionPosition === \"inline\"\r\n                ? \"(\" + props.inputs[keys[i]].fieldDescription + \")\"\r\n                : props.inputs[keys[i]].fieldDescription\r\n            }</p>`\r\n          : \"\"\r\n      }\r\n      </div><textarea style=\"height:${props.inputs[keys[i]].height}vh;width:${\r\n        props.inputs[keys[i]].width\r\n      }vw;\" placeholder=\"${\r\n        props.inputs[keys[i]].placeholder\r\n      }\"></textarea></div>`;\r\n    } else if (props.inputs[keys[i]].type === \"checkbox\") {\r\n      return `<div class=\"wrapper-form-inputs\"><div style=\"display:grid;\r\n      grid-template-columns: 1fr 1fr;align-items: center;\" class=\"textOfInputs\">${\r\n        props.inputs[keys[i]].name\r\n          ? `<label>${props.inputs[keys[i]].name}</label>`\r\n          : ``\r\n      }\r\n      <input style=\"color:black;width:${props.inputs[keys[i]].width}vw;height:${\r\n        props.inputs[keys[i]].height\r\n      }vh\" placeholder=\"${props.inputs[keys[i]].placeholder}\" type=\"${\r\n        props.inputs[keys[i]].type\r\n      }\"/></div></div>`;\r\n    } else {\r\n      /************Остальное ****************/\r\n      return `<div class=\"wrapper-form-inputs\"><div class=\"textOfInputs\" >${\r\n        props.inputs[keys[i]].name\r\n          ? `<label>${props.inputs[keys[i]].name}</label>`\r\n          : ``\r\n      }${\r\n        props.inputs[keys[i]].fieldDescription\r\n          ? `<p style=\"${\r\n              props.inputs[keys[i]].descriptionPosition === \"inline\"\r\n                ? \"display:inline\"\r\n                : \"\"\r\n            }\">${\r\n              props.inputs[keys[i]].descriptionPosition === \"inline\"\r\n                ? \"(\" + props.inputs[keys[i]].fieldDescription + \")\"\r\n                : props.inputs[keys[i]].fieldDescription\r\n            }</p>`\r\n          : \"\"\r\n      }\r\n      </div><input style=\"color:black;width:${\r\n        props.inputs[keys[i]].width\r\n      }vw;height:${props.inputs[keys[i]].height}vh\" placeholder=\"${\r\n        props.inputs[keys[i]].placeholder\r\n      }\" type=\"${props.inputs[keys[i]].type}\"/></div>`;\r\n    }\r\n  });\r\n  inputs = String(inputs).replace(re, \"\\n\");\r\n  return `Html: \\n <div class=\"formBlock\">\\n<form class=\"form\" action=\"/\" method=\"Post\"/> \\n <h1 class=\"FormTitle\">${\r\n    props.title || \"Заголовок\"\r\n  }</h1> \\n <div class=\"wrapperOfInputsCreator\">${inputs}</div> \\n <button onclick=\"return false\">Отправить</button>\\n</form>\\n</div>\r\n   \\n CSS:\\n @import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,400;0,600;0,700;0,800;0,900;1,400;1,600;1,700;1,800;1,900&display=swap');\r\n    * {margin: 0;padding: 0;font-family: 'Nunito', sans-serif;} \r\n   input:not([type=\"color\"]) { padding-left: .2vw;}\r\n   input { border-radius: 5px;border-width: 1px; outline: none;}\r\n   .formBlock { background-color:${\r\n     props.generalBackgroundColor\r\n   };width: 100%;display: grid;justify-items: center;grid-gap: 2vw;} \r\n   .formBlock .form {text-align:center;margin-bottom: 2vw;font-size: 1.7vmin;height: -moz-fit-content;height: fit-content;padding: 2vw 3vw 2vw 3vw;grid-auto-rows: minmax(auto, 2vw);width:${\r\n     props.formWidth\r\n   }%;background-color:${props.formBackgroundColor};margin-top:${\r\n    props.formMarginTop\r\n  }vh}\r\n   .formBlock .form h1 {color:${\r\n     props.titleColor\r\n   };grid-column: 1/3;text-align: center;}\r\n   .formBlock .form button{cursor: pointer;width:${props.buttWidth}vw;height:${\r\n    props.buttHeight\r\n  }vh;color:${props.buttTextColor};background-color:${\r\n    props.buttColor\r\n  };outline: none;font-size: 0.9vw;border: none;margin-top: 2vw;transition: all ease 0.3s;}\r\n  .formBlock .form button:hover {border:1px solid;color:${\r\n    props.buttColor\r\n  };background-color:${props.formBackgroundColor}}\r\n  .formBlock .form .wrapperOfInputsCreator {display: grid;grid-gap: 3vw 5vw;grid-auto-rows: minmax(auto, auto);grid-template-columns: ${\r\n    props.numOfFields === 2 && props.labelsPosition === \"top\"\r\n      ? \"1fr 1fr\"\r\n      : \"1fr\"\r\n  };align-self: center;padding-top: 2vw;padding-bottom: 2vw; margin-bottom: 2vw;margin-top: 2vw;border-radius: .8vw;}\r\n   .formBlock .form .wrapperOfInputsCreator .wrapper-form-inputs-textarea{display: grid;text-align: left;grid-template-columns: 1fr;grid-column-start: 1;grid-column-end: ${\r\n     props.numOfFields === 2 && props.labelsPosition === \"top\" ? 3 : 2\r\n   };${\r\n    props.numOfFields === 2 && props.labelsPosition === \"top\"\r\n      ? \"justify-self: center;\"\r\n      : \"\"\r\n  }${\r\n    props.numOfFields === 1 && props.labelsPosition === \"top\"\r\n      ? \"justify-self: center;width: fit-content;\"\r\n      : \"width: 100%;margin-left:8vw;\"\r\n  }}\r\n  .formBlock .form .wrapperOfInputsCreator .textOfInputs{grid-gap: 1vw 1vw;align-self: center;}\r\n  .textOfInputs p{ color:${props.descriptionColor}}\r\n  .textOfInputs label {color:${props.textColor}}\r\n  .wrapper-form-inputs-textarea textarea {color:black;max-height: 18vh;min-height: 15vh;grid-column: 1/3;}\r\n  .formBlock .form .wrapperOfInputsCreator .wrapper-form-inputs {display: grid;text-align: left;${\r\n    props.labelsPosition === \"top\"\r\n      ? \"grid-template-columns: 1fr;justify-self: center;width: -moz-fit-content;width: fit-content;\"\r\n      : \"grid-template-columns: 1fr 1fr;width: 100%;\"\r\n  }}\r\n  `;\r\n};\r\n","import React from \"react\";\r\nimport { FormInput } from \"./FormInput\";\r\nimport { HtmlCreator } from \"./HtmlCreator\";\r\n\r\nexport let Form = React.memo((props) => {\r\n  let sub = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  if (props.inputs) {\r\n    let inputsKeys = Object.keys(props.inputs);\r\n    let InputsCreator = inputsKeys.map((e, i) => {\r\n      return (<FormInput key={i} labelsPosition={props.labelsPosition} i={i} numOfFields={props.numOfFields} type={props.inputs[inputsKeys[i]].type || \"text\"} name={props.inputs[inputsKeys[i]].name || \"\"} placeholder={props.inputs[inputsKeys[i]].placeholder || \"\"} fieldDescription={props.inputs[inputsKeys[i]].fieldDescription || \"\"} descriptionPosition={props.inputs[inputsKeys[i]].descriptionPosition || \"\"} width={props.inputs[inputsKeys[i]].width || 20} height={props.inputs[inputsKeys[i]].height || 5} descriptionColor={props.descriptionColor}/>);\r\n    });\r\n    return (\r\n      <>\r\n        <div className=\"formBlock\" style={{ backgroundColor: props.generalBackgroundColor }}>\r\n          <form onSubmit={sub} className=\"form\" style={{color: props.textColor, backgroundColor: props.formBackgroundColor, width: props.formWidth + \"%\", marginTop: props.formMarginTop + \"vh\"}}>\r\n            <h1 className=\"FormTitle\" style={{color: props.titleColor}}>{props.title || \"Заголовок\"}</h1>\r\n            <div className=\"wrapperOfInputsCreator\" style={{gridTemplateColumns: props.labelsPosition === \"left\" || props.numOfFields === 1 ? \"1fr\" : \"1fr 1fr\"}}>{InputsCreator}</div>\r\n            <button type=\"submit\" onMouseOver={props.changeStyles} onMouseLeave={props.revertStyles} style={{height: props.buttHeight + \"vh\", width: props.buttWidth + \"vw\", color: props.buttTextColor, backgroundColor: props.buttColor}}>\r\n              Отправить\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className={props.stateOfForm ? \"CodeBlock hidden\" : \"CodeBlock shown\"}>\r\n          <div className=\"Code\">\r\n            <p className=\"cancel\" onClick={props.changeState}>×</p>\r\n            <p style={{ whiteSpace: \"pre-line\" }}>\r\n              <HtmlCreator generalBackgroundColor={props.generalBackgroundColor} formBackgroundColor={props.formBackgroundColor} titleColor={props.titleColor} descriptionColor={props.descriptionColor}\r\n                textColor={props.textColor} buttColor={props.buttColor} buttTextColor={props.buttTextColor} formMarginTop={props.formMarginTop} formWidth={props.formWidth} buttHeight={props.buttHeight}\r\n                buttWidth={props.buttWidth} numOfFields={props.numOfFields} title={props.title} labelsPosition={props.labelsPosition} inputs={props.inputs}/>\r\n            </p>\r\n          </div>\r\n          <div onClick={props.changeState} className=\"modal\" />\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <form action=\"\" method=\"post\"/>\r\n      </>\r\n    );\r\n  }\r\n});\r\n","import { connect } from \"react-redux\";\r\nimport { Form } from \"./Form\";\r\nimport React from \"react\";\r\nimport { actions } from \"../../store/mainReducer\";\r\nimport {GlobalState} from \"../../store/store\";\r\ntype MapStateToPropsType=ReturnType<typeof MapStateToProps>;\r\ntype MapDispatchToPropsType={\r\n  ChangeStateOFFormAC:()=>void\r\n}\r\nlet MapStateToProps = (state:GlobalState) => {\r\n  return {\r\n    generalBackgroundColor: state.mainReducer.generalBackgroundColor,\r\n    inputs: state.mainReducer.inputs,\r\n    numOfFields: state.mainReducer.numOfFields,\r\n    buttHeight: state.mainReducer.buttHeight,\r\n    buttWidth: state.mainReducer.buttWidth,\r\n    formBackgroundColor: state.mainReducer.formBackgroundColor,\r\n    textColor: state.mainReducer.textColor,\r\n    buttTextColor: state.mainReducer.buttTextColor,\r\n    buttColor: state.mainReducer.buttColor,\r\n    stateOfForm: state.mainReducer.stateOfForm,\r\n    title: state.mainReducer.title,\r\n    titleColor: state.mainReducer.titleColor,\r\n    descriptionColor: state.mainReducer.descriptionColor,\r\n    formWidth: state.mainReducer.formWidth,\r\n    formMarginTop: state.mainReducer.formMarginTop,\r\n    labelsPosition: state.mainReducer.labelsPosition\r\n  };\r\n};\r\nlet FormHOC:React.FC<any> = (props) => {\r\n  let changeStyles = (e: any) => {\r\n    e.currentTarget.style.color = props.buttColor;\r\n    e.target.style.background = \"none\";\r\n  };\r\n  let revertStyles = (e:any) => {\r\n    e.target.style.color = props.buttTextColor;\r\n    e.target.style.background = props.buttColor;\r\n  };\r\n  return (\r\n    <Form\r\n      changeState={props.ChangeStateOFFormAC}\r\n      stateOfForm={props.stateOfForm}\r\n      revertStyles={revertStyles}\r\n      changeStyles={changeStyles}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport let FormContainer = connect<MapStateToPropsType,MapDispatchToPropsType,{},GlobalState>(MapStateToProps, { ChangeStateOFFormAC:actions.ChangeStateOFFormAC})(\r\n  FormHOC\r\n);\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDa } from \"./hooks\";\r\nexport let SeeingFields = React.memo((props) => {\r\n  let changeInputIndex = () => {\r\n    props.changeInput(props.index);\r\n  };\r\n\r\n  let { st, setSt } = useDa(props.index);\r\n  useEffect(() => {\r\n    setSt({ [props.index]: true });\r\n  }, [props.index, setSt]);\r\n  let DeleteField = async () => {\r\n    setSt({ [props.index]: !st[props.index] });\r\n    await setTimeout(() => {\r\n      props.ChangeDeleteFieldAC(props.index);\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        st[props.index] ? \"ItemsOfInputs shown\" : \"ItemsOfInputs hidden\"\r\n      }\r\n    >\r\n      <div>\r\n        <p>{props.inputs.name}</p>\r\n      </div>\r\n\r\n      <div className=\"IconsOfInputs\">\r\n        <FontAwesomeIcon onClick={DeleteField} icon=\"times\"></FontAwesomeIcon>\r\n      </div>\r\n\r\n      <div className=\"IconsOfInputs\">\r\n        <FontAwesomeIcon\r\n          onClick={changeInputIndex}\r\n          icon=\"cogs\"\r\n        ></FontAwesomeIcon>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport let useDa = (index) => {\r\n  const [st, setSt] = useState({ [index]: true });\r\n  return { st, setSt };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Radio } from \"antd\";\r\nexport let Field = React.memo((props) => {\r\n  useEffect(() => {\r\n    setPlaceholder(props.inputs.placeholder || \"\");\r\n    setTypeOfInput(props.inputs.type || \"text\");\r\n    setName(props.inputs.name || \"\");\r\n    setFieldDescription(props.inputs.fieldDescription || \"\");\r\n    setDescriptionPosition(props.inputs.descriptionPosition || \"bottom\");\r\n    setHeight(props.inputs.height || 5);\r\n    setWidth(props.inputs.width || 20);\r\n    setSize(props.inputs.height || 5);\r\n  }, [\r\n    props.inputs.placeholder,\r\n    props.inputs.type,\r\n    props.inputs.name,\r\n    props.inputs.fieldDescription,\r\n    props.inputs.descriptionPosition,\r\n    props.inputs.height,\r\n    props.inputs,\r\n    props.inputs.width\r\n  ]);\r\n  let [typeOfInput, setTypeOfInput] = useState(\"\");\r\n  let [placeholder, setPlaceholder] = useState(\"\");\r\n  let [name, setName] = useState(\"\");\r\n  let [fieldDescription, setFieldDescription] = useState(\"\");\r\n  let [descriptionPosition, setDescriptionPosition] = useState(\"\");\r\n  let [width, setWidth] = useState(\"\");\r\n  let [height, setHeight] = useState(\"\");\r\n  let [size, setSize] = useState(\"\");\r\n  let handler = (e) => {\r\n    e.target.name === \"type\" + props.index\r\n      ? setTypeOfInput(e.target.value)\r\n      : e.target.name === \"placeholder\"\r\n      ? setPlaceholder(e.target.value)\r\n      : e.target.name === \"fieldDescription\"\r\n      ? setFieldDescription(e.target.value)\r\n      : e.target.name === \"size\"\r\n      ? setSize(e.target.value)\r\n      : e.target.name === \"descriptionPosition\"\r\n      ? setDescriptionPosition(e.target.value)\r\n      : e.target.name === \"width\"\r\n      ? e.target.value > 100\r\n        ? setWidth(100)\r\n        : e.target.value <= 0\r\n        ? setWidth(1)\r\n        : setWidth(e.target.value)\r\n      : e.target.name === \"height\"\r\n      ? e.target.value > 100\r\n        ? setHeight(100)\r\n        : e.target.value <= 0\r\n        ? setHeight(1)\r\n        : setHeight(e.target.value)\r\n      : setName(e.target.value);\r\n  };\r\n\r\n  let butHandler = () => {\r\n    let data = {\r\n      name,\r\n      placeholder,\r\n      type:typeOfInput,\r\n      fieldDescription,\r\n      descriptionPosition,\r\n      width: typeOfInput === \"checkbox\" ? size : width,\r\n      height: typeOfInput === \"checkbox\" ? size : height\r\n    };\r\n    props.process(data, props.index);\r\n    props.changeInput(\"\");\r\n  };\r\n  let changeInputHandler = () => {\r\n    props.changeInput(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"fields\">\r\n        <h2>Настройки поля</h2>\r\n        <label>\r\n          Название поля\r\n          <input\r\n            name=\"name\"\r\n            onChange={handler}\r\n            value={name}\r\n            placeholder=\"Название поля\"\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Placeholder поля\r\n          <input\r\n            name=\"placeholder\"\r\n            onChange={handler}\r\n            value={placeholder}\r\n            placeholder=\"placeholder поля\"\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <br />\r\n        {typeOfInput === \"checkbox\" ? (\r\n          <>\r\n            <label>\r\n              Размер поля\r\n              <input\r\n                name=\"size\"\r\n                onChange={handler}\r\n                value={size}\r\n                placeholder=\"Размер поля\"\r\n                type=\"number\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"99.9\"\r\n              />\r\n              vw\r\n            </label>\r\n            <br />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <label>\r\n              Ширина поля\r\n              <input\r\n                name=\"width\"\r\n                onChange={handler}\r\n                value={width}\r\n                placeholder=\"Ширина поля\"\r\n                type=\"number\"\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"99.9\"\r\n              />\r\n              vw\r\n            </label>\r\n            <label>\r\n              Высота поля\r\n              <input\r\n                name=\"height\"\r\n                onChange={handler}\r\n                step=\"0.1\"\r\n                min=\"0.1\"\r\n                max=\"99.9\"\r\n                value={height}\r\n                placeholder=\"Высота поля\"\r\n                type=\"number\"\r\n              />\r\n              vh\r\n            </label>\r\n            <br />\r\n          </>\r\n        )}\r\n\r\n        <label>Описание поля</label>\r\n        <input\r\n          name=\"fieldDescription\"\r\n          onChange={handler}\r\n          value={fieldDescription}\r\n          placeholder=\"Описание поля\"\r\n          type=\"text\"\r\n        />\r\n        <Radio.Button\r\n          name=\"descriptionPosition\"\r\n          onChange={handler}\r\n          checked={descriptionPosition === \"bottom\" ? true : false}\r\n          value=\"bottom\"\r\n        >\r\n          Снизу\r\n        </Radio.Button>\r\n        <Radio.Button\r\n          name=\"descriptionPosition\"\r\n          checked={descriptionPosition === \"inline\" ? true : false}\r\n          onChange={handler}\r\n          value=\"inline\"\r\n        >\r\n          Справа\r\n        </Radio.Button>\r\n        <br />\r\n        <div className=\"typeOFieldBlock\">\r\n          <label>Тип поля</label>\r\n          <div className=\"typeOField\">\r\n            <Radio.Button\r\n              id={\"textarea\" + props.index}\r\n              name={\"type\" + props.index}\r\n              value=\"textarea\"\r\n              onChange={handler}\r\n              checked={typeOfInput === \"textarea\" ? true : false}\r\n            >\r\n              Textarea\r\n            </Radio.Button>\r\n            <Radio.Button\r\n              id={\"input\" + props.index}\r\n              name={\"type\" + props.index}\r\n              value=\"text\"\r\n              onChange={handler}\r\n              checked={typeOfInput === \"text\" ? true : false}\r\n            >\r\n              Input\r\n            </Radio.Button>\r\n            <Radio.Button\r\n              id={\"flag\" + props.index}\r\n              name={\"type\" + props.index}\r\n              value=\"checkbox\"\r\n              onChange={handler}\r\n              checked={typeOfInput === \"checkbox\" ? true : false}\r\n            >\r\n              Checkbox\r\n            </Radio.Button>\r\n            <Radio.Button\r\n              id={\"file\" + props.index}\r\n              name={\"type\" + props.index}\r\n              value=\"file\"\r\n              onChange={handler}\r\n              checked={typeOfInput === \"file\" ? true : false}\r\n            >\r\n              File\r\n            </Radio.Button>\r\n            <Radio.Button\r\n              id={\"password\" + props.index}\r\n              name={\"type\" + props.index}\r\n              value=\"password\"\r\n              onChange={handler}\r\n              checked={typeOfInput === \"password\" ? true : false}\r\n            >\r\n              Password\r\n            </Radio.Button>\r\n            <Radio.Button\r\n              id={\"email\" + props.index}\r\n              name={\"type\" + props.index}\r\n              value=\"email\"\r\n              onChange={handler}\r\n              checked={typeOfInput === \"email\" ? true : false}\r\n            >\r\n              Email\r\n            </Radio.Button>\r\n          </div>\r\n        </div>\r\n        <button onClick={butHandler}>Сохранить</button>\r\n        <button onClick={changeInputHandler}>Отменить</button>\r\n      </div>\r\n      <div onClick={changeInputHandler} className=\"modal\" />\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Field } from \"./Field\";\r\nimport { Radio } from \"antd\";\r\nexport const DataFilling = React.memo((props) => {\r\n  return (\r\n    <div className=\"dataFilling\">\r\n      <div className=\"dataFillingBlock\">\r\n        <label>Заголовок формы</label>\r\n        <input\r\n          value={props.title}\r\n          name=\"title\"\r\n          placeholder=\"Заголовок\"\r\n          onChange={props.check}\r\n        />\r\n        <br />\r\n        <label>Выберете фон формы</label>\r\n        <input\r\n          value={props.formBackgroundColor}\r\n          onChange={props.check}\r\n          name=\"formBackgroundColor\"\r\n          type=\"color\"\r\n        />\r\n        <label>Выберете цвет общего фона</label>\r\n        <input\r\n          value={props.generalBackgroundColor}\r\n          onChange={props.check}\r\n          name=\"generalBackgroundColor\"\r\n          type=\"color\"\r\n        />\r\n        <label>Выберете цвет кнопки</label>\r\n        <input\r\n          value={props.buttColor}\r\n          onChange={props.check}\r\n          name=\"buttColor\"\r\n          type=\"color\"\r\n        />\r\n        <label>Выберете цвет текста кнопки</label>\r\n        <input\r\n          value={props.buttTextColor}\r\n          onChange={props.check}\r\n          name=\"buttTextColor\"\r\n          type=\"color\"\r\n        />\r\n        <label>Выберете цвет заголовка </label>\r\n        <input\r\n          value={props.titleColor}\r\n          onChange={props.check}\r\n          name=\"titleColor\"\r\n          type=\"color\"\r\n        />\r\n        <label>Выберете цвет текста </label>\r\n        <input\r\n          value={props.textColor}\r\n          onChange={props.check}\r\n          name=\"textColor\"\r\n          type=\"color\"\r\n        />\r\n        <label>Выберете цвет описания поля</label>\r\n        <input\r\n          value={props.descriptionColor}\r\n          onChange={props.check}\r\n          name=\"descriptionColor\"\r\n          type=\"color\"\r\n        />\r\n        <br />\r\n        <label>Ширина формы</label>\r\n        <input\r\n          value={props.formWidth}\r\n          onChange={props.check}\r\n          name=\"formWidth\"\r\n          type=\"number\"\r\n        />\r\n        %\r\n        <br />\r\n        <label>Отступ сверху</label>\r\n        <input\r\n          value={props.formMarginTop}\r\n          onChange={props.check}\r\n          name=\"formMarginTop\"\r\n          type=\"number\"\r\n        />\r\n        vh\r\n        <br />\r\n        <label>Ширина кнопки</label>\r\n        <input\r\n          value={props.buttWidth}\r\n          onChange={props.check}\r\n          name=\"buttWidth\"\r\n          type=\"number\"\r\n        />\r\n        vw\r\n        <br />\r\n        <label>Высота кнопки</label>\r\n        <input\r\n          value={props.buttHeight}\r\n          onChange={props.check}\r\n          name=\"buttHeight\"\r\n          type=\"number\"\r\n        />\r\n        vh\r\n        <br />\r\n        <label>Положение названия поля</label>\r\n        <Radio.Button\r\n          name=\"labelsPosition\"\r\n          onChange={props.check}\r\n          checked={props.labelsPosition === \"top\" ? true : false}\r\n          value=\"top\"\r\n        >\r\n          Сверху\r\n        </Radio.Button>\r\n        <Radio.Button\r\n          name=\"labelsPosition\"\r\n          checked={props.labelsPosition === \"left\" ? true : false}\r\n          onChange={props.check}\r\n          value=\"left\"\r\n        >\r\n          Слева\r\n        </Radio.Button>\r\n        <br />\r\n        <div className={props.labelsPosition === \"left\" ? \"hidden\" : \"shown\"}>\r\n          <label>Количество полей в строке</label>\r\n          <input\r\n            value={props.numOfFields}\r\n            name=\"numOfFields\"\r\n            placeholder=\"Полей в строке\"\r\n            onChange={props.check}\r\n            type=\"number\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div className=\"blockItemsOfInputs\">{props.InputsMaker}</div>\r\n        <button name=\"count\" onClick={props.check}>\r\n          Добавить поле\r\n        </button>\r\n        <div\r\n          className={\r\n            props.selectedInput ? \" FieldsBlock shown\" : \"FieldsBlock hidden\"\r\n          }\r\n        >\r\n          {props.inputs[props.selectedInput] ? (\r\n            <Field\r\n              changeInput={props.changeInput}\r\n              inputs={props.inputs[props.selectedInput]}\r\n              process={props.process}\r\n              index={props.selectedInput}\r\n            ></Field>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        <br />\r\n        <button onClick={props.changeState}>Получить код</button>\r\n        <br />\r\n        <button onClick={props.saveFormHandler}>Сохранить</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n    actions, SaveThunk\r\n} from \"../../store/mainReducer\";\r\nimport { actions as authActions} from \"../../store/authReducer\";\r\nimport { SeeingFields } from \"./SeeingFields\";\r\nimport { DataFilling } from \"./DataFilling\";\r\nimport React from \"react\";\r\nlet MapStateToProps = (state) => {\r\n  return {\r\n    state: state.mainReducer,\r\n    formBackgroundColor: state.mainReducer.formBackgroundColor,\r\n    titleColor: state.mainReducer.titleColor,\r\n    descriptionColor: state.mainReducer.descriptionColor,\r\n    generalBackgroundColor: state.mainReducer.generalBackgroundColor,\r\n    buttHeight: state.mainReducer.buttHeight,\r\n    buttWidth: state.mainReducer.buttWidth,\r\n    numOfFields: state.mainReducer.numOfFields,\r\n    inputs: state.mainReducer.inputs,\r\n    textColor: state.mainReducer.textColor,\r\n    labelsPosition: state.mainReducer.labelsPosition,\r\n    isFillingVision: state.mainReducer.isFillingVision,\r\n    buttTextColor: state.mainReducer.buttTextColor,\r\n    buttColor: state.mainReducer.buttColor,\r\n    title: state.mainReducer.title,\r\n    formWidth: state.mainReducer.formWidth,\r\n    formMarginTop: state.mainReducer.formMarginTop,\r\n    selectedInput: state.mainReducer.selectedInput,\r\n    isAuth: state.authReducer.isAuth,\r\n    token: state.authReducer.token\r\n  };\r\n};\r\n\r\nlet DataFillingBlock = (props) => {\r\n  let check = (e) => {\r\n    e.target.name === \"title\"\r\n      ? props.ChangeTitleAC(e.target.value)\r\n      : e.target.name === \"numOfFields\"\r\n      ? props.ChangeNumOfFieldsAC(e.target.value)\r\n      : e.target.name === \"labelsPosition\"\r\n      ? props.ChangeLabelsPositionAC(e.target.value)\r\n      : e.target.name === \"generalBackgroundColor\"\r\n      ? props.ChangeGeneralBackgroundColorAC(e.target.value)\r\n      : e.target.name === \"formBackgroundColor\"\r\n      ? props.ChangeFormBackgroundColorAC(e.target.value)\r\n      : e.target.name === \"buttColor\"\r\n      ? props.ChangeButtColorAC(e.target.value)\r\n      : e.target.name === \"buttTextColor\"\r\n      ? props.ChangeButtTextColorAC(e.target.value)\r\n      : e.target.name === \"formWidth\"\r\n      ? props.ChangeFormWidthAC(e.target.value)\r\n      : e.target.name === \"formMarginTop\"\r\n      ? props.ChangeFormMarginTopAC(e.target.value)\r\n      : e.target.name === \"titleColor\"\r\n      ? props.ChangeTitleColorAC(e.target.value)\r\n      : e.target.name === \"descriptionColor\"\r\n      ? props.ChangeDescriptionColorAC(e.target.value)\r\n      : e.target.name === \"buttTextColor\"\r\n      ? props.ChangeButtTextColorAC(e.target.value)\r\n      : e.target.name === \"textColor\"\r\n      ? props.ChangeTextColorAC(e.target.value)\r\n      : e.target.name === \"buttHeight\"\r\n      ? props.ChangeButtHeightAC(e.target.value)\r\n      : e.target.name === \"buttWidth\"\r\n      ? props.ChangeButtWidthAC(e.target.value)\r\n      : props.ChangeAddFieldAC();\r\n  };\r\n  let process = (data, index) => {\r\n    props.ChangeInputsAC(data, index);\r\n  };\r\n  let changeInput = (index) => {\r\n    props.ChangeSelectedInputAC(index);\r\n  };\r\n  let saveFormHandler = async () => {\r\n    let data = {\r\n      generalBackgroundColor: props.generalBackgroundColor,\r\n      formBackgroundColor: props.formBackgroundColor,\r\n      titleColor: props.titleColor,\r\n      descriptionColor: props.descriptionColor,\r\n      formWidth: props.formWidth,\r\n      formMarginTop: props.formMarginTop,\r\n      buttHeight: props.buttHeight,\r\n      buttWidth: props.buttWidth,\r\n      textColor: props.textColor,\r\n      buttColor: props.buttColor,\r\n      buttTextColor: props.buttTextColor,\r\n      title: props.title,\r\n      labelsPosition: props.labelsPosition,\r\n      numOfFields: props.numOfFields,\r\n      inputs: props.inputs\r\n    };\r\n    props.SaveThunk(data, props.token);\r\n  };\r\n  let inputsKeys = Object.keys(props.inputs);\r\n\r\n  let InputsMaker = inputsKeys.map((val, i) => (\r\n    <SeeingFields\r\n      changeInput={changeInput}\r\n      inputs={props.inputs[inputsKeys[i]]}\r\n      index={inputsKeys[i]}\r\n      ChangeDeleteFieldAC={props.ChangeDeleteFieldAC}\r\n      key={i}\r\n    />\r\n  ));\r\n  return (\r\n    <DataFilling\r\n      generalBackgroundColor={props.generalBackgroundColor}\r\n      formBackgroundColor={props.formBackgroundColor}\r\n      titleColor={props.titleColor}\r\n      descriptionColor={props.descriptionColor}\r\n      textColor={props.textColor}\r\n      buttColor={props.buttColor}\r\n      buttTextColor={props.buttTextColor}\r\n      formMarginTop={props.formMarginTop}\r\n      formWidth={props.formWidth}\r\n      ChangeFillingVisionAC={props.ChangeFillingVisionAC}\r\n      changeState={props.ChangeStateOFFormAC}\r\n      changeInput={changeInput}\r\n      check={check}\r\n      buttHeight={props.buttHeight}\r\n      buttWidth={props.buttWidth}\r\n      saveFormHandler={saveFormHandler}\r\n      numOfFields={props.numOfFields}\r\n      process={process}\r\n      selectedInput={props.selectedInput}\r\n      inputs={props.inputs}\r\n      isFillingVision={props.isFillingVision}\r\n      title={props.title}\r\n      labelsPosition={props.labelsPosition}\r\n      InputsMaker={InputsMaker}\r\n    />\r\n  );\r\n};\r\n\r\nexport let DataFillingContainer = connect(MapStateToProps, {\r\n  ChangeFillingVisionAC:actions.ChangeFillingVisionAC,\r\n  ChangeStateOFFormAC:actions.ChangeStateOFFormAC,\r\n  ChangeAddFieldAC:actions.ChangeAddFieldAC,\r\n  ChangeSelectedInputAC:actions.ChangeSelectedInputAC,\r\n  ChangeInputsAC:actions.ChangeInputsAC,\r\n  ChangeLabelsPositionAC:actions.ChangeLabelsPositionAC,\r\n  userTemplatesAC:authActions.userTemplatesAC,\r\n  SaveThunk,\r\n  ChangeDeleteFieldAC:actions.ChangeDeleteFieldAC,\r\n  ChangeNumOfFieldsAC:actions.ChangeNumOfFieldsAC,\r\n  ChangeTitleAC:actions.ChangeTitleAC,\r\n  ChangeButtHeightAC:actions.ChangeButtHeightAC,\r\n  ChangeButtWidthAC:actions.ChangeButtWidthAC,\r\n  ChangeFormBackgroundColorAC:actions.ChangeFormBackgroundColorAC,\r\n  ChangeGeneralBackgroundColorAC:actions.ChangeGeneralBackgroundColorAC,\r\n  ChangeTextColorAC:actions.ChangeTextColorAC,\r\n  ChangeButtTextColorAC:actions.ChangeButtTextColorAC,\r\n  ChangeDescriptionColorAC:actions.ChangeDescriptionColorAC,\r\n  ChangeTitleColorAC:actions.ChangeTitleColorAC,\r\n  ChangeButtColorAC:actions.ChangeButtColorAC,\r\n  ChangeFormMarginTopAC:actions.ChangeFormMarginTopAC,\r\n  ChangeFormWidthAC:actions.ChangeFormWidthAC\r\n})(DataFillingBlock);\r\n","import React from \"react\";\r\nexport let MiniHeader = React.memo((props) => {\r\n  let handler = (e) => {\r\n    props.stateOfHeaderAC(e.target.getAttribute(\"name\"));\r\n  };\r\n  return (\r\n    <div className=\"mini-header\">\r\n      <div\r\n        className={\r\n          props.stateOfHeader === 1\r\n            ? \"slider-1 slider\"\r\n            : props.stateOfHeader === 2\r\n            ? \"slider-2 slider\"\r\n            : \"slider-3 slider\"\r\n        }\r\n      ></div>\r\n      <div>\r\n        <p name=\"1\" onClick={handler}>\r\n          Шаблоны\r\n        </p>\r\n        <div></div>\r\n      </div>\r\n      <div>\r\n        <p name=\"2\" onClick={handler}>\r\n          Настройки\r\n        </p>\r\n        <div></div>\r\n      </div>\r\n      <div style={{ backgroundColor: props.isAuth ? \"\" : \"#c2c1c0\" }}>\r\n        <button\r\n          name=\"3\"\r\n          disabled={props.isAuth ? false : true}\r\n          onClick={handler}\r\n          style={{ cursor: props.isAuth ? \"pointer\" : \"not-allowed\" }}\r\n        >\r\n          Пользовательские <br /> шаблоны\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nexport let Templates = React.memo((props) => {\r\n  let handler = () => {\r\n    props.ApplyTemplateAC(props.template);\r\n  };\r\n  return (\r\n    <div className=\"Template\">\r\n      <h3>{props.template.settings.nameOfTemplate}</h3>\r\n      <img onClick={handler} src={props.template.settings.image} alt=\"lorem\" />\r\n      <br />\r\n      <button onClick={handler}>\r\n        {props.template.settings.nameOfTemplate}\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nexport let Filter = React.memo((props) => {\r\n  let options = [\r\n    \"Форма обратной связи\",\r\n    \"Подписка на рассылку\",\r\n    \"Заказ звонка\",\r\n    \"Оформление заказа\"\r\n  ];\r\n  let optionsWrapper = options.map((e, i) => {\r\n    return (\r\n      <div key={i}>\r\n        <input type={\"checkbox\"} onClick={props.handler} id={e} name={e} />\r\n        <label htmlFor={e}>{e}</label>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"filter\">\r\n      <div onClick={props.VisionFilter}>Фильтр</div>\r\n      <div\r\n        className={\r\n          !props.isFilterVision ? \"filterBoxes hidden \" : \"filterBoxes shown \"\r\n        }\r\n      >\r\n        {optionsWrapper}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../store/mainReducer\";\r\nimport { Filter } from \"./filter\";\r\nimport React from \"react\";\r\n\r\nlet MapStateToProps = (state) => ({\r\n  templates: state.mainReducer.templates,\r\n  filters: state.mainReducer.filters,\r\n  isFilterVision: state.mainReducer.isFilterVision\r\n});\r\nlet FilterBlock = (props) => {\r\n  let VisionFilter = () => {\r\n    props.ChangeIsFilterVision();\r\n  };\r\n  let handler = (e) => {\r\n    props.FiltersAC(e.target.name);\r\n  };\r\n  return (\r\n    <Filter\r\n      filters={props.filters}\r\n      handler={handler}\r\n      isFilterVision={props.isFilterVision}\r\n      VisionFilter={VisionFilter}\r\n    />\r\n  );\r\n};\r\nexport let FilterContainer = connect(MapStateToProps, {\r\n  FiltersAC:actions.FiltersAC,\r\n  ChangeIsFilterVision:actions.ChangeIsFilterVision\r\n})(FilterBlock);\r\n","import { createSelector } from \"reselect\";\r\nimport {GlobalState} from \"../../store/store\";\r\nlet getTemplates = (state:GlobalState) => {\r\n  return state.mainReducer.templates;\r\n};\r\nlet getFilters = (state:GlobalState) => {\r\n  return state.mainReducer.filters;\r\n};\r\nexport let TemplateSelector = createSelector(\r\n  getTemplates,\r\n  getFilters,\r\n  (templates, filters) => {\r\n    if (filters[0]) {\r\n      return templates.filter((e) => {\r\n        return filters.indexOf(e.settings.group) > -1\r\n      })\r\n    } else {\r\n     return templates\r\n    }\r\n  }\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { actions} from \"../../store/mainReducer\";\r\nimport { Templates } from \"./templates\";\r\nimport { FilterContainer } from \"./filterContainer\";\r\nimport { TemplateSelector } from \"../selectors/templateSelector\";\r\nimport React from \"react\";\r\nlet MapStateToProps = (state) => ({\r\n  templates: TemplateSelector(state),\r\n  isFilterVision: state.mainReducer.isFilterVision\r\n});\r\nlet TemplatesBlock = (props) => {\r\n  let templateKeys = Object.keys(props.templates);\r\n\r\n  let TemplatesMaker = templateKeys.map((e, i) => (\r\n    <Templates\r\n      key={i}\r\n      ApplyTemplateAC={props.ApplyTemplateAC}\r\n      template={props.templates[templateKeys[i]]}\r\n    />\r\n  ));\r\n  return (\r\n    <>\r\n      <FilterContainer />\r\n      <div\r\n        className={\r\n          props.isFilterVision ? \"Templates-box openedFilter\" : \"Templates-box\"\r\n        }\r\n      >\r\n        {TemplatesMaker}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport let TemplatesContainer = connect(MapStateToProps, {\r\n  ApplyTemplateAC:actions.ApplyTemplateAC\r\n})(TemplatesBlock);\r\n","import { FormInput } from \"./FormInput\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nexport let PersonalTemplatesCreator = React.memo((props) => {\r\n  let Cancel = () => {\r\n    props.DeleteTemplateThunk(props.index);\r\n  };\r\n  let handler = () => {\r\n    let template = {\r\n      fields: props.template.inputs,\r\n      settings: {\r\n        buttColor: props.template.buttColor,\r\n        buttHeight: props.template.buttHeight,\r\n        buttTextColor: props.template.buttTextColor,\r\n        buttWidth: props.template.buttWidth,\r\n        descriptionColor: props.template.descriptionColor,\r\n        formBackgroundColor: props.template.formBackgroundColor,\r\n        labelsPosition: props.template.labelsPosition,\r\n        numOfFields: props.template.numOfFields,\r\n        textColor: props.template.textColor,\r\n        title: props.template.title,\r\n        titleColor: props.template.titleColor,\r\n        generalBackgroundColor: props.template.generalBackgroundColor,\r\n        formMarginTop: props.template.formMarginTop,\r\n        formWidth: props.template.formWidth\r\n      }\r\n    };\r\n    props.ApplyTemplateAC(template);\r\n  };\r\n  let inputsKeys = Object.keys(props.template.inputs);\r\n  let InputsCreator = inputsKeys.map((e, i) => {\r\n    return (\r\n      <FormInput\r\n        key={i}\r\n        labelsPosition={props.template.labelsPosition}\r\n        i={i}\r\n        numOfFields={props.template.numOfFields}\r\n        type={props.template.inputs[inputsKeys[i]].type || \"text\"}\r\n        name={props.template.inputs[inputsKeys[i]].name || \"\"}\r\n        placeholder={props.template.inputs[inputsKeys[i]].placeholder || \"\"}\r\n        fieldDescription={\r\n          props.template.inputs[inputsKeys[i]].fieldDescription || \"\"\r\n        }\r\n        disabled={true}\r\n        width={props.template.inputs[inputsKeys[i]].width / 3 || 3}\r\n        height={props.template.inputs[inputsKeys[i]].height / 3 || 3}\r\n        descriptionPosition={\r\n          props.template.inputs[inputsKeys[i]].descriptionPosition || \"\"\r\n        }\r\n        descriptionColor={props.template.descriptionColor}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        border: \".2vw solid #65ccbc\",\r\n        display: \"grid\",\r\n        margin: \"0 .5vw 0 .5vw\"\r\n      }}\r\n    >\r\n      <div className=\"deleteTemplate\">\r\n        <FontAwesomeIcon icon=\"times\" onClick={Cancel}></FontAwesomeIcon>\r\n      </div>\r\n      <div\r\n        className=\"personalFormBlock\"\r\n        onClick={handler}\r\n        style={{ backgroundColor: props.template.generalBackgroundColor }}\r\n      >\r\n        <div\r\n          className=\"form\"\r\n          style={{\r\n            color: props.template.textColor,\r\n            backgroundColor: props.template.formBackgroundColor,\r\n            width: props.template.formWidth / 3 + \"vw\",\r\n            marginTop: \"5%\",\r\n            marginBottom: \"5%\"\r\n          }}\r\n        >\r\n          <h1\r\n            className=\"FormTitle\"\r\n            style={{\r\n              color: props.template.titleColor\r\n            }}\r\n          >\r\n            {props.template.title || \"Заголовок\"}\r\n          </h1>\r\n          <div\r\n            className=\"wrapperOfInputsCreator\"\r\n            style={{\r\n              gridTemplateColumns:\r\n                props.template.labelsPosition === \"left\" ||\r\n                props.template.numOfFields === 1\r\n                  ? \"1fr\"\r\n                  : \"1fr 1fr\"\r\n            }}\r\n          >\r\n            {InputsCreator}\r\n          </div>\r\n          <button\r\n            disabled\r\n            onMouseOver={props.template.changeStyles}\r\n            onMouseLeave={props.template.revertStyles}\r\n            style={{\r\n              height: 4 + \"vh\",\r\n              width: 9 + \"vw\",\r\n              color: props.template.buttTextColor,\r\n              backgroundColor: props.template.buttColor\r\n            }}\r\n          >\r\n            Отправить\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { PersonalTemplatesCreator } from \"./personalTemplatesCreator\";\r\nexport const PersonalTemplates = React.memo((props) => {\r\n  let templateKeys = Object.keys(props.userTemplates);\r\n\r\n  let userTemplatesMaker = templateKeys.map((e, i) => {\r\n    return (\r\n      <PersonalTemplatesCreator\r\n        key={e}\r\n        index={i}\r\n        template={props.userTemplates[e]}\r\n        DeleteTemplateThunk={props.DeleteTemplateThunk}\r\n        ApplyTemplateAC={props.ApplyTemplateAC}\r\n      ></PersonalTemplatesCreator>\r\n    );\r\n  });\r\n  if (props.userTemplates[0]) {\r\n    return <div className=\"personalTemplatesBlock\">{userTemplatesMaker}</div>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <p>У вас пока нет шаблонов</p>\r\n      </>\r\n    );\r\n  }\r\n});\r\n","import { connect } from \"react-redux\";\r\nimport { PersonalTemplates } from \"./personalTemplates\";\r\nimport {\r\n  actions,\r\n  DeleteTemplateThunk\r\n} from \"../../store/mainReducer\";\r\nimport React from \"react\";\r\nlet MapStateToProps = (state) => {\r\n  return {\r\n    state: state.mainReducer,\r\n    userTemplates: state.authReducer.userTemplates\r\n  };\r\n};\r\nlet PersonalTemplatess = (props) => {\r\n  return (\r\n    <>\r\n      <PersonalTemplates {...props} />\r\n    </>\r\n  );\r\n};\r\nexport let PersonalTemplatesContainer = connect(MapStateToProps, {\r\n  ApplyTemplateAC:actions.ApplyTemplateAC,\r\n  DeleteTemplateThunk\r\n})(PersonalTemplatess);\r\n","import React from \"react\";\r\nimport { DataFillingContainer } from \"./DataFillingContainer\";\r\nimport { MiniHeader } from \"./miniHeader\";\r\nimport { TemplatesContainer } from \"./templatesContainer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { PersonalTemplatesContainer } from \"./personalTemplatesContainer\";\r\nexport let MiniHeaderSwitch = React.memo((props) => {\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={props.ChangeFillingVisionAC}\r\n        className={\r\n          props.isFillingVision ? \"icon-angles-shown\" : \"icon-angles-hidden\"\r\n        }\r\n      >\r\n        <FontAwesomeIcon\r\n          className=\"icon-left\"\r\n          icon={\r\n            props.isFillingVision ? \"angle-double-right\" : \"angle-double-left\"\r\n          }\r\n          size=\"lg\"\r\n        />\r\n      </div>\r\n      <MiniHeader\r\n        stateOfHeader={props.stateOfHeader}\r\n        isAuth={props.isAuth}\r\n        stateOfHeaderAC={props.stateOfHeaderAC}\r\n      ></MiniHeader>\r\n      {props.stateOfHeader === 1 ? (\r\n        <TemplatesContainer></TemplatesContainer>\r\n      ) : props.stateOfHeader === 2 ? (\r\n        <DataFillingContainer></DataFillingContainer>\r\n      ) : props.stateOfHeader === 3 ? (\r\n        <PersonalTemplatesContainer></PersonalTemplatesContainer>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n","import { connect } from \"react-redux\";\r\nimport { stateOfHeaderAC } from \"../../store/menuReducer\";\r\nimport { MiniHeaderSwitch } from \"./MiniHeaderSwitch\";\r\nimport { actions } from \"../../store/mainReducer\";\r\nlet MapStateToProps = (state) => ({\r\n  stateOfHeader: state.menuReducer.stateOfHeader,\r\n  isFillingVision: state.mainReducer.isFillingVision,\r\n  isAuth: state.authReducer.isAuth\r\n});\r\nexport let MiniHeaderSwitchContainer = connect(MapStateToProps, {\r\n  stateOfHeaderAC,\r\n  ChangeFillingVisionAC:actions.ChangeFillingVisionAC\r\n})(MiniHeaderSwitch);\r\n","import React from \"react\";\r\nimport { FormContainer } from \"./main-components/FormContainer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { MiniHeaderSwitchContainer } from \"./main-components/MiniHeaderSwitchContainer\";\r\ntype props={\r\n    isFillingVision:boolean,\r\n    generalBackgroundColor:string,\r\n    ChangeFillingVisionAC:()=>void\r\n}\r\nexport const Main:React.FC<props> = React.memo((props) => {\r\n    return (\r\n        <>\r\n            <div\r\n                onClick={props.ChangeFillingVisionAC}\r\n                className={\r\n                    props.isFillingVision ? \"icon-angles-shown\" : \"icon-angles-hidden\"\r\n                }\r\n            >\r\n                <FontAwesomeIcon\r\n                    className=\"icon-left\"\r\n                    icon={\r\n                        props.isFillingVision ? \"angle-double-right\" : \"angle-double-left\"\r\n                    }\r\n                    size=\"lg\"\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"output-closed-body\"\r\n                style={{backgroundColor: props.generalBackgroundColor}}\r\n            >\r\n                <div\r\n                    className={\r\n                        props.isFillingVision ? \"output-closed-s\" : \"output-opened-ss\"\r\n                    }\r\n                >\r\n                    <FormContainer/>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={\r\n                    props.isFillingVision ? \"input-closed-sss\" : \"input-opened-ssss\"\r\n                }\r\n            >\r\n                <MiniHeaderSwitchContainer/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { Main } from \"./Main\";\r\nimport { actions } from \"../store/mainReducer\";\r\nimport {GlobalState} from \"../store/store\";\r\ntype MapStateToPropsType={\r\n  isFillingVision:boolean,\r\n  generalBackgroundColor:string\r\n}\r\ntype MapDispatchToPropsType={\r\n  ChangeFillingVisionAC:()=>void\r\n}\r\nlet MapStateToProps = (state:GlobalState):MapStateToPropsType => ({\r\n  isFillingVision: state.mainReducer.isFillingVision,\r\n  generalBackgroundColor: state.mainReducer.generalBackgroundColor\r\n});\r\nexport let MainContainer = connect<MapStateToPropsType,MapDispatchToPropsType,{},GlobalState>(MapStateToProps, { ChangeFillingVisionAC:actions.ChangeFillingVisionAC })(\r\n  Main\r\n);\r\n","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React, { useState } from \"react\";\r\nimport { Input } from \"../contact/input\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {valuesRegistrationType} from \"./registrationContainer\";\r\nlet Registrations:React.FC<InjectedFormProps<valuesRegistrationType,{}>&{}> = React.memo((props) => {\r\n  let [passVision, SetPassVision] = useState(false);\r\n  let handler = () => {\r\n    SetPassVision(!passVision);\r\n  };\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field name=\"login\" type=\"text\" component={Input} placeholder=\"Логин\" />\r\n      <Field name=\"email\" type=\"email\" component={Input} placeholder=\"Почта\" />\r\n      <div className=\"passBlock\">\r\n        <Field name=\"password\" type={!passVision ? \"text\" : \"password\"} placeholder=\"Пароль\" component={Input}/>\r\n        <FontAwesomeIcon onClick={handler} icon={passVision ? \"eye\" : \"eye-slash\"}/>\r\n      </div>\r\n      <Field name=\"passwordAccess\" type={!passVision ? \"text\" : \"password\"} placeholder=\"Введите пароль повторно\" component={Input}/>\r\n      <button type=\"submit\">Регистрация</button>\r\n    </form>\r\n  );\r\n});\r\nexport let Registration = reduxForm<valuesRegistrationType,{}>({\r\n  form: \"Registration\"\r\n})(Registrations);\r\n","import {connect} from \"react-redux\";\r\nimport {Registration} from \"./registration\";\r\nimport React, {FC} from \"react\";\r\nimport {message} from \"antd\";\r\nimport {RequestThunk, RequestThunkResType} from \"../../store/mainReducer\";\r\n\r\nexport type valuesRegistrationType = {\r\n    login: string,\r\n    email: string,\r\n    password: string,\r\n    passwordAccess: string\r\n}\r\nexport type propsRegistration = {\r\n    RequestThunk: (url: string, method: string, body: valuesRegistrationType) => Promise<RequestThunkResType | undefined>\r\n}\r\nlet registrationBlock: FC<propsRegistration> = (props) => {\r\n    let FormReq = async (values: valuesRegistrationType) => {\r\n        let data = await props.RequestThunk(\"/api/registration\", \"POST\", values);\r\n        if (data) {\r\n            let {status, res} = data\r\n            if (status === 201) {\r\n                message.success(res.message);\r\n            } else {\r\n                res.message\r\n                    ? message.error(res.message)\r\n                    : message.error(\"Что-то пошло не так\");\r\n            }\r\n        }\r\n    };\r\n    return <Registration onSubmit={FormReq}/>;\r\n};\r\nexport let RegistrationContainer = connect(null, {RequestThunk})(\r\n    registrationBlock\r\n);\r\n","import {withRouter} from \"react-router-dom\";\r\nimport React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AcceptThunk, AcceptThunkAxiosType} from \"../../store/mainReducer\";\r\nimport {useState} from \"react\";\r\nimport {RouteComponentProps} from \"react-router\";\r\n\r\ntype paramForWithRouter = {\r\n    Id: string\r\n}\r\ntype props = {\r\n    AcceptThunk: (url: string, method: string, body: { id: string }) => Promise<AcceptThunkAxiosType | undefined>\r\n}\r\nlet AcceptAccountBlock: React.FC<RouteComponentProps<paramForWithRouter> & props> = React.memo((props) => {\r\n    let url = props.match.params.Id;\r\n    let AcceptThunk = props.AcceptThunk;\r\n    let [text, setText] = useState<string>(\"\");\r\n    useEffect(() => {\r\n        let acceptAccount: () => void = () => {\r\n            AcceptThunk(\"/api/access\", \"POST\", {id: url}).then((res: AcceptThunkAxiosType | undefined) => {\r\n                res ?\r\n                    setText(res.message) : setText(\"Произошла ошибка, обновите страницу\")\r\n            }).catch(() => {\r\n                setText(\"Произошла ошибка, обновите страницу\")\r\n            });\r\n        };\r\n        acceptAccount();\r\n    }, [url, AcceptThunk]);\r\n    return <div>{text}</div>;\r\n});\r\nlet da = withRouter(AcceptAccountBlock);\r\nexport let AcceptAccount = connect(null, {AcceptThunk})(da);\r\n","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React, { useState } from \"react\";\r\nimport { Input } from \"../contact/input\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {valuesAuthType} from \"./authContainer\";\r\nlet Auths:React.FC<InjectedFormProps<valuesAuthType,{}>&{}> = React.memo((props) => {\r\n  let [passVision, SetPassVision] = useState(false);\r\n  let handler = () => {\r\n    SetPassVision(!passVision);\r\n  };\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field placeholder=\"Почта\" name=\"email\" type=\"email\" component={Input} />\r\n      <div className=\"passBlock\">\r\n        <Field placeholder=\"Пароль\" name=\"password\" type={!passVision ? \"text\" : \"password\"} component={Input}/>\r\n        <FontAwesomeIcon onClick={handler} icon={passVision ? \"eye\" : \"eye-slash\"}/>\r\n      </div>\r\n      <button type=\"submit\">Войти</button>\r\n    </form>\r\n  );\r\n});\r\nexport let Auth = reduxForm<valuesAuthType,{}>({\r\n  form: \"Auth\"\r\n})(Auths);\r\n","import {connect} from \"react-redux\";\r\nimport {Auth} from \"./auth\";\r\nimport React, {FC} from \"react\";\r\nimport {RequestThunk, AuthThunk, RequestThunkResType} from \"../../store/mainReducer\";\r\nimport {message} from \"antd\";\r\nimport {dataType as authDataType} from \"../../store/authReducer\";\r\nexport type valuesAuthType={\r\n    email:string,\r\n    password:string\r\n}\r\nexport type valuesRegistrationType={\r\n    RequestThunk:(url:string,method:string,body:valuesAuthType)=>Promise<RequestThunkResType|undefined>,\r\n    AuthThunk:(token?: string, templates?: Array<authDataType>, login?: string)=>void\r\n}\r\nlet authBlock:FC<valuesRegistrationType> = (props) => {\r\n    let FormReq = async (values:valuesAuthType) => {\r\n        let data = await props.RequestThunk(\"/api/auth\", \"POST\", values);\r\n        if(data) {\r\n            let {status,res} = data;\r\n            if (status === 200) {\r\n                message.success(\"Вы вошли\");\r\n                await props.AuthThunk(res.token, res.templates, res.login);\r\n            } else {\r\n                res.message\r\n                    ? message.error(res.message)\r\n                    : message.error(\"Что-то пошло не так\");\r\n            }\r\n        }\r\n    };\r\n    return <Auth onSubmit={FormReq}/>;\r\n};\r\nexport let AuthContainer = connect(null, {RequestThunk, AuthThunk})(\r\n    authBlock\r\n);\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { AuthContainer } from \"./authContainer\";\r\nimport { RegistrationContainer } from \"./registrationContainer\";\r\nimport { actions } from \"../../store/authReducer\";\r\nlet MapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.authReducer.isAuth,\r\n    loginState: state.authReducer.loginState\r\n  };\r\n};\r\n\r\nlet AccBlock = (props) => {\r\n  let handler = (e) => {\r\n    props.loginStateAC(e.target.getAttribute(\"name\"));\r\n  };\r\n  return props.isAuth ? (\r\n    <Redirect to=\"/\"></Redirect>\r\n  ) : (\r\n    <div className=\"LogRegBlock\">\r\n      <div className=\"LogRegWrapper\">\r\n        <div className=\"LogRegTitles\">\r\n          <h3\r\n            style={{\r\n              color: props.loginState === \"login\" ? \"white\" : \"#c2c2c2\"\r\n            }}\r\n            name=\"login\"\r\n            onClick={handler}\r\n          >\r\n            Вход\r\n          </h3>\r\n          <h3\r\n            style={{\r\n              color: props.loginState === \"registration\" ? \"white\" : \"#c2c2c2\"\r\n            }}\r\n            name=\"registration\"\r\n            onClick={handler}\r\n          >\r\n            Регистрация\r\n          </h3>\r\n        </div>\r\n        <div className=\"LogReg\">\r\n          {props.loginState === \"login\" ? (\r\n            <>\r\n              <AuthContainer></AuthContainer>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <RegistrationContainer></RegistrationContainer>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport let AccountContainer = connect(MapStateToProps, { loginStateAC:actions.loginStateAC })(\r\n  AccBlock\r\n);\r\n","import React from \"react\";\r\n\r\ntype props = {\r\n    isPreloaderVision: boolean,\r\n    preloader: string\r\n}\r\nexport let Preloader:React.FC<props> = React.memo((props) => {\r\n    return (\r\n        <div className={props.isPreloaderVision ? \"preloader\" : \"preloader hidden\"}>\r\n            <img src={props.preloader} alt=\"\"/>\r\n        </div>\r\n    );\r\n});\r\n","import {connect} from \"react-redux\";\r\nimport {Preloader} from \"./preloader\";\r\nimport {GlobalState} from \"../store/store\";\r\nimport preloader from \"./../accets/img/preloader.webp\";\r\n\r\ntype MapStateToPropsType = {\r\n    isPreloaderVision: boolean,\r\n    preloader: string\r\n}\r\nlet MapStateToProps = (state: GlobalState): MapStateToPropsType => {\r\n    return {\r\n        isPreloaderVision: state.authReducer.isPreloaderVision,\r\n        preloader: preloader\r\n    };\r\n};\r\nexport let PreloaderContainer = connect<MapStateToPropsType, {}, {}, GlobalState>(MapStateToProps)(Preloader);\r\n","import React from \"react\";\nimport \"./css/style.scss\";\nimport {HeaderContainer} from \"./components/headerContainer\";\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport {HelpContainer} from \"./components/contact/helpContainer\";\nimport {MainContainer} from \"./components/MainContainer\";\nimport {RegistrationContainer} from \"./components/acc/registrationContainer\";\nimport {AcceptAccount} from \"./components/acc/acceptAccount\";\nimport {useEffect} from \"react\";\n\nimport {AccountContainer} from \"./components/acc/accountContainer\";\nimport {PreloaderContainer} from \"./components/preloaderContainer\";\nimport {dataType as authDataType} from \"./store/authReducer\";\n\ntype props = {\n    stateOfHeader: number,\n    AuthThunk:(token?: string, templates?: Array<authDataType>, login?: string)=>void,\n    isFillingVision: boolean\n}\nexport const App: React.FC<props> = React.memo((props) => {\n    let AuthThunk = props.AuthThunk;\n    useEffect(() => {\n        AuthThunk();\n    }, [AuthThunk]);\n    return (\n        <div className=\"App\">\n            <HeaderContainer/>\n            <main>\n                <Switch>\n                    <Route exact path=\"/\" render={() => <MainContainer/>}/>\n                    <Route exact path=\"/help\" render={() => <HelpContainer  />}/>\n                    <Route exact path=\"/account\" render={() => <AccountContainer/>}/>\n                    <Route exact path=\"/accept/:Id\" render={() => <AcceptAccount/>}/>\n                    <Route exact path=\"/registration\" render={() => <RegistrationContainer/>}/>\n                    <Redirect to={\"/\"}/>\n                </Switch>\n            </main>\n            <PreloaderContainer/>\n        </div>\n    );\n});\n","import {connect} from \"react-redux\";\r\nimport {App} from \"./App\";\r\nimport {AuthThunk} from \"./store/mainReducer\";\r\nimport {GlobalState} from \"./store/store\";\r\nimport {dataType as authDataType} from \"./store/authReducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    stateOfHeader: number,\r\n    isFillingVision: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    AuthThunk:(token?: string, templates?: Array<authDataType>, login?: string)=>void\r\n}\r\nlet MapStateToProps = (state: GlobalState):MapStateToPropsType => ({\r\n    stateOfHeader: state.menuReducer.stateOfHeader,\r\n    isFillingVision: state.mainReducer.isFillingVision\r\n});\r\n\r\nexport let AppContainer = connect<MapStateToPropsType,MapDispatchToPropsType,{},GlobalState>(MapStateToProps, {\r\n    AuthThunk\r\n})(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { mainReducer } from \"./mainReducer\";\r\nimport { menuReducer } from \"./menuReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport thunk from \"redux-thunk\";\r\nlet reducers = combineReducers({\r\n  mainReducer,\r\n  form: formReducer,\r\n  authReducer,\r\n  menuReducer\r\n});\r\nexport type actionsTypes<T extends {[keys:string]:(...args:any[])=>any}>=ReturnType<T extends {[key:string]:infer U}?U:never>;\r\nexport type GlobalState=ReturnType<typeof reducers>\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default store;\r\n","import {\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n  faCogs,\r\n  faEye,\r\n  faTimes,\r\n  faEyeSlash\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nlibrary.add(\r\n  faAngleDoubleRight,\r\n  faAngleDoubleLeft,\r\n  faCogs,\r\n  faTimes,\r\n  faEye,\r\n  faEyeSlash\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AppContainer } from \"./AppContainer\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./accets/FAIcons\";\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}